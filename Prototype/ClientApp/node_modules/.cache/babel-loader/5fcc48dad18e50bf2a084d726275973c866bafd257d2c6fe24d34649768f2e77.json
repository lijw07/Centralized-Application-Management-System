{"ast":null,"code":"import _objectSpread from\"/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Shield,Plus,Trash2,Key,CheckCircle2,Loader,AlertTriangle,ChevronLeft,ChevronRight,ChevronsLeft,ChevronsRight,Search}from'lucide-react';import{roleApi}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Roles=()=>{const[roles,setRoles]=useState([]);const[allRoles,setAllRoles]=useState([]);// Store all roles for client-side operations\nconst[loading,setLoading]=useState(false);const[showRoleForm,setShowRoleForm]=useState(false);const[editingRole,setEditingRole]=useState(null);const[isSubmitting,setIsSubmitting]=useState(false);const[submitSuccess,setSubmitSuccess]=useState(false);const[showDeleteConfirm,setShowDeleteConfirm]=useState(false);const[deletingRole,setDeletingRole]=useState(null);const[deleteSuccess,setDeleteSuccess]=useState(false);// Pagination state\nconst[currentPage,setCurrentPage]=useState(1);const[pageSize,setPageSize]=useState(4);const[totalCount,setTotalCount]=useState(0);const[totalPages,setTotalPages]=useState(0);// Search and sorting state\nconst[searchTerm,setSearchTerm]=useState('');const[sortOrder,setSortOrder]=useState('newest');const[roleForm,setRoleForm]=useState({roleName:''});const fetchAllRoles=async()=>{try{var _response$data;// Fetch all roles by requesting a large page size\nconst response=await roleApi.getAllRoles(1,1000);// Large enough to get all\nif(response.success&&(_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.data){setAllRoles(response.data.data);return response.data.data;}else if(response.success&&response.roles){setAllRoles(response.roles);return response.roles;}return[];}catch(error){console.error('Failed to fetch all roles:',error);return[];}};const fetchRoles=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:currentPage;let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:pageSize;setLoading(true);try{var _response$data2;console.log('Fetching roles...');const response=await roleApi.getAllRoles(page,size);console.log('Fetch roles response:',response);if(response.success&&(_response$data2=response.data)!==null&&_response$data2!==void 0&&_response$data2.data){console.log('Setting roles:',response.data.data);setRoles(response.data.data);setCurrentPage(response.data.page||page);setPageSize(response.data.pageSize||size);setTotalCount(response.data.totalCount||0);setTotalPages(response.data.totalPages||1);}else if(response.success&&response.roles){// Fallback for old API response format - use client-side pagination\nconsole.log('Setting roles (fallback):',response.roles);const startIndex=(page-1)*size;const endIndex=startIndex+size;const paginatedRoles=response.roles.slice(startIndex,endIndex);setRoles(paginatedRoles);// Set pagination values for non-paginated response\nsetTotalCount(response.roles.length);setTotalPages(Math.ceil(response.roles.length/size));setCurrentPage(page);setPageSize(size);}else{console.log('No roles returned or response not successful');}}catch(error){console.error('Failed to fetch roles:',error);}finally{setLoading(false);}};// Smart refetch that handles empty pages after deletion\nconst refetchRoles=async()=>{// First, check the current state after deletion\nconst response=await roleApi.getAllRoles(currentPage,pageSize);if(response.success){var _response$data3;let totalItems=0;if(((_response$data3=response.data)===null||_response$data3===void 0?void 0:_response$data3.totalCount)!==undefined){totalItems=response.data.totalCount;}else if(response.roles){totalItems=response.roles.length;}const newTotalPages=Math.ceil(totalItems/pageSize);// Check if current page is beyond available pages\nif(currentPage>newTotalPages&&totalItems>0){// Navigate to last available page\nsetCurrentPage(newTotalPages);await fetchRoles(newTotalPages,pageSize);}else if(totalItems===0){// If no roles at all, go to page 1\nsetCurrentPage(1);await fetchRoles(1,pageSize);}else{// Current page is valid, just refresh\nawait fetchRoles(currentPage,pageSize);}}else{// If the request failed, just refresh current page\nawait fetchRoles(currentPage,pageSize);}// Also refresh all roles\nawait fetchAllRoles();};// Refetch and navigate to first page (where new items should appear)\nconst refetchAndGoToFirstPage=async()=>{setCurrentPage(1);await fetchRoles(1,pageSize);// Also refresh all roles\nawait fetchAllRoles();};useEffect(()=>{fetchRoles(1,pageSize);// Also fetch all roles for client-side operations\nfetchAllRoles();},[]);// Add escape key listener to close modals\nuseEffect(()=>{const handleEscapeKey=event=>{if(event.key==='Escape'){if(showRoleForm){setShowRoleForm(false);setEditingRole(null);setRoleForm({roleName:''});}}};document.addEventListener('keydown',handleEscapeKey);return()=>{document.removeEventListener('keydown',handleEscapeKey);};},[showRoleForm]);const handleRoleSubmit=async()=>{try{setIsSubmitting(true);if(editingRole){// Update existing role\nconst response=await roleApi.updateRole(editingRole.userRoleId,{roleName:roleForm.roleName});if(response.success){setSubmitSuccess(true);refetchRoles();// Stay on current page when editing\n// Role form will be closed manually by user clicking X\n}else{alert(response.message||'Failed to update role');}}else{// Create new role\nconsole.log('Creating role with name:',roleForm.roleName);const response=await roleApi.createRole({roleName:roleForm.roleName});console.log('Create role response:',response);if(response.success){setSubmitSuccess(true);console.log('Fetching roles after creation...');refetchAndGoToFirstPage();// Go to first page where new role should appear\n// Role form will be closed manually by user clicking X\n}else{alert(response.message||'Failed to create role');}}}catch(error){console.error('Failed to save role:',error);alert(error.message||'Failed to save role');}finally{setIsSubmitting(false);}};const deleteRole=async()=>{if(!deletingRole)return;try{const response=await roleApi.deleteRole(deletingRole.userRoleId);if(response.success){setDeleteSuccess(true);refetchRoles();// Delete success modal will be closed manually by user clicking X\n}else{alert(response.message||'Failed to delete role');}}catch(error){console.error('Failed to delete role:',error);alert(error.message||'Failed to delete role');}};const confirmDeleteRole=role=>{setDeletingRole(role);setShowDeleteConfirm(true);};const openEditRole=role=>{setEditingRole(role);setRoleForm({roleName:role.role});setShowRoleForm(true);};// Use filtered/sorted roles for display (when filters are active)\n// Use backend pagination when no filters are applied\nconst hasFilters=searchTerm!==''||sortOrder==='oldest';// Use allRoles for filtering/sorting, roles for backend pagination\nconst sourceRoles=hasFilters?allRoles:roles;// Filter and sort roles\nconst filteredRoles=sourceRoles.filter(role=>{const matchesSearch=searchTerm===''||role.role.toLowerCase().includes(searchTerm.toLowerCase())||role.createdBy.toLowerCase().includes(searchTerm.toLowerCase());return matchesSearch;});// Sort roles based on creation date\nconst sortedRoles=[...filteredRoles].sort((a,b)=>{const dateA=new Date(a.createdAt).getTime();const dateB=new Date(b.createdAt).getTime();return sortOrder==='newest'?dateB-dateA:dateA-dateB;});let currentRoles,displayTotalPages,displayTotalCount;if(hasFilters){// Client-side pagination for filtered results\nconst startIndex=(currentPage-1)*pageSize;const endIndex=startIndex+pageSize;currentRoles=sortedRoles.slice(startIndex,endIndex);displayTotalPages=Math.ceil(sortedRoles.length/pageSize);displayTotalCount=sortedRoles.length;}else{// Backend pagination for unfiltered results\ncurrentRoles=roles;displayTotalPages=totalPages;displayTotalCount=totalCount;}return/*#__PURE__*/_jsx(\"div\",{className:\"min-vh-100 bg-light\",style:{overflowX:'hidden'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid py-4\",style:{maxWidth:'100%'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-2\",children:[/*#__PURE__*/_jsx(Shield,{className:\"text-primary me-3\",size:32}),/*#__PURE__*/_jsx(\"h1\",{className:\"display-5 fw-bold text-dark mb-0\",children:\"Roles\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted fs-6\",children:\"Manage user roles and their permissions\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card shadow-sm border-0 rounded-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"card-title fw-bold text-dark mb-0 d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Key,{className:\"text-primary me-2\",size:24}),\"System Roles\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowRoleForm(true),className:\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Plus,{className:\"me-2\",size:18}),/*#__PURE__*/_jsx(\"span\",{children:\"Create Role\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"position-absolute top-50 start-0 translate-middle-y ms-3 text-muted\",size:16}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control rounded-3 ps-5\",placeholder:\"Search roles...\",value:searchTerm,onChange:e=>{setSearchTerm(e.target.value);setCurrentPage(1);// Reset to first page when searching\n}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select rounded-3\",value:sortOrder,onChange:async e=>{const newSortOrder=e.target.value;setSortOrder(newSortOrder);setCurrentPage(1);// Reset to first page when sorting changes\n// If switching to oldest first and we don't have all roles, fetch them\nif(newSortOrder==='oldest'&&allRoles.length===0){await fetchAllRoles();}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"newest\",children:\"Newest First\"}),/*#__PURE__*/_jsx(\"option\",{value:\"oldest\",children:\"Oldest First\"})]})})]}),loading?/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center text-muted\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border spinner-border-sm me-2\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),\"Loading roles...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[currentRoles.map(role=>/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border border-light rounded-3 h-100\",style:{cursor:'pointer'},onClick:()=>openEditRole(role),children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-start mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"card-title fw-bold text-dark mb-1 d-flex align-items-center\",style:{wordWrap:'break-word',overflowWrap:'break-word'},children:[role.role,/*#__PURE__*/_jsx(CheckCircle2,{className:\"text-success ms-2\",size:16})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"card-text text-muted small mb-2\",children:[\"Created by \",role.createdBy,\" on \",new Date(role.createdAt).toLocaleDateString()]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-column gap-1\",children:/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();confirmDeleteRole(role);},className:\"btn btn-outline-danger btn-sm rounded-3\",title:\"Delete Role\",children:/*#__PURE__*/_jsx(Trash2,{size:14})})})]})})})},role.userRoleId)),currentRoles.length===0&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5 text-muted\",children:[/*#__PURE__*/_jsx(Shield,{size:48,className:\"mb-3 opacity-50\"}),/*#__PURE__*/_jsx(\"p\",{children:hasFilters?'No roles match your search':'No roles configured yet'})]})})]}),displayTotalCount>4&&/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:hasFilters?\"Showing \".concat(currentRoles.length,\" of \").concat(displayTotalCount,\" roles (filtered)\"):\"Showing \".concat((currentPage-1)*pageSize+1,\" to \").concat(Math.min(currentPage*pageSize,displayTotalCount),\" of \").concat(displayTotalCount,\" roles\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-muted small\",children:\"Roles per page:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select form-select-sm\",style:{width:'auto'},value:pageSize,onChange:e=>{const newPageSize=Number(e.target.value);setPageSize(newPageSize);setCurrentPage(1);if(!hasFilters){fetchRoles(1,newPageSize);}},children:[/*#__PURE__*/_jsx(\"option\",{value:4,children:\"4\"}),/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:20,children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:50,children:\"50\"})]})]})]}),/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"pagination pagination-sm mb-0\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===1?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{setCurrentPage(1);if(!hasFilters){fetchRoles(1,pageSize);}},disabled:currentPage===1,children:/*#__PURE__*/_jsx(ChevronsLeft,{size:16})})}),/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===1?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{const newPage=currentPage-1;setCurrentPage(newPage);if(!hasFilters){fetchRoles(newPage,pageSize);}},disabled:currentPage===1,children:/*#__PURE__*/_jsx(ChevronLeft,{size:16})})}),Array.from({length:Math.min(5,displayTotalPages)},(_,i)=>{let pageNum;if(displayTotalPages<=5){pageNum=i+1;}else if(currentPage<=3){pageNum=i+1;}else if(currentPage>=displayTotalPages-2){pageNum=displayTotalPages-4+i;}else{pageNum=currentPage-2+i;}return/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===pageNum?'active':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{setCurrentPage(pageNum);if(!hasFilters){fetchRoles(pageNum,pageSize);}},children:pageNum})},pageNum);}),/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===displayTotalPages?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{const newPage=currentPage+1;setCurrentPage(newPage);if(!hasFilters){fetchRoles(newPage,pageSize);}},disabled:currentPage===displayTotalPages,children:/*#__PURE__*/_jsx(ChevronRight,{size:16})})}),/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===displayTotalPages?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{setCurrentPage(displayTotalPages);if(!hasFilters){fetchRoles(displayTotalPages,pageSize);}},disabled:currentPage===displayTotalPages,children:/*#__PURE__*/_jsx(ChevronsRight,{size:16})})})]})})]})]})]})}),showRoleForm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal d-block\",style:{backgroundColor:'rgba(0,0,0,0.5)',position:'fixed',top:0,left:0,width:'100%',height:'100%',zIndex:1050},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog modal-dialog-centered\",style:{maxWidth:'90%',margin:'1.75rem auto'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content border-0 rounded-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header border-0 pb-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-title fw-bold\",children:editingRole?'Edit Role':'Create New Role'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>{setShowRoleForm(false);setEditingRole(null);setSubmitSuccess(false);setRoleForm({roleName:''});}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:submitSuccess?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(CheckCircle2,{size:64,className:\"text-success mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-success fw-bold\",children:editingRole?'Role Updated Successfully!':'Role Created Successfully!'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:editingRole?'The role has been updated.':'The new role has been created.'})]}):/*#__PURE__*/_jsx(\"div\",{className:\"row g-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"fw-bold mb-3\",children:\"Role Information\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Role Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:roleForm.roleName,onChange:e=>setRoleForm(_objectSpread(_objectSpread({},roleForm),{},{roleName:e.target.value})),className:\"form-control rounded-3\",placeholder:\"Enter role name\",disabled:isSubmitting})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-footer border-0 pt-0\",children:!submitSuccess&&/*#__PURE__*/_jsx(\"button\",{onClick:handleRoleSubmit,className:\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\",disabled:!roleForm.roleName.trim()||isSubmitting,children:isSubmitting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader,{className:\"me-2 animate-spin\",size:16}),editingRole?'Updating...':'Creating...']}):editingRole?'Update Role':'Create Role'})})]})})}),showDeleteConfirm&&deletingRole&&/*#__PURE__*/_jsx(\"div\",{className:\"modal d-block\",style:{backgroundColor:'rgba(0,0,0,0.5)',position:'fixed',top:0,left:0,width:'100%',height:'100%',zIndex:1050},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog modal-dialog-centered\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content border-0 rounded-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header border-0 pb-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-title fw-bold text-danger\",children:deleteSuccess?'Role Deleted':'Confirm Deletion'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>{setShowDeleteConfirm(false);setDeletingRole(null);setDeleteSuccess(false);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:deleteSuccess?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(CheckCircle2,{size:64,className:\"text-success mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-success fw-bold\",children:\"Role Deleted Successfully!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted\",children:[/*#__PURE__*/_jsx(\"strong\",{children:deletingRole.role}),\" has been permanently removed.\"]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(AlertTriangle,{size:64,className:\"text-warning mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"fw-bold\",children:\"Are you sure you want to delete this role?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-light rounded-3 p-3 my-3\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"fw-bold text-dark mb-1\",children:deletingRole.role}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted small mb-0\",children:[\"Created by \",deletingRole.createdBy,\" on \",new Date(deletingRole.createdAt).toLocaleDateString()]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-danger small fw-semibold\",children:\"\\u26A0\\uFE0F This action cannot be undone. Users with this role may lose access permissions.\"})]})}),!deleteSuccess&&/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer border-0 pt-0\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowDeleteConfirm(false);setDeletingRole(null);},className:\"btn btn-secondary rounded-3 fw-semibold\",children:\"Cancel\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:deleteRole,className:\"btn btn-danger rounded-3 fw-semibold d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Trash2,{className:\"me-2\",size:16}),\"Delete Role\"]})]})]})})})]})});};export default Roles;","map":{"version":3,"names":["React","useState","useEffect","Shield","Plus","Trash2","Key","CheckCircle2","Loader","AlertTriangle","ChevronLeft","ChevronRight","ChevronsLeft","ChevronsRight","Search","roleApi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Roles","roles","setRoles","allRoles","setAllRoles","loading","setLoading","showRoleForm","setShowRoleForm","editingRole","setEditingRole","isSubmitting","setIsSubmitting","submitSuccess","setSubmitSuccess","showDeleteConfirm","setShowDeleteConfirm","deletingRole","setDeletingRole","deleteSuccess","setDeleteSuccess","currentPage","setCurrentPage","pageSize","setPageSize","totalCount","setTotalCount","totalPages","setTotalPages","searchTerm","setSearchTerm","sortOrder","setSortOrder","roleForm","setRoleForm","roleName","fetchAllRoles","_response$data","response","getAllRoles","success","data","error","console","fetchRoles","page","arguments","length","undefined","size","_response$data2","log","startIndex","endIndex","paginatedRoles","slice","Math","ceil","refetchRoles","_response$data3","totalItems","newTotalPages","refetchAndGoToFirstPage","handleEscapeKey","event","key","document","addEventListener","removeEventListener","handleRoleSubmit","updateRole","userRoleId","alert","message","createRole","deleteRole","confirmDeleteRole","role","openEditRole","hasFilters","sourceRoles","filteredRoles","filter","matchesSearch","toLowerCase","includes","createdBy","sortedRoles","sort","a","b","dateA","Date","createdAt","getTime","dateB","currentRoles","displayTotalPages","displayTotalCount","className","style","overflowX","children","maxWidth","onClick","type","placeholder","value","onChange","e","target","newSortOrder","map","cursor","wordWrap","overflowWrap","toLocaleDateString","stopPropagation","title","concat","min","width","newPageSize","Number","disabled","newPage","Array","from","_","i","pageNum","backgroundColor","position","top","left","height","zIndex","margin","_objectSpread","trim"],"sources":["/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/src/components/roles/Roles.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Shield, Plus, Edit, Trash2, Users, Key, CheckCircle2, AlertCircle, Loader, AlertTriangle, ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight, Search } from 'lucide-react';\nimport { roleApi } from '../../services/api';\n\ninterface Role {\n    userRoleId: string;\n    role: string;\n    createdAt: string;\n    createdBy: string;\n}\n\nconst Roles: React.FC = () => {\n    const [roles, setRoles] = useState<Role[]>([]);\n    const [allRoles, setAllRoles] = useState<Role[]>([]); // Store all roles for client-side operations\n    const [loading, setLoading] = useState(false);\n    const [showRoleForm, setShowRoleForm] = useState(false);\n    const [editingRole, setEditingRole] = useState<Role | null>(null);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [submitSuccess, setSubmitSuccess] = useState(false);\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n    const [deletingRole, setDeletingRole] = useState<Role | null>(null);\n    const [deleteSuccess, setDeleteSuccess] = useState(false);\n\n    // Pagination state\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(4);\n    const [totalCount, setTotalCount] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n\n    // Search and sorting state\n    const [searchTerm, setSearchTerm] = useState('');\n    const [sortOrder, setSortOrder] = useState<'newest' | 'oldest'>('newest');\n\n    const [roleForm, setRoleForm] = useState({\n        roleName: ''\n    });\n\n    const fetchAllRoles = async () => {\n        try {\n            // Fetch all roles by requesting a large page size\n            const response = await roleApi.getAllRoles(1, 1000); // Large enough to get all\n            if (response.success && response.data?.data) {\n                setAllRoles(response.data.data);\n                return response.data.data;\n            } else if (response.success && response.roles) {\n                setAllRoles(response.roles);\n                return response.roles;\n            }\n            return [];\n        } catch (error) {\n            console.error('Failed to fetch all roles:', error);\n            return [];\n        }\n    };\n\n    const fetchRoles = async (page: number = currentPage, size: number = pageSize) => {\n        setLoading(true);\n        try {\n            console.log('Fetching roles...');\n            const response = await roleApi.getAllRoles(page, size);\n            console.log('Fetch roles response:', response);\n            if (response.success && response.data?.data) {\n                console.log('Setting roles:', response.data.data);\n                setRoles(response.data.data);\n                setCurrentPage(response.data.page || page);\n                setPageSize(response.data.pageSize || size);\n                setTotalCount(response.data.totalCount || 0);\n                setTotalPages(response.data.totalPages || 1);\n            } else if (response.success && response.roles) {\n                // Fallback for old API response format - use client-side pagination\n                console.log('Setting roles (fallback):', response.roles);\n                const startIndex = (page - 1) * size;\n                const endIndex = startIndex + size;\n                const paginatedRoles = response.roles.slice(startIndex, endIndex);\n                setRoles(paginatedRoles);\n                // Set pagination values for non-paginated response\n                setTotalCount(response.roles.length);\n                setTotalPages(Math.ceil(response.roles.length / size));\n                setCurrentPage(page);\n                setPageSize(size);\n            } else {\n                console.log('No roles returned or response not successful');\n            }\n        } catch (error) {\n            console.error('Failed to fetch roles:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Smart refetch that handles empty pages after deletion\n    const refetchRoles = async () => {\n        // First, check the current state after deletion\n        const response = await roleApi.getAllRoles(currentPage, pageSize);\n        if (response.success) {\n            let totalItems = 0;\n            if (response.data?.totalCount !== undefined) {\n                totalItems = response.data.totalCount;\n            } else if (response.roles) {\n                totalItems = response.roles.length;\n            }\n            \n            const newTotalPages = Math.ceil(totalItems / pageSize);\n            \n            // Check if current page is beyond available pages\n            if (currentPage > newTotalPages && totalItems > 0) {\n                // Navigate to last available page\n                setCurrentPage(newTotalPages);\n                await fetchRoles(newTotalPages, pageSize);\n            } else if (totalItems === 0) {\n                // If no roles at all, go to page 1\n                setCurrentPage(1);\n                await fetchRoles(1, pageSize);\n            } else {\n                // Current page is valid, just refresh\n                await fetchRoles(currentPage, pageSize);\n            }\n        } else {\n            // If the request failed, just refresh current page\n            await fetchRoles(currentPage, pageSize);\n        }\n        // Also refresh all roles\n        await fetchAllRoles();\n    };\n\n    // Refetch and navigate to first page (where new items should appear)\n    const refetchAndGoToFirstPage = async () => {\n        setCurrentPage(1);\n        await fetchRoles(1, pageSize);\n        // Also refresh all roles\n        await fetchAllRoles();\n    };\n\n    useEffect(() => {\n        fetchRoles(1, pageSize);\n        // Also fetch all roles for client-side operations\n        fetchAllRoles();\n    }, []);\n\n    // Add escape key listener to close modals\n    useEffect(() => {\n        const handleEscapeKey = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') {\n                if (showRoleForm) {\n                    setShowRoleForm(false);\n                    setEditingRole(null);\n                    setRoleForm({ roleName: '' });\n                }\n            }\n        };\n\n        document.addEventListener('keydown', handleEscapeKey);\n        return () => {\n            document.removeEventListener('keydown', handleEscapeKey);\n        };\n    }, [showRoleForm]);\n\n    const handleRoleSubmit = async () => {\n        try {\n            setIsSubmitting(true);\n            if (editingRole) {\n                // Update existing role\n                const response = await roleApi.updateRole(editingRole.userRoleId, { roleName: roleForm.roleName });\n                if (response.success) {\n                    setSubmitSuccess(true);\n                    refetchRoles(); // Stay on current page when editing\n                    \n                    // Role form will be closed manually by user clicking X\n                } else {\n                    alert(response.message || 'Failed to update role');\n                }\n            } else {\n                // Create new role\n                console.log('Creating role with name:', roleForm.roleName);\n                const response = await roleApi.createRole({ roleName: roleForm.roleName });\n                console.log('Create role response:', response);\n                if (response.success) {\n                    setSubmitSuccess(true);\n                    console.log('Fetching roles after creation...');\n                    refetchAndGoToFirstPage(); // Go to first page where new role should appear\n                    \n                    // Role form will be closed manually by user clicking X\n                } else {\n                    alert(response.message || 'Failed to create role');\n                }\n            }\n        } catch (error: any) {\n            console.error('Failed to save role:', error);\n            alert(error.message || 'Failed to save role');\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    const deleteRole = async () => {\n        if (!deletingRole) return;\n\n        try {\n            const response = await roleApi.deleteRole(deletingRole.userRoleId);\n            if (response.success) {\n                setDeleteSuccess(true);\n                refetchRoles();\n                \n                // Delete success modal will be closed manually by user clicking X\n            } else {\n                alert(response.message || 'Failed to delete role');\n            }\n        } catch (error: any) {\n            console.error('Failed to delete role:', error);\n            alert(error.message || 'Failed to delete role');\n        }\n    };\n\n    const confirmDeleteRole = (role: Role) => {\n        setDeletingRole(role);\n        setShowDeleteConfirm(true);\n    };\n\n\n    const openEditRole = (role: Role) => {\n        setEditingRole(role);\n        setRoleForm({\n            roleName: role.role\n        });\n        setShowRoleForm(true);\n    };\n\n    // Use filtered/sorted roles for display (when filters are active)\n    // Use backend pagination when no filters are applied\n    const hasFilters = searchTerm !== '' || sortOrder === 'oldest';\n    \n    // Use allRoles for filtering/sorting, roles for backend pagination\n    const sourceRoles = hasFilters ? allRoles : roles;\n    \n    // Filter and sort roles\n    const filteredRoles = sourceRoles.filter(role => {\n        const matchesSearch = searchTerm === '' || \n                             role.role.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                             role.createdBy.toLowerCase().includes(searchTerm.toLowerCase());\n        return matchesSearch;\n    });\n\n    // Sort roles based on creation date\n    const sortedRoles = [...filteredRoles].sort((a, b) => {\n        const dateA = new Date(a.createdAt).getTime();\n        const dateB = new Date(b.createdAt).getTime();\n        return sortOrder === 'newest' ? dateB - dateA : dateA - dateB;\n    });\n    \n    let currentRoles: Role[], displayTotalPages: number, displayTotalCount: number;\n    if (hasFilters) {\n        // Client-side pagination for filtered results\n        const startIndex = (currentPage - 1) * pageSize;\n        const endIndex = startIndex + pageSize;\n        currentRoles = sortedRoles.slice(startIndex, endIndex);\n        displayTotalPages = Math.ceil(sortedRoles.length / pageSize);\n        displayTotalCount = sortedRoles.length;\n    } else {\n        // Backend pagination for unfiltered results\n        currentRoles = roles;\n        displayTotalPages = totalPages;\n        displayTotalCount = totalCount;\n    }\n\n    return (\n        <div className=\"min-vh-100 bg-light\" style={{overflowX: 'hidden'}}>\n            <div className=\"container-fluid py-4\" style={{maxWidth: '100%'}}>\n                {/* Header */}\n                <div className=\"mb-4\">\n                    <div className=\"d-flex align-items-center mb-2\">\n                        <Shield className=\"text-primary me-3\" size={32} />\n                        <h1 className=\"display-5 fw-bold text-dark mb-0\">Roles</h1>\n                    </div>\n                    <p className=\"text-muted fs-6\">Manage user roles and their permissions</p>\n                </div>\n\n                {/* Roles */}\n                <div className=\"card shadow-sm border-0 rounded-4\">\n                    <div className=\"card-body p-4\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                            <h2 className=\"card-title fw-bold text-dark mb-0 d-flex align-items-center\">\n                                <Key className=\"text-primary me-2\" size={24} />\n                                System Roles\n                            </h2>\n                            <button\n                                onClick={() => setShowRoleForm(true)}\n                                className=\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\"\n                            >\n                                <Plus className=\"me-2\" size={18} />\n                                <span>Create Role</span>\n                            </button>\n                        </div>\n\n                        {/* Search and Sort Controls */}\n                        <div className=\"row g-3 mb-4\">\n                            <div className=\"col-md-8\">\n                                <div className=\"position-relative\">\n                                    <Search className=\"position-absolute top-50 start-0 translate-middle-y ms-3 text-muted\" size={16} />\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control rounded-3 ps-5\"\n                                        placeholder=\"Search roles...\"\n                                        value={searchTerm}\n                                        onChange={(e) => {\n                                            setSearchTerm(e.target.value);\n                                            setCurrentPage(1); // Reset to first page when searching\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <select\n                                    className=\"form-select rounded-3\"\n                                    value={sortOrder}\n                                    onChange={async (e) => {\n                                        const newSortOrder = e.target.value as 'newest' | 'oldest';\n                                        setSortOrder(newSortOrder);\n                                        setCurrentPage(1); // Reset to first page when sorting changes\n                                        \n                                        // If switching to oldest first and we don't have all roles, fetch them\n                                        if (newSortOrder === 'oldest' && allRoles.length === 0) {\n                                            await fetchAllRoles();\n                                        }\n                                    }}\n                                >\n                                    <option value=\"newest\">Newest First</option>\n                                    <option value=\"oldest\">Oldest First</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        {loading ? (\n                            <div className=\"d-flex align-items-center text-muted\">\n                                <div className=\"spinner-border spinner-border-sm me-2\" role=\"status\">\n                                    <span className=\"visually-hidden\">Loading...</span>\n                                </div>\n                                Loading roles...\n                            </div>\n                        ) : (\n                            <>\n                                <div className=\"row g-3\">\n                                    {currentRoles.map((role) => (\n                                        <div key={role.userRoleId} className=\"col-12\">\n                                            <div \n                                                className=\"card border border-light rounded-3 h-100\" \n                                                style={{cursor: 'pointer'}}\n                                                onClick={() => openEditRole(role)}\n                                            >\n                                                <div className=\"card-body p-4\">\n                                                    <div className=\"d-flex justify-content-between align-items-start mb-3\">\n                                                        <div className=\"flex-grow-1\">\n                                                            <h5 className=\"card-title fw-bold text-dark mb-1 d-flex align-items-center\" style={{wordWrap: 'break-word', overflowWrap: 'break-word'}}>\n                                                                {role.role}\n                                                                <CheckCircle2 className=\"text-success ms-2\" size={16} />\n                                                            </h5>\n                                                            <p className=\"card-text text-muted small mb-2\">\n                                                                Created by {role.createdBy} on {new Date(role.createdAt).toLocaleDateString()}\n                                                            </p>\n                                                        </div>\n                                                        <div className=\"d-flex flex-column gap-1\">\n                                                            <button\n                                                                onClick={(e) => {\n                                                                    e.stopPropagation();\n                                                                    confirmDeleteRole(role);\n                                                                }}\n                                                                className=\"btn btn-outline-danger btn-sm rounded-3\"\n                                                                title=\"Delete Role\"\n                                                            >\n                                                                <Trash2 size={14} />\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                    {currentRoles.length === 0 && !loading && (\n                                        <div className=\"col-12\">\n                                            <div className=\"text-center py-5 text-muted\">\n                                                <Shield size={48} className=\"mb-3 opacity-50\" />\n                                                <p>{hasFilters ? 'No roles match your search' : 'No roles configured yet'}</p>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n\n                                {/* Pagination */}\n                                {displayTotalCount > 4 && (\n                            <div className=\"d-flex justify-content-between align-items-center mt-4\">\n                                <div className=\"d-flex align-items-center gap-3\">\n                                    <span className=\"text-muted\">\n                                        {hasFilters ? (\n                                            `Showing ${currentRoles.length} of ${displayTotalCount} roles (filtered)`\n                                        ) : (\n                                            `Showing ${((currentPage - 1) * pageSize) + 1} to ${Math.min(currentPage * pageSize, displayTotalCount)} of ${displayTotalCount} roles`\n                                        )}\n                                    </span>\n                                    <div className=\"d-flex align-items-center gap-2\">\n                                        <span className=\"text-muted small\">Roles per page:</span>\n                                        <select \n                                            className=\"form-select form-select-sm\" \n                                            style={{width: 'auto'}}\n                                            value={pageSize}\n                                            onChange={(e) => {\n                                                const newPageSize = Number(e.target.value);\n                                                setPageSize(newPageSize);\n                                                setCurrentPage(1);\n                                                if (!hasFilters) {\n                                                    fetchRoles(1, newPageSize);\n                                                }\n                                            }}\n                                        >\n                                            <option value={4}>4</option>\n                                            <option value={10}>10</option>\n                                            <option value={20}>20</option>\n                                            <option value={50}>50</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                \n                                <nav>\n                                    <ul className=\"pagination pagination-sm mb-0\">\n                                        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n                                            <button \n                                                className=\"page-link\" \n                                                onClick={() => {\n                                                    setCurrentPage(1);\n                                                    if (!hasFilters) {\n                                                        fetchRoles(1, pageSize);\n                                                    }\n                                                }}\n                                                disabled={currentPage === 1}\n                                            >\n                                                <ChevronsLeft size={16} />\n                                            </button>\n                                        </li>\n                                        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n                                            <button \n                                                className=\"page-link\" \n                                                onClick={() => {\n                                                    const newPage = currentPage - 1;\n                                                    setCurrentPage(newPage);\n                                                    if (!hasFilters) {\n                                                        fetchRoles(newPage, pageSize);\n                                                    }\n                                                }}\n                                                disabled={currentPage === 1}\n                                            >\n                                                <ChevronLeft size={16} />\n                                            </button>\n                                        </li>\n                                        \n                                        {/* Page numbers */}\n                                        {Array.from({ length: Math.min(5, displayTotalPages) }, (_, i) => {\n                                            let pageNum: number;\n                                            if (displayTotalPages <= 5) {\n                                                pageNum = i + 1;\n                                            } else if (currentPage <= 3) {\n                                                pageNum = i + 1;\n                                            } else if (currentPage >= displayTotalPages - 2) {\n                                                pageNum = displayTotalPages - 4 + i;\n                                            } else {\n                                                pageNum = currentPage - 2 + i;\n                                            }\n                                            \n                                            return (\n                                                <li key={pageNum} className={`page-item ${currentPage === pageNum ? 'active' : ''}`}>\n                                                    <button \n                                                        className=\"page-link\" \n                                                        onClick={() => {\n                                                            setCurrentPage(pageNum);\n                                                            if (!hasFilters) {\n                                                                fetchRoles(pageNum, pageSize);\n                                                            }\n                                                        }}\n                                                    >\n                                                        {pageNum}\n                                                    </button>\n                                                </li>\n                                            );\n                                        })}\n                                        \n                                        <li className={`page-item ${currentPage === displayTotalPages ? 'disabled' : ''}`}>\n                                            <button \n                                                className=\"page-link\" \n                                                onClick={() => {\n                                                    const newPage = currentPage + 1;\n                                                    setCurrentPage(newPage);\n                                                    if (!hasFilters) {\n                                                        fetchRoles(newPage, pageSize);\n                                                    }\n                                                }}\n                                                disabled={currentPage === displayTotalPages}\n                                            >\n                                                <ChevronRight size={16} />\n                                            </button>\n                                        </li>\n                                        <li className={`page-item ${currentPage === displayTotalPages ? 'disabled' : ''}`}>\n                                            <button \n                                                className=\"page-link\" \n                                                onClick={() => {\n                                                    setCurrentPage(displayTotalPages);\n                                                    if (!hasFilters) {\n                                                        fetchRoles(displayTotalPages, pageSize);\n                                                    }\n                                                }}\n                                                disabled={currentPage === displayTotalPages}\n                                            >\n                                                <ChevronsRight size={16} />\n                                            </button>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </div>\n                        )}\n                            </>\n                        )}\n                    </div>\n                </div>\n\n                {/* Role Form Modal */}\n                {showRoleForm && (\n                    <div className=\"modal d-block\" style={{backgroundColor: 'rgba(0,0,0,0.5)', position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', zIndex: 1050}}>\n                        <div className=\"modal-dialog modal-dialog-centered\" style={{maxWidth: '90%', margin: '1.75rem auto'}}>\n                            <div className=\"modal-content border-0 rounded-4\">\n                                <div className=\"modal-header border-0 pb-0\">\n                                    <h3 className=\"modal-title fw-bold\">\n                                        {editingRole ? 'Edit Role' : 'Create New Role'}\n                                    </h3>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn-close\"\n                                        onClick={() => {\n                                            setShowRoleForm(false);\n                                            setEditingRole(null);\n                                            setSubmitSuccess(false);\n                                            setRoleForm({\n                                                roleName: ''\n                                            });\n                                        }}\n                                    ></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    {submitSuccess ? (\n                                        <div className=\"text-center py-4\">\n                                            <CheckCircle2 size={64} className=\"text-success mb-3\" />\n                                            <h4 className=\"text-success fw-bold\">\n                                                {editingRole ? 'Role Updated Successfully!' : 'Role Created Successfully!'}\n                                            </h4>\n                                            <p className=\"text-muted\">\n                                                {editingRole ? 'The role has been updated.' : 'The new role has been created.'}\n                                            </p>\n                                        </div>\n                                    ) : (\n                                        <div className=\"row g-4\">\n                                            <div className=\"col-12\">\n                                                <h5 className=\"fw-bold mb-3\">Role Information</h5>\n                                                <div className=\"mb-3\">\n                                                    <label className=\"form-label fw-semibold\">Role Name</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={roleForm.roleName}\n                                                        onChange={(e) => setRoleForm({...roleForm, roleName: e.target.value})}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"Enter role name\"\n                                                        disabled={isSubmitting}\n                                                    />\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"modal-footer border-0 pt-0\">\n                                    {!submitSuccess && (\n                                        <button\n                                            onClick={handleRoleSubmit}\n                                            className=\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\"\n                                            disabled={!roleForm.roleName.trim() || isSubmitting}\n                                        >\n                                            {isSubmitting ? (\n                                                <>\n                                                    <Loader className=\"me-2 animate-spin\" size={16} />\n                                                    {editingRole ? 'Updating...' : 'Creating...'}\n                                                </>\n                                            ) : (\n                                                editingRole ? 'Update Role' : 'Create Role'\n                                            )}\n                                        </button>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Delete Confirmation Modal */}\n                {showDeleteConfirm && deletingRole && (\n                    <div className=\"modal d-block\" style={{backgroundColor: 'rgba(0,0,0,0.5)', position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', zIndex: 1050}}>\n                        <div className=\"modal-dialog modal-dialog-centered\">\n                            <div className=\"modal-content border-0 rounded-4\">\n                                <div className=\"modal-header border-0 pb-0\">\n                                    <h3 className=\"modal-title fw-bold text-danger\">\n                                        {deleteSuccess ? 'Role Deleted' : 'Confirm Deletion'}\n                                    </h3>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn-close\"\n                                        onClick={() => {\n                                            setShowDeleteConfirm(false);\n                                            setDeletingRole(null);\n                                            setDeleteSuccess(false);\n                                        }}\n                                    ></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    {deleteSuccess ? (\n                                        <div className=\"text-center py-4\">\n                                            <CheckCircle2 size={64} className=\"text-success mb-3\" />\n                                            <h4 className=\"text-success fw-bold\">Role Deleted Successfully!</h4>\n                                            <p className=\"text-muted\">\n                                                <strong>{deletingRole.role}</strong> has been permanently removed.\n                                            </p>\n                                        </div>\n                                    ) : (\n                                        <div className=\"text-center py-4\">\n                                            <AlertTriangle size={64} className=\"text-warning mb-3\" />\n                                            <h4 className=\"fw-bold\">Are you sure you want to delete this role?</h4>\n                                            <div className=\"bg-light rounded-3 p-3 my-3\">\n                                                <h5 className=\"fw-bold text-dark mb-1\">{deletingRole.role}</h5>\n                                                <p className=\"text-muted small mb-0\">Created by {deletingRole.createdBy} on {new Date(deletingRole.createdAt).toLocaleDateString()}</p>\n                                            </div>\n                                            <p className=\"text-danger small fw-semibold\">\n                                                ⚠️ This action cannot be undone. Users with this role may lose access permissions.\n                                            </p>\n                                        </div>\n                                    )}\n                                </div>\n                                {!deleteSuccess && (\n                                    <div className=\"modal-footer border-0 pt-0\">\n                                        <button\n                                            onClick={() => {\n                                                setShowDeleteConfirm(false);\n                                                setDeletingRole(null);\n                                            }}\n                                            className=\"btn btn-secondary rounded-3 fw-semibold\"\n                                        >\n                                            Cancel\n                                        </button>\n                                        <button\n                                            onClick={deleteRole}\n                                            className=\"btn btn-danger rounded-3 fw-semibold d-flex align-items-center\"\n                                        >\n                                            <Trash2 className=\"me-2\" size={16} />\n                                            Delete Role\n                                        </button>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Roles;"],"mappings":"6IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,MAAM,CAAEC,IAAI,CAAQC,MAAM,CAASC,GAAG,CAAEC,YAAY,CAAeC,MAAM,CAAEC,aAAa,CAAEC,WAAW,CAAEC,YAAY,CAAEC,YAAY,CAAEC,aAAa,CAAEC,MAAM,KAAQ,cAAc,CACvL,OAASC,OAAO,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAS7C,KAAM,CAAAC,KAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGvB,QAAQ,CAAS,EAAE,CAAC,CAC9C,KAAM,CAACwB,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAS,EAAE,CAAC,CAAE;AACtD,KAAM,CAAC0B,OAAO,CAAEC,UAAU,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC4B,YAAY,CAAEC,eAAe,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAC8B,WAAW,CAAEC,cAAc,CAAC,CAAG/B,QAAQ,CAAc,IAAI,CAAC,CACjE,KAAM,CAACgC,YAAY,CAAEC,eAAe,CAAC,CAAGjC,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACkC,aAAa,CAAEC,gBAAgB,CAAC,CAAGnC,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACoC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACsC,YAAY,CAAEC,eAAe,CAAC,CAAGvC,QAAQ,CAAc,IAAI,CAAC,CACnE,KAAM,CAACwC,aAAa,CAAEC,gBAAgB,CAAC,CAAGzC,QAAQ,CAAC,KAAK,CAAC,CAEzD;AACA,KAAM,CAAC0C,WAAW,CAAEC,cAAc,CAAC,CAAG3C,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAAC4C,QAAQ,CAAEC,WAAW,CAAC,CAAG7C,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAAC8C,UAAU,CAAEC,aAAa,CAAC,CAAG/C,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACgD,UAAU,CAAEC,aAAa,CAAC,CAAGjD,QAAQ,CAAC,CAAC,CAAC,CAE/C;AACA,KAAM,CAACkD,UAAU,CAAEC,aAAa,CAAC,CAAGnD,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACoD,SAAS,CAAEC,YAAY,CAAC,CAAGrD,QAAQ,CAAsB,QAAQ,CAAC,CAEzE,KAAM,CAACsD,QAAQ,CAAEC,WAAW,CAAC,CAAGvD,QAAQ,CAAC,CACrCwD,QAAQ,CAAE,EACd,CAAC,CAAC,CAEF,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,KAAAC,cAAA,CACA;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA7C,OAAO,CAAC8C,WAAW,CAAC,CAAC,CAAE,IAAI,CAAC,CAAE;AACrD,GAAID,QAAQ,CAACE,OAAO,GAAAH,cAAA,CAAIC,QAAQ,CAACG,IAAI,UAAAJ,cAAA,WAAbA,cAAA,CAAeI,IAAI,CAAE,CACzCrC,WAAW,CAACkC,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CAC/B,MAAO,CAAAH,QAAQ,CAACG,IAAI,CAACA,IAAI,CAC7B,CAAC,IAAM,IAAIH,QAAQ,CAACE,OAAO,EAAIF,QAAQ,CAACrC,KAAK,CAAE,CAC3CG,WAAW,CAACkC,QAAQ,CAACrC,KAAK,CAAC,CAC3B,MAAO,CAAAqC,QAAQ,CAACrC,KAAK,CACzB,CACA,MAAO,EAAE,CACb,CAAE,MAAOyC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,EAAE,CACb,CACJ,CAAC,CAED,KAAM,CAAAE,UAAU,CAAG,cAAAA,CAAA,CAA+D,IAAxD,CAAAC,IAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGzB,WAAW,IAAE,CAAA4B,IAAY,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGvB,QAAQ,CACzEjB,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,KAAA4C,eAAA,CACAP,OAAO,CAACQ,GAAG,CAAC,mBAAmB,CAAC,CAChC,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAA7C,OAAO,CAAC8C,WAAW,CAACM,IAAI,CAAEI,IAAI,CAAC,CACtDN,OAAO,CAACQ,GAAG,CAAC,uBAAuB,CAAEb,QAAQ,CAAC,CAC9C,GAAIA,QAAQ,CAACE,OAAO,GAAAU,eAAA,CAAIZ,QAAQ,CAACG,IAAI,UAAAS,eAAA,WAAbA,eAAA,CAAeT,IAAI,CAAE,CACzCE,OAAO,CAACQ,GAAG,CAAC,gBAAgB,CAAEb,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CACjDvC,QAAQ,CAACoC,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CAC5BnB,cAAc,CAACgB,QAAQ,CAACG,IAAI,CAACI,IAAI,EAAIA,IAAI,CAAC,CAC1CrB,WAAW,CAACc,QAAQ,CAACG,IAAI,CAAClB,QAAQ,EAAI0B,IAAI,CAAC,CAC3CvB,aAAa,CAACY,QAAQ,CAACG,IAAI,CAAChB,UAAU,EAAI,CAAC,CAAC,CAC5CG,aAAa,CAACU,QAAQ,CAACG,IAAI,CAACd,UAAU,EAAI,CAAC,CAAC,CAChD,CAAC,IAAM,IAAIW,QAAQ,CAACE,OAAO,EAAIF,QAAQ,CAACrC,KAAK,CAAE,CAC3C;AACA0C,OAAO,CAACQ,GAAG,CAAC,2BAA2B,CAAEb,QAAQ,CAACrC,KAAK,CAAC,CACxD,KAAM,CAAAmD,UAAU,CAAG,CAACP,IAAI,CAAG,CAAC,EAAII,IAAI,CACpC,KAAM,CAAAI,QAAQ,CAAGD,UAAU,CAAGH,IAAI,CAClC,KAAM,CAAAK,cAAc,CAAGhB,QAAQ,CAACrC,KAAK,CAACsD,KAAK,CAACH,UAAU,CAAEC,QAAQ,CAAC,CACjEnD,QAAQ,CAACoD,cAAc,CAAC,CACxB;AACA5B,aAAa,CAACY,QAAQ,CAACrC,KAAK,CAAC8C,MAAM,CAAC,CACpCnB,aAAa,CAAC4B,IAAI,CAACC,IAAI,CAACnB,QAAQ,CAACrC,KAAK,CAAC8C,MAAM,CAAGE,IAAI,CAAC,CAAC,CACtD3B,cAAc,CAACuB,IAAI,CAAC,CACpBrB,WAAW,CAACyB,IAAI,CAAC,CACrB,CAAC,IAAM,CACHN,OAAO,CAACQ,GAAG,CAAC,8CAA8C,CAAC,CAC/D,CACJ,CAAE,MAAOT,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAClD,CAAC,OAAS,CACNpC,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED;AACA,KAAM,CAAAoD,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B;AACA,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAA7C,OAAO,CAAC8C,WAAW,CAAClB,WAAW,CAAEE,QAAQ,CAAC,CACjE,GAAIe,QAAQ,CAACE,OAAO,CAAE,KAAAmB,eAAA,CAClB,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClB,GAAI,EAAAD,eAAA,CAAArB,QAAQ,CAACG,IAAI,UAAAkB,eAAA,iBAAbA,eAAA,CAAelC,UAAU,IAAKuB,SAAS,CAAE,CACzCY,UAAU,CAAGtB,QAAQ,CAACG,IAAI,CAAChB,UAAU,CACzC,CAAC,IAAM,IAAIa,QAAQ,CAACrC,KAAK,CAAE,CACvB2D,UAAU,CAAGtB,QAAQ,CAACrC,KAAK,CAAC8C,MAAM,CACtC,CAEA,KAAM,CAAAc,aAAa,CAAGL,IAAI,CAACC,IAAI,CAACG,UAAU,CAAGrC,QAAQ,CAAC,CAEtD;AACA,GAAIF,WAAW,CAAGwC,aAAa,EAAID,UAAU,CAAG,CAAC,CAAE,CAC/C;AACAtC,cAAc,CAACuC,aAAa,CAAC,CAC7B,KAAM,CAAAjB,UAAU,CAACiB,aAAa,CAAEtC,QAAQ,CAAC,CAC7C,CAAC,IAAM,IAAIqC,UAAU,GAAK,CAAC,CAAE,CACzB;AACAtC,cAAc,CAAC,CAAC,CAAC,CACjB,KAAM,CAAAsB,UAAU,CAAC,CAAC,CAAErB,QAAQ,CAAC,CACjC,CAAC,IAAM,CACH;AACA,KAAM,CAAAqB,UAAU,CAACvB,WAAW,CAAEE,QAAQ,CAAC,CAC3C,CACJ,CAAC,IAAM,CACH;AACA,KAAM,CAAAqB,UAAU,CAACvB,WAAW,CAAEE,QAAQ,CAAC,CAC3C,CACA;AACA,KAAM,CAAAa,aAAa,CAAC,CAAC,CACzB,CAAC,CAED;AACA,KAAM,CAAA0B,uBAAuB,CAAG,KAAAA,CAAA,GAAY,CACxCxC,cAAc,CAAC,CAAC,CAAC,CACjB,KAAM,CAAAsB,UAAU,CAAC,CAAC,CAAErB,QAAQ,CAAC,CAC7B;AACA,KAAM,CAAAa,aAAa,CAAC,CAAC,CACzB,CAAC,CAEDxD,SAAS,CAAC,IAAM,CACZgE,UAAU,CAAC,CAAC,CAAErB,QAAQ,CAAC,CACvB;AACAa,aAAa,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN;AACAxD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAmF,eAAe,CAAIC,KAAoB,EAAK,CAC9C,GAAIA,KAAK,CAACC,GAAG,GAAK,QAAQ,CAAE,CACxB,GAAI1D,YAAY,CAAE,CACdC,eAAe,CAAC,KAAK,CAAC,CACtBE,cAAc,CAAC,IAAI,CAAC,CACpBwB,WAAW,CAAC,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CACjC,CACJ,CACJ,CAAC,CAED+B,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAEJ,eAAe,CAAC,CACrD,MAAO,IAAM,CACTG,QAAQ,CAACE,mBAAmB,CAAC,SAAS,CAAEL,eAAe,CAAC,CAC5D,CAAC,CACL,CAAC,CAAE,CAACxD,YAAY,CAAC,CAAC,CAElB,KAAM,CAAA8D,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACAzD,eAAe,CAAC,IAAI,CAAC,CACrB,GAAIH,WAAW,CAAE,CACb;AACA,KAAM,CAAA6B,QAAQ,CAAG,KAAM,CAAA7C,OAAO,CAAC6E,UAAU,CAAC7D,WAAW,CAAC8D,UAAU,CAAE,CAAEpC,QAAQ,CAAEF,QAAQ,CAACE,QAAS,CAAC,CAAC,CAClG,GAAIG,QAAQ,CAACE,OAAO,CAAE,CAClB1B,gBAAgB,CAAC,IAAI,CAAC,CACtB4C,YAAY,CAAC,CAAC,CAAE;AAEhB;AACJ,CAAC,IAAM,CACHc,KAAK,CAAClC,QAAQ,CAACmC,OAAO,EAAI,uBAAuB,CAAC,CACtD,CACJ,CAAC,IAAM,CACH;AACA9B,OAAO,CAACQ,GAAG,CAAC,0BAA0B,CAAElB,QAAQ,CAACE,QAAQ,CAAC,CAC1D,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAA7C,OAAO,CAACiF,UAAU,CAAC,CAAEvC,QAAQ,CAAEF,QAAQ,CAACE,QAAS,CAAC,CAAC,CAC1EQ,OAAO,CAACQ,GAAG,CAAC,uBAAuB,CAAEb,QAAQ,CAAC,CAC9C,GAAIA,QAAQ,CAACE,OAAO,CAAE,CAClB1B,gBAAgB,CAAC,IAAI,CAAC,CACtB6B,OAAO,CAACQ,GAAG,CAAC,kCAAkC,CAAC,CAC/CW,uBAAuB,CAAC,CAAC,CAAE;AAE3B;AACJ,CAAC,IAAM,CACHU,KAAK,CAAClC,QAAQ,CAACmC,OAAO,EAAI,uBAAuB,CAAC,CACtD,CACJ,CACJ,CAAE,MAAO/B,KAAU,CAAE,CACjBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C8B,KAAK,CAAC9B,KAAK,CAAC+B,OAAO,EAAI,qBAAqB,CAAC,CACjD,CAAC,OAAS,CACN7D,eAAe,CAAC,KAAK,CAAC,CAC1B,CACJ,CAAC,CAED,KAAM,CAAA+D,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CAAC1D,YAAY,CAAE,OAEnB,GAAI,CACA,KAAM,CAAAqB,QAAQ,CAAG,KAAM,CAAA7C,OAAO,CAACkF,UAAU,CAAC1D,YAAY,CAACsD,UAAU,CAAC,CAClE,GAAIjC,QAAQ,CAACE,OAAO,CAAE,CAClBpB,gBAAgB,CAAC,IAAI,CAAC,CACtBsC,YAAY,CAAC,CAAC,CAEd;AACJ,CAAC,IAAM,CACHc,KAAK,CAAClC,QAAQ,CAACmC,OAAO,EAAI,uBAAuB,CAAC,CACtD,CACJ,CAAE,MAAO/B,KAAU,CAAE,CACjBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C8B,KAAK,CAAC9B,KAAK,CAAC+B,OAAO,EAAI,uBAAuB,CAAC,CACnD,CACJ,CAAC,CAED,KAAM,CAAAG,iBAAiB,CAAIC,IAAU,EAAK,CACtC3D,eAAe,CAAC2D,IAAI,CAAC,CACrB7D,oBAAoB,CAAC,IAAI,CAAC,CAC9B,CAAC,CAGD,KAAM,CAAA8D,YAAY,CAAID,IAAU,EAAK,CACjCnE,cAAc,CAACmE,IAAI,CAAC,CACpB3C,WAAW,CAAC,CACRC,QAAQ,CAAE0C,IAAI,CAACA,IACnB,CAAC,CAAC,CACFrE,eAAe,CAAC,IAAI,CAAC,CACzB,CAAC,CAED;AACA;AACA,KAAM,CAAAuE,UAAU,CAAGlD,UAAU,GAAK,EAAE,EAAIE,SAAS,GAAK,QAAQ,CAE9D;AACA,KAAM,CAAAiD,WAAW,CAAGD,UAAU,CAAG5E,QAAQ,CAAGF,KAAK,CAEjD;AACA,KAAM,CAAAgF,aAAa,CAAGD,WAAW,CAACE,MAAM,CAACL,IAAI,EAAI,CAC7C,KAAM,CAAAM,aAAa,CAAGtD,UAAU,GAAK,EAAE,EAClBgD,IAAI,CAACA,IAAI,CAACO,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxD,UAAU,CAACuD,WAAW,CAAC,CAAC,CAAC,EAC1DP,IAAI,CAACS,SAAS,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxD,UAAU,CAACuD,WAAW,CAAC,CAAC,CAAC,CACpF,MAAO,CAAAD,aAAa,CACxB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAI,WAAW,CAAG,CAAC,GAAGN,aAAa,CAAC,CAACO,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAClD,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAACH,CAAC,CAACI,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC,CAC7C,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAH,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC,CAC7C,MAAO,CAAA/D,SAAS,GAAK,QAAQ,CAAGgE,KAAK,CAAGJ,KAAK,CAAGA,KAAK,CAAGI,KAAK,CACjE,CAAC,CAAC,CAEF,GAAI,CAAAC,YAAoB,CAAEC,iBAAyB,CAAEC,iBAAyB,CAC9E,GAAInB,UAAU,CAAE,CACZ;AACA,KAAM,CAAA3B,UAAU,CAAG,CAAC/B,WAAW,CAAG,CAAC,EAAIE,QAAQ,CAC/C,KAAM,CAAA8B,QAAQ,CAAGD,UAAU,CAAG7B,QAAQ,CACtCyE,YAAY,CAAGT,WAAW,CAAChC,KAAK,CAACH,UAAU,CAAEC,QAAQ,CAAC,CACtD4C,iBAAiB,CAAGzC,IAAI,CAACC,IAAI,CAAC8B,WAAW,CAACxC,MAAM,CAAGxB,QAAQ,CAAC,CAC5D2E,iBAAiB,CAAGX,WAAW,CAACxC,MAAM,CAC1C,CAAC,IAAM,CACH;AACAiD,YAAY,CAAG/F,KAAK,CACpBgG,iBAAiB,CAAGtE,UAAU,CAC9BuE,iBAAiB,CAAGzE,UAAU,CAClC,CAEA,mBACI9B,IAAA,QAAKwG,SAAS,CAAC,qBAAqB,CAACC,KAAK,CAAE,CAACC,SAAS,CAAE,QAAQ,CAAE,CAAAC,QAAA,cAC9DzG,KAAA,QAAKsG,SAAS,CAAC,sBAAsB,CAACC,KAAK,CAAE,CAACG,QAAQ,CAAE,MAAM,CAAE,CAAAD,QAAA,eAE5DzG,KAAA,QAAKsG,SAAS,CAAC,MAAM,CAAAG,QAAA,eACjBzG,KAAA,QAAKsG,SAAS,CAAC,gCAAgC,CAAAG,QAAA,eAC3C3G,IAAA,CAACd,MAAM,EAACsH,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,cAClDtD,IAAA,OAAIwG,SAAS,CAAC,kCAAkC,CAAAG,QAAA,CAAC,OAAK,CAAI,CAAC,EAC1D,CAAC,cACN3G,IAAA,MAAGwG,SAAS,CAAC,iBAAiB,CAAAG,QAAA,CAAC,yCAAuC,CAAG,CAAC,EACzE,CAAC,cAGN3G,IAAA,QAAKwG,SAAS,CAAC,mCAAmC,CAAAG,QAAA,cAC9CzG,KAAA,QAAKsG,SAAS,CAAC,eAAe,CAAAG,QAAA,eAC1BzG,KAAA,QAAKsG,SAAS,CAAC,wDAAwD,CAAAG,QAAA,eACnEzG,KAAA,OAAIsG,SAAS,CAAC,6DAA6D,CAAAG,QAAA,eACvE3G,IAAA,CAACX,GAAG,EAACmH,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,eAEnD,EAAI,CAAC,cACLpD,KAAA,WACI2G,OAAO,CAAEA,CAAA,GAAMhG,eAAe,CAAC,IAAI,CAAE,CACrC2F,SAAS,CAAC,iEAAiE,CAAAG,QAAA,eAE3E3G,IAAA,CAACb,IAAI,EAACqH,SAAS,CAAC,MAAM,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,cACnCtD,IAAA,SAAA2G,QAAA,CAAM,aAAW,CAAM,CAAC,EACpB,CAAC,EACR,CAAC,cAGNzG,KAAA,QAAKsG,SAAS,CAAC,cAAc,CAAAG,QAAA,eACzB3G,IAAA,QAAKwG,SAAS,CAAC,UAAU,CAAAG,QAAA,cACrBzG,KAAA,QAAKsG,SAAS,CAAC,mBAAmB,CAAAG,QAAA,eAC9B3G,IAAA,CAACH,MAAM,EAAC2G,SAAS,CAAC,qEAAqE,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,cACpGtD,IAAA,UACI8G,IAAI,CAAC,MAAM,CACXN,SAAS,CAAC,6BAA6B,CACvCO,WAAW,CAAC,iBAAiB,CAC7BC,KAAK,CAAE9E,UAAW,CAClB+E,QAAQ,CAAGC,CAAC,EAAK,CACb/E,aAAa,CAAC+E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAC7BrF,cAAc,CAAC,CAAC,CAAC,CAAE;AACvB,CAAE,CACL,CAAC,EACD,CAAC,CACL,CAAC,cACN3B,IAAA,QAAKwG,SAAS,CAAC,UAAU,CAAAG,QAAA,cACrBzG,KAAA,WACIsG,SAAS,CAAC,uBAAuB,CACjCQ,KAAK,CAAE5E,SAAU,CACjB6E,QAAQ,CAAE,KAAO,CAAAC,CAAC,EAAK,CACnB,KAAM,CAAAE,YAAY,CAAGF,CAAC,CAACC,MAAM,CAACH,KAA4B,CAC1D3E,YAAY,CAAC+E,YAAY,CAAC,CAC1BzF,cAAc,CAAC,CAAC,CAAC,CAAE;AAEnB;AACA,GAAIyF,YAAY,GAAK,QAAQ,EAAI5G,QAAQ,CAAC4C,MAAM,GAAK,CAAC,CAAE,CACpD,KAAM,CAAAX,aAAa,CAAC,CAAC,CACzB,CACJ,CAAE,CAAAkE,QAAA,eAEF3G,IAAA,WAAQgH,KAAK,CAAC,QAAQ,CAAAL,QAAA,CAAC,cAAY,CAAQ,CAAC,cAC5C3G,IAAA,WAAQgH,KAAK,CAAC,QAAQ,CAAAL,QAAA,CAAC,cAAY,CAAQ,CAAC,EACxC,CAAC,CACR,CAAC,EACL,CAAC,CAELjG,OAAO,cACJR,KAAA,QAAKsG,SAAS,CAAC,sCAAsC,CAAAG,QAAA,eACjD3G,IAAA,QAAKwG,SAAS,CAAC,uCAAuC,CAACtB,IAAI,CAAC,QAAQ,CAAAyB,QAAA,cAChE3G,IAAA,SAAMwG,SAAS,CAAC,iBAAiB,CAAAG,QAAA,CAAC,YAAU,CAAM,CAAC,CAClD,CAAC,mBAEV,EAAK,CAAC,cAENzG,KAAA,CAAAE,SAAA,EAAAuG,QAAA,eACIzG,KAAA,QAAKsG,SAAS,CAAC,SAAS,CAAAG,QAAA,EACnBN,YAAY,CAACgB,GAAG,CAAEnC,IAAI,eACnBlF,IAAA,QAA2BwG,SAAS,CAAC,QAAQ,CAAAG,QAAA,cACzC3G,IAAA,QACIwG,SAAS,CAAC,0CAA0C,CACpDC,KAAK,CAAE,CAACa,MAAM,CAAE,SAAS,CAAE,CAC3BT,OAAO,CAAEA,CAAA,GAAM1B,YAAY,CAACD,IAAI,CAAE,CAAAyB,QAAA,cAElC3G,IAAA,QAAKwG,SAAS,CAAC,eAAe,CAAAG,QAAA,cAC1BzG,KAAA,QAAKsG,SAAS,CAAC,uDAAuD,CAAAG,QAAA,eAClEzG,KAAA,QAAKsG,SAAS,CAAC,aAAa,CAAAG,QAAA,eACxBzG,KAAA,OAAIsG,SAAS,CAAC,6DAA6D,CAACC,KAAK,CAAE,CAACc,QAAQ,CAAE,YAAY,CAAEC,YAAY,CAAE,YAAY,CAAE,CAAAb,QAAA,EACnIzB,IAAI,CAACA,IAAI,cACVlF,IAAA,CAACV,YAAY,EAACkH,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,EACxD,CAAC,cACLpD,KAAA,MAAGsG,SAAS,CAAC,iCAAiC,CAAAG,QAAA,EAAC,aAChC,CAACzB,IAAI,CAACS,SAAS,CAAC,MAAI,CAAC,GAAI,CAAAM,IAAI,CAACf,IAAI,CAACgB,SAAS,CAAC,CAACuB,kBAAkB,CAAC,CAAC,EAC9E,CAAC,EACH,CAAC,cACNzH,IAAA,QAAKwG,SAAS,CAAC,0BAA0B,CAAAG,QAAA,cACrC3G,IAAA,WACI6G,OAAO,CAAGK,CAAC,EAAK,CACZA,CAAC,CAACQ,eAAe,CAAC,CAAC,CACnBzC,iBAAiB,CAACC,IAAI,CAAC,CAC3B,CAAE,CACFsB,SAAS,CAAC,yCAAyC,CACnDmB,KAAK,CAAC,aAAa,CAAAhB,QAAA,cAEnB3G,IAAA,CAACZ,MAAM,EAACkE,IAAI,CAAE,EAAG,CAAE,CAAC,CAChB,CAAC,CACR,CAAC,EACL,CAAC,CACL,CAAC,CACL,CAAC,EA/BA4B,IAAI,CAACN,UAgCV,CACR,CAAC,CACDyB,YAAY,CAACjD,MAAM,GAAK,CAAC,EAAI,CAAC1C,OAAO,eAClCV,IAAA,QAAKwG,SAAS,CAAC,QAAQ,CAAAG,QAAA,cACnBzG,KAAA,QAAKsG,SAAS,CAAC,6BAA6B,CAAAG,QAAA,eACxC3G,IAAA,CAACd,MAAM,EAACoE,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,iBAAiB,CAAE,CAAC,cAChDxG,IAAA,MAAA2G,QAAA,CAAIvB,UAAU,CAAG,4BAA4B,CAAG,yBAAyB,CAAI,CAAC,EAC7E,CAAC,CACL,CACR,EACA,CAAC,CAGLmB,iBAAiB,CAAG,CAAC,eAC1BrG,KAAA,QAAKsG,SAAS,CAAC,wDAAwD,CAAAG,QAAA,eACnEzG,KAAA,QAAKsG,SAAS,CAAC,iCAAiC,CAAAG,QAAA,eAC5C3G,IAAA,SAAMwG,SAAS,CAAC,YAAY,CAAAG,QAAA,CACvBvB,UAAU,YAAAwC,MAAA,CACIvB,YAAY,CAACjD,MAAM,SAAAwE,MAAA,CAAOrB,iBAAiB,iCAAAqB,MAAA,CAE1C,CAAClG,WAAW,CAAG,CAAC,EAAIE,QAAQ,CAAI,CAAC,SAAAgG,MAAA,CAAO/D,IAAI,CAACgE,GAAG,CAACnG,WAAW,CAAGE,QAAQ,CAAE2E,iBAAiB,CAAC,SAAAqB,MAAA,CAAOrB,iBAAiB,UAClI,CACC,CAAC,cACPrG,KAAA,QAAKsG,SAAS,CAAC,iCAAiC,CAAAG,QAAA,eAC5C3G,IAAA,SAAMwG,SAAS,CAAC,kBAAkB,CAAAG,QAAA,CAAC,iBAAe,CAAM,CAAC,cACzDzG,KAAA,WACIsG,SAAS,CAAC,4BAA4B,CACtCC,KAAK,CAAE,CAACqB,KAAK,CAAE,MAAM,CAAE,CACvBd,KAAK,CAAEpF,QAAS,CAChBqF,QAAQ,CAAGC,CAAC,EAAK,CACb,KAAM,CAAAa,WAAW,CAAGC,MAAM,CAACd,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAC1CnF,WAAW,CAACkG,WAAW,CAAC,CACxBpG,cAAc,CAAC,CAAC,CAAC,CACjB,GAAI,CAACyD,UAAU,CAAE,CACbnC,UAAU,CAAC,CAAC,CAAE8E,WAAW,CAAC,CAC9B,CACJ,CAAE,CAAApB,QAAA,eAEF3G,IAAA,WAAQgH,KAAK,CAAE,CAAE,CAAAL,QAAA,CAAC,GAAC,CAAQ,CAAC,cAC5B3G,IAAA,WAAQgH,KAAK,CAAE,EAAG,CAAAL,QAAA,CAAC,IAAE,CAAQ,CAAC,cAC9B3G,IAAA,WAAQgH,KAAK,CAAE,EAAG,CAAAL,QAAA,CAAC,IAAE,CAAQ,CAAC,cAC9B3G,IAAA,WAAQgH,KAAK,CAAE,EAAG,CAAAL,QAAA,CAAC,IAAE,CAAQ,CAAC,EAC1B,CAAC,EACR,CAAC,EACL,CAAC,cAEN3G,IAAA,QAAA2G,QAAA,cACIzG,KAAA,OAAIsG,SAAS,CAAC,+BAA+B,CAAAG,QAAA,eACzC3G,IAAA,OAAIwG,SAAS,cAAAoB,MAAA,CAAelG,WAAW,GAAK,CAAC,CAAG,UAAU,CAAG,EAAE,CAAG,CAAAiF,QAAA,cAC9D3G,IAAA,WACIwG,SAAS,CAAC,WAAW,CACrBK,OAAO,CAAEA,CAAA,GAAM,CACXlF,cAAc,CAAC,CAAC,CAAC,CACjB,GAAI,CAACyD,UAAU,CAAE,CACbnC,UAAU,CAAC,CAAC,CAAErB,QAAQ,CAAC,CAC3B,CACJ,CAAE,CACFqG,QAAQ,CAAEvG,WAAW,GAAK,CAAE,CAAAiF,QAAA,cAE5B3G,IAAA,CAACL,YAAY,EAAC2D,IAAI,CAAE,EAAG,CAAE,CAAC,CACtB,CAAC,CACT,CAAC,cACLtD,IAAA,OAAIwG,SAAS,cAAAoB,MAAA,CAAelG,WAAW,GAAK,CAAC,CAAG,UAAU,CAAG,EAAE,CAAG,CAAAiF,QAAA,cAC9D3G,IAAA,WACIwG,SAAS,CAAC,WAAW,CACrBK,OAAO,CAAEA,CAAA,GAAM,CACX,KAAM,CAAAqB,OAAO,CAAGxG,WAAW,CAAG,CAAC,CAC/BC,cAAc,CAACuG,OAAO,CAAC,CACvB,GAAI,CAAC9C,UAAU,CAAE,CACbnC,UAAU,CAACiF,OAAO,CAAEtG,QAAQ,CAAC,CACjC,CACJ,CAAE,CACFqG,QAAQ,CAAEvG,WAAW,GAAK,CAAE,CAAAiF,QAAA,cAE5B3G,IAAA,CAACP,WAAW,EAAC6D,IAAI,CAAE,EAAG,CAAE,CAAC,CACrB,CAAC,CACT,CAAC,CAGJ6E,KAAK,CAACC,IAAI,CAAC,CAAEhF,MAAM,CAAES,IAAI,CAACgE,GAAG,CAAC,CAAC,CAAEvB,iBAAiB,CAAE,CAAC,CAAE,CAAC+B,CAAC,CAAEC,CAAC,GAAK,CAC9D,GAAI,CAAAC,OAAe,CACnB,GAAIjC,iBAAiB,EAAI,CAAC,CAAE,CACxBiC,OAAO,CAAGD,CAAC,CAAG,CAAC,CACnB,CAAC,IAAM,IAAI5G,WAAW,EAAI,CAAC,CAAE,CACzB6G,OAAO,CAAGD,CAAC,CAAG,CAAC,CACnB,CAAC,IAAM,IAAI5G,WAAW,EAAI4E,iBAAiB,CAAG,CAAC,CAAE,CAC7CiC,OAAO,CAAGjC,iBAAiB,CAAG,CAAC,CAAGgC,CAAC,CACvC,CAAC,IAAM,CACHC,OAAO,CAAG7G,WAAW,CAAG,CAAC,CAAG4G,CAAC,CACjC,CAEA,mBACItI,IAAA,OAAkBwG,SAAS,cAAAoB,MAAA,CAAelG,WAAW,GAAK6G,OAAO,CAAG,QAAQ,CAAG,EAAE,CAAG,CAAA5B,QAAA,cAChF3G,IAAA,WACIwG,SAAS,CAAC,WAAW,CACrBK,OAAO,CAAEA,CAAA,GAAM,CACXlF,cAAc,CAAC4G,OAAO,CAAC,CACvB,GAAI,CAACnD,UAAU,CAAE,CACbnC,UAAU,CAACsF,OAAO,CAAE3G,QAAQ,CAAC,CACjC,CACJ,CAAE,CAAA+E,QAAA,CAED4B,OAAO,CACJ,CAAC,EAXJA,OAYL,CAAC,CAEb,CAAC,CAAC,cAEFvI,IAAA,OAAIwG,SAAS,cAAAoB,MAAA,CAAelG,WAAW,GAAK4E,iBAAiB,CAAG,UAAU,CAAG,EAAE,CAAG,CAAAK,QAAA,cAC9E3G,IAAA,WACIwG,SAAS,CAAC,WAAW,CACrBK,OAAO,CAAEA,CAAA,GAAM,CACX,KAAM,CAAAqB,OAAO,CAAGxG,WAAW,CAAG,CAAC,CAC/BC,cAAc,CAACuG,OAAO,CAAC,CACvB,GAAI,CAAC9C,UAAU,CAAE,CACbnC,UAAU,CAACiF,OAAO,CAAEtG,QAAQ,CAAC,CACjC,CACJ,CAAE,CACFqG,QAAQ,CAAEvG,WAAW,GAAK4E,iBAAkB,CAAAK,QAAA,cAE5C3G,IAAA,CAACN,YAAY,EAAC4D,IAAI,CAAE,EAAG,CAAE,CAAC,CACtB,CAAC,CACT,CAAC,cACLtD,IAAA,OAAIwG,SAAS,cAAAoB,MAAA,CAAelG,WAAW,GAAK4E,iBAAiB,CAAG,UAAU,CAAG,EAAE,CAAG,CAAAK,QAAA,cAC9E3G,IAAA,WACIwG,SAAS,CAAC,WAAW,CACrBK,OAAO,CAAEA,CAAA,GAAM,CACXlF,cAAc,CAAC2E,iBAAiB,CAAC,CACjC,GAAI,CAAClB,UAAU,CAAE,CACbnC,UAAU,CAACqD,iBAAiB,CAAE1E,QAAQ,CAAC,CAC3C,CACJ,CAAE,CACFqG,QAAQ,CAAEvG,WAAW,GAAK4E,iBAAkB,CAAAK,QAAA,cAE5C3G,IAAA,CAACJ,aAAa,EAAC0D,IAAI,CAAE,EAAG,CAAE,CAAC,CACvB,CAAC,CACT,CAAC,EACL,CAAC,CACJ,CAAC,EACL,CACR,EACK,CACL,EACA,CAAC,CACL,CAAC,CAGL1C,YAAY,eACTZ,IAAA,QAAKwG,SAAS,CAAC,eAAe,CAACC,KAAK,CAAE,CAAC+B,eAAe,CAAE,iBAAiB,CAAEC,QAAQ,CAAE,OAAO,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEb,KAAK,CAAE,MAAM,CAAEc,MAAM,CAAE,MAAM,CAAEC,MAAM,CAAE,IAAI,CAAE,CAAAlC,QAAA,cACxJ3G,IAAA,QAAKwG,SAAS,CAAC,oCAAoC,CAACC,KAAK,CAAE,CAACG,QAAQ,CAAE,KAAK,CAAEkC,MAAM,CAAE,cAAc,CAAE,CAAAnC,QAAA,cACjGzG,KAAA,QAAKsG,SAAS,CAAC,kCAAkC,CAAAG,QAAA,eAC7CzG,KAAA,QAAKsG,SAAS,CAAC,4BAA4B,CAAAG,QAAA,eACvC3G,IAAA,OAAIwG,SAAS,CAAC,qBAAqB,CAAAG,QAAA,CAC9B7F,WAAW,CAAG,WAAW,CAAG,iBAAiB,CAC9C,CAAC,cACLd,IAAA,WACI8G,IAAI,CAAC,QAAQ,CACbN,SAAS,CAAC,WAAW,CACrBK,OAAO,CAAEA,CAAA,GAAM,CACXhG,eAAe,CAAC,KAAK,CAAC,CACtBE,cAAc,CAAC,IAAI,CAAC,CACpBI,gBAAgB,CAAC,KAAK,CAAC,CACvBoB,WAAW,CAAC,CACRC,QAAQ,CAAE,EACd,CAAC,CAAC,CACN,CAAE,CACG,CAAC,EACT,CAAC,cACNxC,IAAA,QAAKwG,SAAS,CAAC,YAAY,CAAAG,QAAA,CACtBzF,aAAa,cACVhB,KAAA,QAAKsG,SAAS,CAAC,kBAAkB,CAAAG,QAAA,eAC7B3G,IAAA,CAACV,YAAY,EAACgE,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACxDxG,IAAA,OAAIwG,SAAS,CAAC,sBAAsB,CAAAG,QAAA,CAC/B7F,WAAW,CAAG,4BAA4B,CAAG,4BAA4B,CAC1E,CAAC,cACLd,IAAA,MAAGwG,SAAS,CAAC,YAAY,CAAAG,QAAA,CACpB7F,WAAW,CAAG,4BAA4B,CAAG,gCAAgC,CAC/E,CAAC,EACH,CAAC,cAENd,IAAA,QAAKwG,SAAS,CAAC,SAAS,CAAAG,QAAA,cACpBzG,KAAA,QAAKsG,SAAS,CAAC,QAAQ,CAAAG,QAAA,eACnB3G,IAAA,OAAIwG,SAAS,CAAC,cAAc,CAAAG,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAClDzG,KAAA,QAAKsG,SAAS,CAAC,MAAM,CAAAG,QAAA,eACjB3G,IAAA,UAAOwG,SAAS,CAAC,wBAAwB,CAAAG,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3D3G,IAAA,UACI8G,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE1E,QAAQ,CAACE,QAAS,CACzByE,QAAQ,CAAGC,CAAC,EAAK3E,WAAW,CAAAwG,aAAA,CAAAA,aAAA,IAAKzG,QAAQ,MAAEE,QAAQ,CAAE0E,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,CAAE,CACtER,SAAS,CAAC,wBAAwB,CAClCO,WAAW,CAAC,iBAAiB,CAC7BkB,QAAQ,CAAEjH,YAAa,CAC1B,CAAC,EACD,CAAC,EACL,CAAC,CACL,CACR,CACA,CAAC,cACNhB,IAAA,QAAKwG,SAAS,CAAC,4BAA4B,CAAAG,QAAA,CACtC,CAACzF,aAAa,eACXlB,IAAA,WACI6G,OAAO,CAAEnC,gBAAiB,CAC1B8B,SAAS,CAAC,iEAAiE,CAC3EyB,QAAQ,CAAE,CAAC3F,QAAQ,CAACE,QAAQ,CAACwG,IAAI,CAAC,CAAC,EAAIhI,YAAa,CAAA2F,QAAA,CAEnD3F,YAAY,cACTd,KAAA,CAAAE,SAAA,EAAAuG,QAAA,eACI3G,IAAA,CAACT,MAAM,EAACiH,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,CACjDxC,WAAW,CAAG,aAAa,CAAG,aAAa,EAC9C,CAAC,CAEHA,WAAW,CAAG,aAAa,CAAG,aACjC,CACG,CACX,CACA,CAAC,EACL,CAAC,CACL,CAAC,CACL,CACR,CAGAM,iBAAiB,EAAIE,YAAY,eAC9BtB,IAAA,QAAKwG,SAAS,CAAC,eAAe,CAACC,KAAK,CAAE,CAAC+B,eAAe,CAAE,iBAAiB,CAAEC,QAAQ,CAAE,OAAO,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEb,KAAK,CAAE,MAAM,CAAEc,MAAM,CAAE,MAAM,CAAEC,MAAM,CAAE,IAAI,CAAE,CAAAlC,QAAA,cACxJ3G,IAAA,QAAKwG,SAAS,CAAC,oCAAoC,CAAAG,QAAA,cAC/CzG,KAAA,QAAKsG,SAAS,CAAC,kCAAkC,CAAAG,QAAA,eAC7CzG,KAAA,QAAKsG,SAAS,CAAC,4BAA4B,CAAAG,QAAA,eACvC3G,IAAA,OAAIwG,SAAS,CAAC,iCAAiC,CAAAG,QAAA,CAC1CnF,aAAa,CAAG,cAAc,CAAG,kBAAkB,CACpD,CAAC,cACLxB,IAAA,WACI8G,IAAI,CAAC,QAAQ,CACbN,SAAS,CAAC,WAAW,CACrBK,OAAO,CAAEA,CAAA,GAAM,CACXxF,oBAAoB,CAAC,KAAK,CAAC,CAC3BE,eAAe,CAAC,IAAI,CAAC,CACrBE,gBAAgB,CAAC,KAAK,CAAC,CAC3B,CAAE,CACG,CAAC,EACT,CAAC,cACNzB,IAAA,QAAKwG,SAAS,CAAC,YAAY,CAAAG,QAAA,CACtBnF,aAAa,cACVtB,KAAA,QAAKsG,SAAS,CAAC,kBAAkB,CAAAG,QAAA,eAC7B3G,IAAA,CAACV,YAAY,EAACgE,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACxDxG,IAAA,OAAIwG,SAAS,CAAC,sBAAsB,CAAAG,QAAA,CAAC,4BAA0B,CAAI,CAAC,cACpEzG,KAAA,MAAGsG,SAAS,CAAC,YAAY,CAAAG,QAAA,eACrB3G,IAAA,WAAA2G,QAAA,CAASrF,YAAY,CAAC4D,IAAI,CAAS,CAAC,iCACxC,EAAG,CAAC,EACH,CAAC,cAENhF,KAAA,QAAKsG,SAAS,CAAC,kBAAkB,CAAAG,QAAA,eAC7B3G,IAAA,CAACR,aAAa,EAAC8D,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACzDxG,IAAA,OAAIwG,SAAS,CAAC,SAAS,CAAAG,QAAA,CAAC,4CAA0C,CAAI,CAAC,cACvEzG,KAAA,QAAKsG,SAAS,CAAC,6BAA6B,CAAAG,QAAA,eACxC3G,IAAA,OAAIwG,SAAS,CAAC,wBAAwB,CAAAG,QAAA,CAAErF,YAAY,CAAC4D,IAAI,CAAK,CAAC,cAC/DhF,KAAA,MAAGsG,SAAS,CAAC,uBAAuB,CAAAG,QAAA,EAAC,aAAW,CAACrF,YAAY,CAACqE,SAAS,CAAC,MAAI,CAAC,GAAI,CAAAM,IAAI,CAAC3E,YAAY,CAAC4E,SAAS,CAAC,CAACuB,kBAAkB,CAAC,CAAC,EAAI,CAAC,EACtI,CAAC,cACNzH,IAAA,MAAGwG,SAAS,CAAC,+BAA+B,CAAAG,QAAA,CAAC,8FAE7C,CAAG,CAAC,EACH,CACR,CACA,CAAC,CACL,CAACnF,aAAa,eACXtB,KAAA,QAAKsG,SAAS,CAAC,4BAA4B,CAAAG,QAAA,eACvC3G,IAAA,WACI6G,OAAO,CAAEA,CAAA,GAAM,CACXxF,oBAAoB,CAAC,KAAK,CAAC,CAC3BE,eAAe,CAAC,IAAI,CAAC,CACzB,CAAE,CACFiF,SAAS,CAAC,yCAAyC,CAAAG,QAAA,CACtD,QAED,CAAQ,CAAC,cACTzG,KAAA,WACI2G,OAAO,CAAE7B,UAAW,CACpBwB,SAAS,CAAC,gEAAgE,CAAAG,QAAA,eAE1E3G,IAAA,CAACZ,MAAM,EAACoH,SAAS,CAAC,MAAM,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,cAEzC,EAAQ,CAAC,EACR,CACR,EACA,CAAC,CACL,CAAC,CACL,CACR,EACA,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}