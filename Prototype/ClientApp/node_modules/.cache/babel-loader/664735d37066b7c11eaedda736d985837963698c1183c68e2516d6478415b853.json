{"ast":null,"code":"import _objectSpread from\"/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Database,Plus,Edit,Trash2,TestTube,Eye,EyeOff,ChevronLeft,ChevronRight}from'lucide-react';import{applicationApi}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Applications=()=>{const[applications,setApplications]=useState([]);const[loading,setLoading]=useState(false);const[showApplicationForm,setShowApplicationForm]=useState(false);const[editingApp,setEditingApp]=useState(null);// Pagination state\nconst[currentPage,setCurrentPage]=useState(1);const[pageSize,setPageSize]=useState(10);const[totalCount,setTotalCount]=useState(0);const[totalPages,setTotalPages]=useState(0);// Application form state\nconst[applicationForm,setApplicationForm]=useState({applicationName:'',applicationDescription:'',dataSourceType:'MicrosoftSqlServer',connectionSource:{host:'',port:'1433',databaseName:'',authenticationType:'UserPassword',username:'',password:'',// AWS IAM fields\nawsAccessKeyId:'',awsSecretAccessKey:'',awsSessionToken:'',// Kerberos/GSSAPI fields\nprincipal:'',serviceName:'',serviceRealm:'',canonicalizeHostName:false,// MongoDB specific fields\nauthenticationDatabase:'',// X.509 certificate fields\ncertificateFilePath:'',privateKeyFilePath:'',caCertificateFilePath:''}});const[showPasswords,setShowPasswords]=useState({connection:false,awsSecret:false,awsSession:false});const fetchApplications=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:currentPage;let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:pageSize;setLoading(true);try{var _response$data;const response=await applicationApi.getApplications(page,size);console.log('=== API RESPONSE DEBUG ===');console.log('Full API response:',JSON.stringify(response,null,2));if(response.success&&(_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.data){console.log('Applications data:',response.data.data);if(response.data.data.length>0){console.log('First app connection:',response.data.data[0].connection);}setApplications(response.data.data);setCurrentPage(response.data.page||page);setPageSize(response.data.pageSize||size);setTotalCount(response.data.totalCount||0);setTotalPages(response.data.totalPages||1);}}catch(error){console.error('Failed to fetch applications:',error);}finally{setLoading(false);}};useEffect(()=>{fetchApplications(1,pageSize);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Effect to populate form when editing an application\nuseEffect(()=>{if(editingApp){var _editingApp$connectio,_editingApp$connectio2,_editingApp$connectio3,_editingApp$connectio4,_editingApp$connectio5,_editingApp$connectio6,_editingApp$connectio7,_editingApp$connectio8,_editingApp$connectio9,_editingApp$connectio0;console.log('=== EDIT DEBUG ===');console.log('Full editingApp object:',JSON.stringify(editingApp,null,2));console.log('Connection object:',editingApp.connection);console.log('Username value:',(_editingApp$connectio=editingApp.connection)===null||_editingApp$connectio===void 0?void 0:_editingApp$connectio.username);console.log('Auth type:',(_editingApp$connectio2=editingApp.connection)===null||_editingApp$connectio2===void 0?void 0:_editingApp$connectio2.authenticationType);setApplicationForm({applicationName:editingApp.applicationName,applicationDescription:editingApp.applicationDescription,dataSourceType:editingApp.applicationDataSourceType,connectionSource:{host:editingApp.connection.host,port:editingApp.connection.port,databaseName:editingApp.connection.databaseName,authenticationType:editingApp.connection.authenticationType,username:((_editingApp$connectio3=editingApp.connection)===null||_editingApp$connectio3===void 0?void 0:_editingApp$connectio3.username)||'',password:'',// We don't get password back from API for security - user must re-enter\n// AWS IAM fields\nawsAccessKeyId:((_editingApp$connectio4=editingApp.connection)===null||_editingApp$connectio4===void 0?void 0:_editingApp$connectio4.awsAccessKeyId)||'',awsSecretAccessKey:'',// Not returned for security\nawsSessionToken:'',// Not returned for security\n// Kerberos/GSSAPI fields\nprincipal:((_editingApp$connectio5=editingApp.connection)===null||_editingApp$connectio5===void 0?void 0:_editingApp$connectio5.principal)||'',serviceName:((_editingApp$connectio6=editingApp.connection)===null||_editingApp$connectio6===void 0?void 0:_editingApp$connectio6.serviceName)||'',serviceRealm:((_editingApp$connectio7=editingApp.connection)===null||_editingApp$connectio7===void 0?void 0:_editingApp$connectio7.serviceRealm)||'',canonicalizeHostName:((_editingApp$connectio8=editingApp.connection)===null||_editingApp$connectio8===void 0?void 0:_editingApp$connectio8.canonicalizeHostName)||false,// MongoDB specific fields\nauthenticationDatabase:((_editingApp$connectio9=editingApp.connection)===null||_editingApp$connectio9===void 0?void 0:_editingApp$connectio9.authenticationDatabase)||'',// X.509 certificate fields\ncertificateFilePath:'',privateKeyFilePath:'',caCertificateFilePath:''}});console.log('Form populated with username:',((_editingApp$connectio0=editingApp.connection)===null||_editingApp$connectio0===void 0?void 0:_editingApp$connectio0.username)||'');console.log('=== END EDIT DEBUG ===');}else{// Reset form when not editing\nsetApplicationForm({applicationName:'',applicationDescription:'',dataSourceType:'MicrosoftSqlServer',connectionSource:{host:'',port:'1433',// Default for SQL Server\ndatabaseName:'',authenticationType:'UserPassword',username:'',password:'',// AWS IAM fields\nawsAccessKeyId:'',awsSecretAccessKey:'',awsSessionToken:'',// Kerberos/GSSAPI fields\nprincipal:'',serviceName:'',serviceRealm:'',canonicalizeHostName:false,// MongoDB specific fields\nauthenticationDatabase:'',// X.509 certificate fields\ncertificateFilePath:'',privateKeyFilePath:'',caCertificateFilePath:''}});}},[editingApp]);const generateConnectionUrl=connectionSource=>{const{host,port,databaseName,authenticationType,username,password}=connectionSource;// Handle different data source types\nswitch(applicationForm.dataSourceType){case'MicrosoftSqlServer':const sqlServerNeedsCredentials=['UserPassword','Kerberos','AzureAdPassword'].includes(authenticationType);return\"Server=\".concat(host,\",\").concat(port,\";Database=\").concat(databaseName,\";\").concat(sqlServerNeedsCredentials?\"User Id=\".concat(username,\";Password=\").concat(password,\";\"):'Integrated Security=true;',\"TrustServerCertificate=true;\");case'MySql':const mysqlNeedsCredentials=authenticationType==='UserPassword';return\"Server=\".concat(host,\";Port=\").concat(port,\";Database=\").concat(databaseName,\";\").concat(mysqlNeedsCredentials?\"Uid=\".concat(username,\";Pwd=\").concat(password,\";\"):'');case'MongoDb':const mongoNeedsCredentials=['UserPassword','ScramSha1','ScramSha256','PlainLdap'].includes(authenticationType);if(mongoNeedsCredentials){return\"mongodb://\".concat(username,\":\").concat(password,\"@\").concat(host,\":\").concat(port,\"/\").concat(databaseName);}else{return\"mongodb://\".concat(host,\":\").concat(port,\"/\").concat(databaseName);}default:return\"Server=\".concat(host,\",\").concat(port,\";Database=\").concat(databaseName,\";Integrated Security=true;TrustServerCertificate=true;\");}};const handleApplicationSubmit=async()=>{try{// Generate connection URL for submission\nconst formDataWithUrl=_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{url:generateConnectionUrl(applicationForm.connectionSource)})});let response;if(editingApp){response=await applicationApi.updateApplication(editingApp.applicationId,formDataWithUrl);}else{response=await applicationApi.createApplication(formDataWithUrl);}if(response.success){alert(editingApp?'Application updated successfully!':'Application created successfully!');setShowApplicationForm(false);setEditingApp(null);fetchApplications(currentPage,pageSize);}else{console.error('Server response:',response);console.error('Response errors:',response.errors);alert(\"\".concat(response.message||'Failed to save application').concat(response.errors?'\\nErrors: '+Object.keys(response.errors).join(', '):''));}}catch(error){console.error('Failed to save application:',error);console.error('Full error details:',JSON.stringify(error,null,2));alert(error.message||'Failed to save application');}};const testConnection=async application=>{try{let connectionData;if(application&&application.applicationId){// For existing applications, just send the applicationId\nconnectionData={applicationId:application.applicationId};}else{// For new applications, send full connection data\nconnectionData=_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{url:generateConnectionUrl(applicationForm.connectionSource)})});}const response=await applicationApi.testConnection(connectionData);alert(response.message);}catch(error){console.error('Connection test failed:',error);alert(error.message||'Connection test failed');}};const deleteApplication=async applicationId=>{if(!window.confirm('Are you sure you want to delete this application?'))return;try{const response=await applicationApi.deleteApplication(applicationId);if(response.success){alert('Application deleted successfully!');fetchApplications(currentPage,pageSize);}else{alert(response.message||'Failed to delete application');}}catch(error){console.error('Failed to delete application:',error);alert(error.message||'Failed to delete application');}};const togglePasswordVisibility=field=>{setShowPasswords(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:!prev[field]}));};return/*#__PURE__*/_jsx(\"div\",{className:\"min-vh-100 bg-light\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid py-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-2\",children:[/*#__PURE__*/_jsx(Database,{className:\"text-primary me-3\",size:32}),/*#__PURE__*/_jsx(\"h1\",{className:\"display-5 fw-bold text-dark mb-0\",children:\"Applications\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted fs-6\",children:\"Manage your database applications and connections\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card shadow-sm border-0 rounded-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"card-title fw-bold text-dark mb-0 d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Database,{className:\"text-primary me-2\",size:24}),\"Database Applications\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowApplicationForm(true),className:\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Plus,{className:\"me-2\",size:18}),/*#__PURE__*/_jsx(\"span\",{children:\"Add Application\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[applications.map(app=>/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border border-light rounded-3 h-100\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title fw-bold text-dark mb-1\",children:app.applicationName}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text text-muted small mb-2\",children:app.applicationDescription}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge bg-light text-dark border\",children:[app.connection.host,\":\",app.connection.port,\"/\",app.connection.databaseName]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-1 ms-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>testConnection(app),className:\"btn btn-outline-primary btn-sm rounded-3\",title:\"Test Connection\",children:/*#__PURE__*/_jsx(TestTube,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setEditingApp(app);setShowApplicationForm(true);},className:\"btn btn-outline-secondary btn-sm rounded-3\",title:\"Edit\",children:/*#__PURE__*/_jsx(Edit,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteApplication(app.applicationId),className:\"btn btn-outline-danger btn-sm rounded-3\",title:\"Delete\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]})})})},app.applicationId)),applications.length===0&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5 text-muted\",children:[/*#__PURE__*/_jsx(Database,{size:48,className:\"mb-3 opacity-50\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No applications configured yet\"})]})}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5 text-muted\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Loading applications...\"})]})})]}),(totalPages>1||totalCount>0)&&/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-muted small\",children:[\"Showing \",applications.length,\" of \",totalCount,\" applications\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-2\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"text-muted small mb-0\",children:\"Show:\"}),/*#__PURE__*/_jsxs(\"select\",{value:pageSize,onChange:e=>{const newPageSize=parseInt(e.target.value);setPageSize(newPageSize);fetchApplications(1,newPageSize);},className:\"form-select form-select-sm\",style:{width:'auto'},children:[/*#__PURE__*/_jsx(\"option\",{value:5,children:\"5\"}),/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:20,children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:50,children:\"50\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>fetchApplications(currentPage-1),disabled:currentPage<=1,className:\"btn btn-outline-secondary btn-sm d-flex align-items-center\",children:[/*#__PURE__*/_jsx(ChevronLeft,{size:16,className:\"me-1\"}),\"Previous\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex align-items-center gap-1\",children:Array.from({length:Math.min(5,totalPages)},(_,i)=>{let pageNumber;if(totalPages<=5){pageNumber=i+1;}else if(currentPage<=3){pageNumber=i+1;}else if(currentPage>=totalPages-2){pageNumber=totalPages-4+i;}else{pageNumber=currentPage-2+i;}return/*#__PURE__*/_jsx(\"button\",{onClick:()=>fetchApplications(pageNumber),className:\"btn btn-sm \".concat(currentPage===pageNumber?'btn-primary':'btn-outline-secondary'),children:pageNumber},pageNumber);})}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>fetchApplications(currentPage+1),disabled:currentPage>=totalPages,className:\"btn btn-outline-secondary btn-sm d-flex align-items-center\",children:[\"Next\",/*#__PURE__*/_jsx(ChevronRight,{size:16,className:\"ms-1\"})]})]})]})]})}),showApplicationForm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal d-block\",style:{backgroundColor:'rgba(0,0,0,0.5)'},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog modal-dialog-centered modal-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content border-0 rounded-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header border-0 pb-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-title fw-bold\",children:editingApp?'Edit Application':'Add New Application'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>{setShowApplicationForm(false);setEditingApp(null);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Application Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.applicationName,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{applicationName:e.target.value})),className:\"form-control rounded-3\",placeholder:\"Enter application name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:applicationForm.applicationDescription,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{applicationDescription:e.target.value})),className:\"form-control rounded-3\",rows:3,placeholder:\"Enter application description\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Data Source Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:applicationForm.dataSourceType,onChange:e=>{// Reset authentication type and port when data source changes\nconst newAuthType='UserPassword';const defaultPort=e.target.value==='MicrosoftSqlServer'?'1433':e.target.value==='MySql'?'3306':e.target.value==='MongoDb'?'27017':'1433';setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{dataSourceType:e.target.value,connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{authenticationType:newAuthType,port:defaultPort})}));},className:\"form-select rounded-3\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"MicrosoftSqlServer\",children:\"Microsoft SQL Server\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MySql\",children:\"MySQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MongoDb\",children:\"MongoDB\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Authentication Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:applicationForm.connectionSource.authenticationType,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{authenticationType:e.target.value})})),className:\"form-select rounded-3\",children:[applicationForm.dataSourceType==='MicrosoftSqlServer'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Kerberos\",children:\"Kerberos\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdPassword\",children:\"Azure AD with Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdInteractive\",children:\"Azure AD Interactive\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdIntegrated\",children:\"Azure AD Integrated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdDefault\",children:\"Azure AD Default\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdMsi\",children:\"Azure AD MSI\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]}),applicationForm.dataSourceType==='MySql'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]}),applicationForm.dataSourceType==='MongoDb'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ScramSha1\",children:\"SCRAM-SHA-1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ScramSha256\",children:\"SCRAM-SHA-256\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AwsIam\",children:\"AWS IAM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"X509\",children:\"X.509\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GssapiKerberos\",children:\"GSSAPI (Kerberos)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PlainLdap\",children:\"Plain LDAP\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-8\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Host\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.host,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{host:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"localhost or server address\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Port\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.port,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{port:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"1433\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Database Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.databaseName,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{databaseName:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"Enter database name\"})]}),(// SQL Server types that need username\napplicationForm.dataSourceType==='MicrosoftSqlServer'&&['UserPassword','Kerberos','AzureAdPassword','AzureAdInteractive'].includes(applicationForm.connectionSource.authenticationType)||// MySQL types that need username  \napplicationForm.dataSourceType==='MySql'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// MongoDB types that need username\napplicationForm.dataSourceType==='MongoDb'&&['UserPassword','ScramSha1','ScramSha256','PlainLdap'].includes(applicationForm.connectionSource.authenticationType))&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.username,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{username:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"Database username\"})]}),(// SQL Server types that need password\napplicationForm.dataSourceType==='MicrosoftSqlServer'&&['UserPassword','Kerberos','AzureAdPassword'].includes(applicationForm.connectionSource.authenticationType)||// MySQL types that need password\napplicationForm.dataSourceType==='MySql'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// MongoDB types that need password\napplicationForm.dataSourceType==='MongoDb'&&['UserPassword','ScramSha1','ScramSha256','PlainLdap'].includes(applicationForm.connectionSource.authenticationType))&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label fw-semibold\",children:[\"Password\",editingApp&&/*#__PURE__*/_jsx(\"span\",{className:\"text-danger ms-2\",style:{fontSize:'0.875rem'},children:\"* Required - please re-enter\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPasswords.connection?\"text\":\"password\",value:applicationForm.connectionSource.password,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{password:e.target.value})})),className:\"form-control rounded-3 pe-5\",placeholder:editingApp?\"Re-enter database password\":\"Database password\",required:!!editingApp}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>togglePasswordVisibility('connection'),className:\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\",children:showPasswords.connection?/*#__PURE__*/_jsx(EyeOff,{size:16}):/*#__PURE__*/_jsx(Eye,{size:16})})]})]}),applicationForm.connectionSource.authenticationType==='AwsIam'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"AWS Access Key ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.awsAccessKeyId||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{awsAccessKeyId:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"AWS Access Key ID\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label fw-semibold\",children:[\"AWS Secret Access Key\",editingApp&&/*#__PURE__*/_jsx(\"span\",{className:\"text-danger ms-2\",style:{fontSize:'0.875rem'},children:\"* Required - please re-enter\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPasswords.awsSecret?\"text\":\"password\",value:applicationForm.connectionSource.awsSecretAccessKey||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{awsSecretAccessKey:e.target.value})})),className:\"form-control rounded-3 pe-5\",placeholder:editingApp?\"Re-enter AWS Secret Access Key\":\"AWS Secret Access Key\",required:!!editingApp}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowPasswords(prev=>_objectSpread(_objectSpread({},prev),{},{awsSecret:!prev.awsSecret})),className:\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\",children:showPasswords.awsSecret?/*#__PURE__*/_jsx(EyeOff,{size:16}):/*#__PURE__*/_jsx(Eye,{size:16})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label fw-semibold\",children:[\"AWS Session Token (Optional)\",editingApp&&/*#__PURE__*/_jsx(\"span\",{className:\"text-info ms-2\",style:{fontSize:'0.875rem'},children:\"- Re-enter if needed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPasswords.awsSession?\"text\":\"password\",value:applicationForm.connectionSource.awsSessionToken||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{awsSessionToken:e.target.value})})),className:\"form-control rounded-3 pe-5\",placeholder:\"AWS Session Token (for temporary credentials)\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowPasswords(prev=>_objectSpread(_objectSpread({},prev),{},{awsSession:!prev.awsSession})),className:\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\",children:showPasswords.awsSession?/*#__PURE__*/_jsx(EyeOff,{size:16}):/*#__PURE__*/_jsx(Eye,{size:16})})]})]})]}),(applicationForm.connectionSource.authenticationType==='Kerberos'||applicationForm.connectionSource.authenticationType==='GssapiKerberos')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Principal\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.principal||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{principal:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"user@REALM.COM\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Service Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.serviceName||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{serviceName:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"Service name (e.g., mongodb)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Service Realm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.serviceRealm||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{serviceRealm:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"REALM.COM\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-check mt-4\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",checked:applicationForm.connectionSource.canonicalizeHostName||false,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{canonicalizeHostName:e.target.checked})})),id:\"canonicalizeHostName\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"canonicalizeHostName\",children:\"Canonicalize Host Name\"})]})})]}),(applicationForm.connectionSource.authenticationType==='ScramSha1'||applicationForm.connectionSource.authenticationType==='ScramSha256')&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Authentication Database\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.authenticationDatabase||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{authenticationDatabase:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"admin\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-text\",children:\"The database where the user is defined (usually 'admin' for MongoDB)\"})]}),applicationForm.connectionSource.authenticationType==='X509'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Certificate File Path\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.certificateFilePath||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{certificateFilePath:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"/path/to/certificate.pem\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Private Key File Path\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.privateKeyFilePath||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{privateKeyFilePath:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"/path/to/private-key.pem\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"CA Certificate File Path (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.caCertificateFilePath||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{caCertificateFilePath:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"/path/to/ca-certificate.pem\"})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-footer border-0 pt-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>testConnection(),className:\"btn btn-warning rounded-3 fw-semibold d-flex align-items-center\",children:[/*#__PURE__*/_jsx(TestTube,{className:\"me-2\",size:16}),\"Test Connection\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleApplicationSubmit,className:\"btn btn-success rounded-3 fw-semibold\",children:editingApp?'Update Application':'Create Application'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowApplicationForm(false);setEditingApp(null);},className:\"btn btn-secondary rounded-3 fw-semibold\",children:\"Cancel\"})]})})]})})})]})});};export default Applications;","map":{"version":3,"names":["React","useState","useEffect","Database","Plus","Edit","Trash2","TestTube","Eye","EyeOff","ChevronLeft","ChevronRight","applicationApi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Applications","applications","setApplications","loading","setLoading","showApplicationForm","setShowApplicationForm","editingApp","setEditingApp","currentPage","setCurrentPage","pageSize","setPageSize","totalCount","setTotalCount","totalPages","setTotalPages","applicationForm","setApplicationForm","applicationName","applicationDescription","dataSourceType","connectionSource","host","port","databaseName","authenticationType","username","password","awsAccessKeyId","awsSecretAccessKey","awsSessionToken","principal","serviceName","serviceRealm","canonicalizeHostName","authenticationDatabase","certificateFilePath","privateKeyFilePath","caCertificateFilePath","showPasswords","setShowPasswords","connection","awsSecret","awsSession","fetchApplications","page","arguments","length","undefined","size","_response$data","response","getApplications","console","log","JSON","stringify","success","data","error","_editingApp$connectio","_editingApp$connectio2","_editingApp$connectio3","_editingApp$connectio4","_editingApp$connectio5","_editingApp$connectio6","_editingApp$connectio7","_editingApp$connectio8","_editingApp$connectio9","_editingApp$connectio0","applicationDataSourceType","generateConnectionUrl","sqlServerNeedsCredentials","includes","concat","mysqlNeedsCredentials","mongoNeedsCredentials","handleApplicationSubmit","formDataWithUrl","_objectSpread","url","updateApplication","applicationId","createApplication","alert","errors","message","Object","keys","join","testConnection","application","connectionData","deleteApplication","window","confirm","togglePasswordVisibility","field","prev","className","children","onClick","map","app","title","role","value","onChange","e","newPageSize","parseInt","target","style","width","disabled","Array","from","Math","min","_","i","pageNumber","backgroundColor","type","placeholder","rows","newAuthType","defaultPort","fontSize","required","checked","id","htmlFor"],"sources":["/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/src/components/applications/Applications.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Database, Plus, Edit, Trash2, TestTube, Eye, EyeOff, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { applicationApi } from '../../services/api';\n\ninterface Application {\n    applicationId: string;\n    applicationName: string;\n    applicationDescription: string;\n    applicationDataSourceType: string;\n    connection: {\n        host: string;\n        port: string;\n        databaseName: string;\n        authenticationType: string;\n        username?: string;\n        // Additional fields based on authentication type\n        authenticationDatabase?: string;\n        awsAccessKeyId?: string;\n        principal?: string;\n        serviceName?: string;\n        serviceRealm?: string;\n        canonicalizeHostName?: boolean;\n    };\n    createdAt?: string;\n    updatedAt?: string;\n}\n\nconst Applications: React.FC = () => {\n    const [applications, setApplications] = useState<Application[]>([]);\n    const [loading, setLoading] = useState(false);\n    const [showApplicationForm, setShowApplicationForm] = useState(false);\n    const [editingApp, setEditingApp] = useState<Application | null>(null);\n    \n    // Pagination state\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [totalCount, setTotalCount] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n\n    // Application form state\n    const [applicationForm, setApplicationForm] = useState({\n        applicationName: '',\n        applicationDescription: '',\n        dataSourceType: 'MicrosoftSqlServer',\n        connectionSource: {\n            host: '',\n            port: '1433',\n            databaseName: '',\n            authenticationType: 'UserPassword',\n            username: '',\n            password: '',\n            // AWS IAM fields\n            awsAccessKeyId: '',\n            awsSecretAccessKey: '',\n            awsSessionToken: '',\n            // Kerberos/GSSAPI fields\n            principal: '',\n            serviceName: '',\n            serviceRealm: '',\n            canonicalizeHostName: false,\n            // MongoDB specific fields\n            authenticationDatabase: '',\n            // X.509 certificate fields\n            certificateFilePath: '',\n            privateKeyFilePath: '',\n            caCertificateFilePath: ''\n        }\n    });\n\n    const [showPasswords, setShowPasswords] = useState({\n        connection: false,\n        awsSecret: false,\n        awsSession: false\n    });\n\n    const fetchApplications = async (page: number = currentPage, size: number = pageSize) => {\n        setLoading(true);\n        try {\n            const response = await applicationApi.getApplications(page, size);\n            console.log('=== API RESPONSE DEBUG ===');\n            console.log('Full API response:', JSON.stringify(response, null, 2));\n            if (response.success && response.data?.data) {\n                console.log('Applications data:', response.data.data);\n                if (response.data.data.length > 0) {\n                    console.log('First app connection:', response.data.data[0].connection);\n                }\n                setApplications(response.data.data);\n                setCurrentPage(response.data.page || page);\n                setPageSize(response.data.pageSize || size);\n                setTotalCount(response.data.totalCount || 0);\n                setTotalPages(response.data.totalPages || 1);\n            }\n        } catch (error) {\n            console.error('Failed to fetch applications:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchApplications(1, pageSize);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Effect to populate form when editing an application\n    useEffect(() => {\n        if (editingApp) {\n            console.log('=== EDIT DEBUG ===');\n            console.log('Full editingApp object:', JSON.stringify(editingApp, null, 2));\n            console.log('Connection object:', editingApp.connection);\n            console.log('Username value:', editingApp.connection?.username);\n            console.log('Auth type:', editingApp.connection?.authenticationType);\n            setApplicationForm({\n                applicationName: editingApp.applicationName,\n                applicationDescription: editingApp.applicationDescription,\n                dataSourceType: editingApp.applicationDataSourceType,\n                connectionSource: {\n                    host: editingApp.connection.host,\n                    port: editingApp.connection.port,\n                    databaseName: editingApp.connection.databaseName,\n                    authenticationType: editingApp.connection.authenticationType,\n                    username: editingApp.connection?.username || '',\n                    password: '',  // We don't get password back from API for security - user must re-enter\n                    // AWS IAM fields\n                    awsAccessKeyId: editingApp.connection?.awsAccessKeyId || '',\n                    awsSecretAccessKey: '', // Not returned for security\n                    awsSessionToken: '', // Not returned for security\n                    // Kerberos/GSSAPI fields\n                    principal: editingApp.connection?.principal || '',\n                    serviceName: editingApp.connection?.serviceName || '',\n                    serviceRealm: editingApp.connection?.serviceRealm || '',\n                    canonicalizeHostName: editingApp.connection?.canonicalizeHostName || false,\n                    // MongoDB specific fields\n                    authenticationDatabase: editingApp.connection?.authenticationDatabase || '',\n                    // X.509 certificate fields\n                    certificateFilePath: '',\n                    privateKeyFilePath: '',\n                    caCertificateFilePath: ''\n                }\n            });\n            console.log('Form populated with username:', editingApp.connection?.username || '');\n            console.log('=== END EDIT DEBUG ===');\n        } else {\n            // Reset form when not editing\n            setApplicationForm({\n                applicationName: '',\n                applicationDescription: '',\n                dataSourceType: 'MicrosoftSqlServer',\n                connectionSource: {\n                    host: '',\n                    port: '1433', // Default for SQL Server\n                    databaseName: '',\n                    authenticationType: 'UserPassword',\n                    username: '',\n                    password: '',\n                    // AWS IAM fields\n                    awsAccessKeyId: '',\n                    awsSecretAccessKey: '',\n                    awsSessionToken: '',\n                    // Kerberos/GSSAPI fields\n                    principal: '',\n                    serviceName: '',\n                    serviceRealm: '',\n                    canonicalizeHostName: false,\n                    // MongoDB specific fields\n                    authenticationDatabase: '',\n                    // X.509 certificate fields\n                    certificateFilePath: '',\n                    privateKeyFilePath: '',\n                    caCertificateFilePath: ''\n                }\n            });\n        }\n    }, [editingApp]);\n\n    const generateConnectionUrl = (connectionSource: any) => {\n        const { host, port, databaseName, authenticationType, username, password } = connectionSource;\n        \n        // Handle different data source types\n        switch (applicationForm.dataSourceType) {\n            case 'MicrosoftSqlServer':\n                const sqlServerNeedsCredentials = ['UserPassword', 'Kerberos', 'AzureAdPassword'].includes(authenticationType);\n                return `Server=${host},${port};Database=${databaseName};${sqlServerNeedsCredentials ? `User Id=${username};Password=${password};` : 'Integrated Security=true;'}TrustServerCertificate=true;`;\n                \n            case 'MySql':\n                const mysqlNeedsCredentials = authenticationType === 'UserPassword';\n                return `Server=${host};Port=${port};Database=${databaseName};${mysqlNeedsCredentials ? `Uid=${username};Pwd=${password};` : ''}`;\n                \n            case 'MongoDb':\n                const mongoNeedsCredentials = ['UserPassword', 'ScramSha1', 'ScramSha256', 'PlainLdap'].includes(authenticationType);\n                if (mongoNeedsCredentials) {\n                    return `mongodb://${username}:${password}@${host}:${port}/${databaseName}`;\n                } else {\n                    return `mongodb://${host}:${port}/${databaseName}`;\n                }\n                \n            default:\n                return `Server=${host},${port};Database=${databaseName};Integrated Security=true;TrustServerCertificate=true;`;\n        }\n    };\n\n    const handleApplicationSubmit = async () => {\n        try {\n            // Generate connection URL for submission\n            const formDataWithUrl = {\n                ...applicationForm,\n                connectionSource: {\n                    ...applicationForm.connectionSource,\n                    url: generateConnectionUrl(applicationForm.connectionSource)\n                }\n            };\n\n\n            let response;\n            if (editingApp) {\n                response = await applicationApi.updateApplication(editingApp.applicationId, formDataWithUrl);\n            } else {\n                response = await applicationApi.createApplication(formDataWithUrl);\n            }\n            \n            if (response.success) {\n                alert(editingApp ? 'Application updated successfully!' : 'Application created successfully!');\n                setShowApplicationForm(false);\n                setEditingApp(null);\n                fetchApplications(currentPage, pageSize);\n            } else {\n                console.error('Server response:', response);\n                console.error('Response errors:', response.errors);\n                alert(`${response.message || 'Failed to save application'}${response.errors ? '\\nErrors: ' + Object.keys(response.errors).join(', ') : ''}`);\n            }\n        } catch (error: any) {\n            console.error('Failed to save application:', error);\n            console.error('Full error details:', JSON.stringify(error, null, 2));\n            alert(error.message || 'Failed to save application');\n        }\n    };\n\n    const testConnection = async (application?: any) => {\n        try {\n            let connectionData;\n            if (application && application.applicationId) {\n                // For existing applications, just send the applicationId\n                connectionData = { applicationId: application.applicationId };\n            } else {\n                // For new applications, send full connection data\n                connectionData = {\n                    ...applicationForm,\n                    connectionSource: {\n                        ...applicationForm.connectionSource,\n                        url: generateConnectionUrl(applicationForm.connectionSource)\n                    }\n                };\n            }\n            \n            const response = await applicationApi.testConnection(connectionData);\n            \n            alert(response.message);\n        } catch (error: any) {\n            console.error('Connection test failed:', error);\n            alert(error.message || 'Connection test failed');\n        }\n    };\n\n    const deleteApplication = async (applicationId: string) => {\n        if (!window.confirm('Are you sure you want to delete this application?')) return;\n\n        try {\n            const response = await applicationApi.deleteApplication(applicationId);\n            \n            if (response.success) {\n                alert('Application deleted successfully!');\n                fetchApplications(currentPage, pageSize);\n            } else {\n                alert(response.message || 'Failed to delete application');\n            }\n        } catch (error: any) {\n            console.error('Failed to delete application:', error);\n            alert(error.message || 'Failed to delete application');\n        }\n    };\n\n    const togglePasswordVisibility = (field: keyof typeof showPasswords) => {\n        setShowPasswords(prev => ({ ...prev, [field]: !prev[field] }));\n    };\n\n    return (\n        <div className=\"min-vh-100 bg-light\">\n            <div className=\"container-fluid py-4\">\n                {/* Header */}\n                <div className=\"mb-4\">\n                    <div className=\"d-flex align-items-center mb-2\">\n                        <Database className=\"text-primary me-3\" size={32} />\n                        <h1 className=\"display-5 fw-bold text-dark mb-0\">Applications</h1>\n                    </div>\n                    <p className=\"text-muted fs-6\">Manage your database applications and connections</p>\n                </div>\n\n                {/* Applications */}\n                <div className=\"card shadow-sm border-0 rounded-4\">\n                    <div className=\"card-body p-4\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                            <h2 className=\"card-title fw-bold text-dark mb-0 d-flex align-items-center\">\n                                <Database className=\"text-primary me-2\" size={24} />\n                                Database Applications\n                            </h2>\n                            <button\n                                onClick={() => setShowApplicationForm(true)}\n                                className=\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\"\n                            >\n                                <Plus className=\"me-2\" size={18} />\n                                <span>Add Application</span>\n                            </button>\n                        </div>\n\n                        <div className=\"row g-3\">\n                            {applications.map((app) => (\n                                <div key={app.applicationId} className=\"col-12\">\n                                    <div className=\"card border border-light rounded-3 h-100\">\n                                        <div className=\"card-body p-3\">\n                                            <div className=\"d-flex justify-content-between align-items-start\">\n                                                <div className=\"flex-grow-1\">\n                                                    <h5 className=\"card-title fw-bold text-dark mb-1\">{app.applicationName}</h5>\n                                                    <p className=\"card-text text-muted small mb-2\">{app.applicationDescription}</p>\n                                                    <div className=\"badge bg-light text-dark border\">\n                                                        {app.connection.host}:{app.connection.port}/{app.connection.databaseName}\n                                                    </div>\n                                                </div>\n                                                <div className=\"d-flex gap-1 ms-3\">\n                                                    <button\n                                                        onClick={() => testConnection(app)}\n                                                        className=\"btn btn-outline-primary btn-sm rounded-3\"\n                                                        title=\"Test Connection\"\n                                                    >\n                                                        <TestTube size={16} />\n                                                    </button>\n                                                    <button\n                                                        onClick={() => {\n                                                            setEditingApp(app);\n                                                            setShowApplicationForm(true);\n                                                        }}\n                                                        className=\"btn btn-outline-secondary btn-sm rounded-3\"\n                                                        title=\"Edit\"\n                                                    >\n                                                        <Edit size={16} />\n                                                    </button>\n                                                    <button\n                                                        onClick={() => deleteApplication(app.applicationId)}\n                                                        className=\"btn btn-outline-danger btn-sm rounded-3\"\n                                                        title=\"Delete\"\n                                                    >\n                                                        <Trash2 size={16} />\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                            {applications.length === 0 && !loading && (\n                                <div className=\"col-12\">\n                                    <div className=\"text-center py-5 text-muted\">\n                                        <Database size={48} className=\"mb-3 opacity-50\" />\n                                        <p>No applications configured yet</p>\n                                    </div>\n                                </div>\n                            )}\n                            {loading && (\n                                <div className=\"col-12\">\n                                    <div className=\"text-center py-5 text-muted\">\n                                        <div className=\"spinner-border\" role=\"status\">\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </div>\n                                        <p className=\"mt-2\">Loading applications...</p>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n\n                        {/* Pagination Controls */}\n                        {(totalPages > 1 || totalCount > 0) && (\n                            <div className=\"d-flex justify-content-between align-items-center mt-4\">\n                                <div className=\"d-flex align-items-center gap-3\">\n                                    <div className=\"text-muted small\">\n                                        Showing {applications.length} of {totalCount} applications\n                                    </div>\n                                    <div className=\"d-flex align-items-center gap-2\">\n                                        <label className=\"text-muted small mb-0\">Show:</label>\n                                        <select\n                                            value={pageSize}\n                                            onChange={(e) => {\n                                                const newPageSize = parseInt(e.target.value);\n                                                setPageSize(newPageSize);\n                                                fetchApplications(1, newPageSize);\n                                            }}\n                                            className=\"form-select form-select-sm\"\n                                            style={{ width: 'auto' }}\n                                        >\n                                            <option value={5}>5</option>\n                                            <option value={10}>10</option>\n                                            <option value={20}>20</option>\n                                            <option value={50}>50</option>\n                                        </select>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex align-items-center gap-2\">\n                                    <button\n                                        onClick={() => fetchApplications(currentPage - 1)}\n                                        disabled={currentPage <= 1}\n                                        className=\"btn btn-outline-secondary btn-sm d-flex align-items-center\"\n                                    >\n                                        <ChevronLeft size={16} className=\"me-1\" />\n                                        Previous\n                                    </button>\n                                    \n                                    <div className=\"d-flex align-items-center gap-1\">\n                                        {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                                            let pageNumber: number;\n                                            if (totalPages <= 5) {\n                                                pageNumber = i + 1;\n                                            } else if (currentPage <= 3) {\n                                                pageNumber = i + 1;\n                                            } else if (currentPage >= totalPages - 2) {\n                                                pageNumber = totalPages - 4 + i;\n                                            } else {\n                                                pageNumber = currentPage - 2 + i;\n                                            }\n                                            \n                                            return (\n                                                <button\n                                                    key={pageNumber}\n                                                    onClick={() => fetchApplications(pageNumber)}\n                                                    className={`btn btn-sm ${currentPage === pageNumber ? 'btn-primary' : 'btn-outline-secondary'}`}\n                                                >\n                                                    {pageNumber}\n                                                </button>\n                                            );\n                                        })}\n                                    </div>\n                                    \n                                    <button\n                                        onClick={() => fetchApplications(currentPage + 1)}\n                                        disabled={currentPage >= totalPages}\n                                        className=\"btn btn-outline-secondary btn-sm d-flex align-items-center\"\n                                    >\n                                        Next\n                                        <ChevronRight size={16} className=\"ms-1\" />\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                {showApplicationForm && (\n                    <div className=\"modal d-block\" style={{backgroundColor: 'rgba(0,0,0,0.5)'}}>\n                        <div className=\"modal-dialog modal-dialog-centered modal-lg\">\n                            <div className=\"modal-content border-0 rounded-4\">\n                                <div className=\"modal-header border-0 pb-0\">\n                                    <h3 className=\"modal-title fw-bold\">\n                                        {editingApp ? 'Edit Application' : 'Add New Application'}\n                                    </h3>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn-close\"\n                                        onClick={() => {\n                                            setShowApplicationForm(false);\n                                            setEditingApp(null);\n                                        }}\n                                    ></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    <div className=\"row g-3\">\n                                        <div className=\"col-12\">\n                                            <label className=\"form-label fw-semibold\">Application Name</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.applicationName}\n                                                onChange={(e) => setApplicationForm({...applicationForm, applicationName: e.target.value})}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"Enter application name\"\n                                            />\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <label className=\"form-label fw-semibold\">Description</label>\n                                            <textarea\n                                                value={applicationForm.applicationDescription}\n                                                onChange={(e) => setApplicationForm({...applicationForm, applicationDescription: e.target.value})}\n                                                className=\"form-control rounded-3\"\n                                                rows={3}\n                                                placeholder=\"Enter application description\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label fw-semibold\">Data Source Type</label>\n                                            <select\n                                                value={applicationForm.dataSourceType}\n                                                onChange={(e) => {\n                                                    // Reset authentication type and port when data source changes\n                                                    const newAuthType = 'UserPassword';\n                                                    const defaultPort = e.target.value === 'MicrosoftSqlServer' ? '1433' \n                                                                       : e.target.value === 'MySql' ? '3306'\n                                                                       : e.target.value === 'MongoDb' ? '27017'\n                                                                       : '1433';\n                                                    setApplicationForm({\n                                                        ...applicationForm, \n                                                        dataSourceType: e.target.value,\n                                                        connectionSource: {\n                                                            ...applicationForm.connectionSource,\n                                                            authenticationType: newAuthType,\n                                                            port: defaultPort\n                                                        }\n                                                    });\n                                                }}\n                                                className=\"form-select rounded-3\"\n                                            >\n                                                <option value=\"MicrosoftSqlServer\">Microsoft SQL Server</option>\n                                                <option value=\"MySql\">MySQL</option>\n                                                <option value=\"MongoDb\">MongoDB</option>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label fw-semibold\">Authentication Type</label>\n                                            <select\n                                                value={applicationForm.connectionSource.authenticationType}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, authenticationType: e.target.value}\n                                                })}\n                                                className=\"form-select rounded-3\"\n                                            >\n                                                {/* Microsoft SQL Server options */}\n                                                {applicationForm.dataSourceType === 'MicrosoftSqlServer' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"Kerberos\">Kerberos</option>\n                                                        <option value=\"AzureAdPassword\">Azure AD with Password</option>\n                                                        <option value=\"AzureAdInteractive\">Azure AD Interactive</option>\n                                                        <option value=\"AzureAdIntegrated\">Azure AD Integrated</option>\n                                                        <option value=\"AzureAdDefault\">Azure AD Default</option>\n                                                        <option value=\"AzureAdMsi\">Azure AD MSI</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n                                                \n                                                {/* MySQL options */}\n                                                {applicationForm.dataSourceType === 'MySql' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n                                                \n                                                {/* MongoDB options */}\n                                                {applicationForm.dataSourceType === 'MongoDb' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"ScramSha1\">SCRAM-SHA-1</option>\n                                                        <option value=\"ScramSha256\">SCRAM-SHA-256</option>\n                                                        <option value=\"AwsIam\">AWS IAM</option>\n                                                        <option value=\"X509\">X.509</option>\n                                                        <option value=\"GssapiKerberos\">GSSAPI (Kerberos)</option>\n                                                        <option value=\"PlainLdap\">Plain LDAP</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n                                            </select>\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <label className=\"form-label fw-semibold\">Host</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.connectionSource.host}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, host: e.target.value}\n                                                })}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"localhost or server address\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <label className=\"form-label fw-semibold\">Port</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.connectionSource.port}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, port: e.target.value}\n                                                })}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"1433\"\n                                            />\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <label className=\"form-label fw-semibold\">Database Name</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.connectionSource.databaseName}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, databaseName: e.target.value}\n                                                })}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"Enter database name\"\n                                            />\n                                        </div>\n                                        {/* Username field - show for most authentication types */}\n                                        {(\n                                            // SQL Server types that need username\n                                            (applicationForm.dataSourceType === 'MicrosoftSqlServer' && \n                                             ['UserPassword', 'Kerberos', 'AzureAdPassword', 'AzureAdInteractive'].includes(applicationForm.connectionSource.authenticationType)) ||\n                                            // MySQL types that need username  \n                                            (applicationForm.dataSourceType === 'MySql' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // MongoDB types that need username\n                                            (applicationForm.dataSourceType === 'MongoDb' && \n                                             ['UserPassword', 'ScramSha1', 'ScramSha256', 'PlainLdap'].includes(applicationForm.connectionSource.authenticationType))\n                                        ) && (\n                                            <div className=\"col-12\">\n                                                <label className=\"form-label fw-semibold\">Username</label>\n                                                <input\n                                                    type=\"text\"\n                                                    value={applicationForm.connectionSource.username}\n                                                    onChange={(e) => setApplicationForm({\n                                                        ...applicationForm,\n                                                        connectionSource: {...applicationForm.connectionSource, username: e.target.value}\n                                                    })}\n                                                    className=\"form-control rounded-3\"\n                                                    placeholder=\"Database username\"\n                                                />\n                                            </div>\n                                        )}\n\n                                        {/* Password field - show for authentication types that need password */}\n                                        {(\n                                            // SQL Server types that need password\n                                            (applicationForm.dataSourceType === 'MicrosoftSqlServer' && \n                                             ['UserPassword', 'Kerberos', 'AzureAdPassword'].includes(applicationForm.connectionSource.authenticationType)) ||\n                                            // MySQL types that need password\n                                            (applicationForm.dataSourceType === 'MySql' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // MongoDB types that need password\n                                            (applicationForm.dataSourceType === 'MongoDb' && \n                                             ['UserPassword', 'ScramSha1', 'ScramSha256', 'PlainLdap'].includes(applicationForm.connectionSource.authenticationType))\n                                        ) && (\n                                            <div className=\"col-12\">\n                                                <label className=\"form-label fw-semibold\">\n                                                    Password\n                                                    {editingApp && (\n                                                        <span className=\"text-danger ms-2\" style={{ fontSize: '0.875rem' }}>\n                                                            * Required - please re-enter\n                                                        </span>\n                                                    )}\n                                                </label>\n                                                <div className=\"position-relative\">\n                                                    <input\n                                                        type={showPasswords.connection ? \"text\" : \"password\"}\n                                                        value={applicationForm.connectionSource.password}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, password: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3 pe-5\"\n                                                        placeholder={editingApp ? \"Re-enter database password\" : \"Database password\"}\n                                                        required={!!editingApp}\n                                                    />\n                                                    <button\n                                                        type=\"button\"\n                                                        onClick={() => togglePasswordVisibility('connection')}\n                                                        className=\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\"\n                                                    >\n                                                        {showPasswords.connection ? <EyeOff size={16} /> : <Eye size={16} />}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        )}\n\n                                        {/* AWS IAM fields */}\n                                        {applicationForm.connectionSource.authenticationType === 'AwsIam' && (\n                                            <>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">AWS Access Key ID</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.awsAccessKeyId || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, awsAccessKeyId: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"AWS Access Key ID\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">\n                                                        AWS Secret Access Key\n                                                        {editingApp && (\n                                                            <span className=\"text-danger ms-2\" style={{ fontSize: '0.875rem' }}>\n                                                                * Required - please re-enter\n                                                            </span>\n                                                        )}\n                                                    </label>\n                                                    <div className=\"position-relative\">\n                                                        <input\n                                                            type={showPasswords.awsSecret ? \"text\" : \"password\"}\n                                                            value={applicationForm.connectionSource.awsSecretAccessKey || ''}\n                                                            onChange={(e) => setApplicationForm({\n                                                                ...applicationForm,\n                                                                connectionSource: {...applicationForm.connectionSource, awsSecretAccessKey: e.target.value}\n                                                            })}\n                                                            className=\"form-control rounded-3 pe-5\"\n                                                            placeholder={editingApp ? \"Re-enter AWS Secret Access Key\" : \"AWS Secret Access Key\"}\n                                                            required={!!editingApp}\n                                                        />\n                                                        <button\n                                                            type=\"button\"\n                                                            onClick={() => setShowPasswords(prev => ({ ...prev, awsSecret: !prev.awsSecret }))}\n                                                            className=\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\"\n                                                        >\n                                                            {showPasswords.awsSecret ? <EyeOff size={16} /> : <Eye size={16} />}\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">\n                                                        AWS Session Token (Optional)\n                                                        {editingApp && (\n                                                            <span className=\"text-info ms-2\" style={{ fontSize: '0.875rem' }}>\n                                                                - Re-enter if needed\n                                                            </span>\n                                                        )}\n                                                    </label>\n                                                    <div className=\"position-relative\">\n                                                        <input\n                                                            type={showPasswords.awsSession ? \"text\" : \"password\"}\n                                                            value={applicationForm.connectionSource.awsSessionToken || ''}\n                                                            onChange={(e) => setApplicationForm({\n                                                                ...applicationForm,\n                                                                connectionSource: {...applicationForm.connectionSource, awsSessionToken: e.target.value}\n                                                            })}\n                                                            className=\"form-control rounded-3 pe-5\"\n                                                            placeholder=\"AWS Session Token (for temporary credentials)\"\n                                                        />\n                                                        <button\n                                                            type=\"button\"\n                                                            onClick={() => setShowPasswords(prev => ({ ...prev, awsSession: !prev.awsSession }))}\n                                                            className=\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\"\n                                                        >\n                                                            {showPasswords.awsSession ? <EyeOff size={16} /> : <Eye size={16} />}\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        )}\n\n                                        {/* Kerberos/GSSAPI fields */}\n                                        {(applicationForm.connectionSource.authenticationType === 'Kerberos' || \n                                          applicationForm.connectionSource.authenticationType === 'GssapiKerberos') && (\n                                            <>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label fw-semibold\">Principal</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.principal || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, principal: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"user@REALM.COM\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label fw-semibold\">Service Name</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.serviceName || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, serviceName: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"Service name (e.g., mongodb)\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label fw-semibold\">Service Realm</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.serviceRealm || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, serviceRealm: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"REALM.COM\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-check mt-4\">\n                                                        <input\n                                                            className=\"form-check-input\"\n                                                            type=\"checkbox\"\n                                                            checked={applicationForm.connectionSource.canonicalizeHostName || false}\n                                                            onChange={(e) => setApplicationForm({\n                                                                ...applicationForm,\n                                                                connectionSource: {...applicationForm.connectionSource, canonicalizeHostName: e.target.checked}\n                                                            })}\n                                                            id=\"canonicalizeHostName\"\n                                                        />\n                                                        <label className=\"form-check-label\" htmlFor=\"canonicalizeHostName\">\n                                                            Canonicalize Host Name\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        )}\n\n                                        {/* MongoDB Authentication Database field (for SCRAM authentication) */}\n                                        {(applicationForm.connectionSource.authenticationType === 'ScramSha1' ||\n                                          applicationForm.connectionSource.authenticationType === 'ScramSha256') && (\n                                            <div className=\"col-12\">\n                                                <label className=\"form-label fw-semibold\">Authentication Database</label>\n                                                <input\n                                                    type=\"text\"\n                                                    value={applicationForm.connectionSource.authenticationDatabase || ''}\n                                                    onChange={(e) => setApplicationForm({\n                                                        ...applicationForm,\n                                                        connectionSource: {...applicationForm.connectionSource, authenticationDatabase: e.target.value}\n                                                    })}\n                                                    className=\"form-control rounded-3\"\n                                                    placeholder=\"admin\"\n                                                />\n                                                <div className=\"form-text\">\n                                                    The database where the user is defined (usually 'admin' for MongoDB)\n                                                </div>\n                                            </div>\n                                        )}\n\n                                        {/* X.509 Certificate fields */}\n                                        {applicationForm.connectionSource.authenticationType === 'X509' && (\n                                            <>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">Certificate File Path</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.certificateFilePath || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, certificateFilePath: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"/path/to/certificate.pem\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">Private Key File Path</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.privateKeyFilePath || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, privateKeyFilePath: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"/path/to/private-key.pem\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">CA Certificate File Path (Optional)</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.caCertificateFilePath || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, caCertificateFilePath: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"/path/to/ca-certificate.pem\"\n                                                    />\n                                                </div>\n                                            </>\n                                        )}\n                                    </div>\n                                </div>\n                                <div className=\"modal-footer border-0 pt-0\">\n                                    <div className=\"d-flex gap-2\">\n                                        <button\n                                            onClick={() => testConnection()}\n                                            className=\"btn btn-warning rounded-3 fw-semibold d-flex align-items-center\"\n                                        >\n                                            <TestTube className=\"me-2\" size={16} />\n                                            Test Connection\n                                        </button>\n                                        <button\n                                            onClick={handleApplicationSubmit}\n                                            className=\"btn btn-success rounded-3 fw-semibold\"\n                                        >\n                                            {editingApp ? 'Update Application' : 'Create Application'}\n                                        </button>\n                                        <button\n                                            onClick={() => {\n                                                setShowApplicationForm(false);\n                                                setEditingApp(null);\n                                            }}\n                                            className=\"btn btn-secondary rounded-3 fw-semibold\"\n                                        >\n                                            Cancel\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Applications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}