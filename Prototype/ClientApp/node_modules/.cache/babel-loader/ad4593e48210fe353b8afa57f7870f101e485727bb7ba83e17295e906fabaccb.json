{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState,useCallback}from'react';// Helper function to get API base URL (same as in api.ts)\nimport{jsx as _jsx}from\"react/jsx-runtime\";const getApiBaseUrl=()=>{if(process.env.NODE_ENV==='development'){return'http://localhost:8080';}return'';};const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);const clearAuthState=useCallback(()=>{setUser(null);setToken(null);localStorage.removeItem('authToken');},[]);const fetchUserProfile=useCallback(async authToken=>{try{const response=await fetch(\"\".concat(getApiBaseUrl(),\"/settings/user/profile\"),{headers:{'Authorization':\"Bearer \".concat(authToken),'Content-Type':'application/json'}});if(response.ok){const data=await response.json();if(data.success&&data.user){setUser(data.user);}else{// Invalid token, clear auth state\nclearAuthState();}}else{// Unauthorized, clear auth state\nclearAuthState();}}catch(error){console.error('Failed to fetch user profile:',error);clearAuthState();}},[clearAuthState]);// Initialize auth state from localStorage on mount\nuseEffect(()=>{const initializeAuth=async()=>{const savedToken=localStorage.getItem('authToken');if(savedToken){setToken(savedToken);await fetchUserProfile(savedToken);}setLoading(false);};initializeAuth();},[fetchUserProfile]);const login=async credentials=>{try{setLoading(true);const response=await fetch(\"\".concat(getApiBaseUrl(),\"/login\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});const data=await response.json();if(response.ok&&data.success){const authToken=data.token;setToken(authToken);localStorage.setItem('authToken',authToken);// Fetch user profile\nawait fetchUserProfile(authToken);return{success:true,message:data.message||'Login successful'};}else{return{success:false,message:data.message||'Login failed'};}}catch(error){console.error('Login error:',error);return{success:false,message:'Network error occurred'};}finally{setLoading(false);}};const logout=async()=>{try{// Call logout endpoint if token exists\nif(token){await fetch(\"\".concat(getApiBaseUrl(),\"/logout\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(token)}});}}catch(error){console.error('Logout error:',error);}finally{clearAuthState();}};const isAuthenticated=!!token&&!!user;const value={user,token,loading,login,logout,isAuthenticated};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useCallback","jsx","_jsx","getApiBaseUrl","process","env","NODE_ENV","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","token","setToken","loading","setLoading","clearAuthState","localStorage","removeItem","fetchUserProfile","authToken","response","fetch","concat","headers","ok","data","json","success","error","console","initializeAuth","savedToken","getItem","login","credentials","method","body","JSON","stringify","setItem","message","logout","isAuthenticated","value","Provider","useAuth","context","Error"],"sources":["/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, useCallback, ReactNode } from 'react';\n\n// Helper function to get API base URL (same as in api.ts)\nconst getApiBaseUrl = () => {\n  if (process.env.NODE_ENV === 'development') {\n    return 'http://localhost:8080';\n  }\n  return '';\n};\n\ninterface User {\n  userId: string;\n  firstName: string;\n  lastName: string;\n  username: string;\n  email: string;\n  phoneNumber: string;\n}\n\ninterface LoginCredentials {\n  username: string;\n  password: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  login: (credentials: LoginCredentials) => Promise<{ success: boolean; message: string }>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const clearAuthState = useCallback(() => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('authToken');\n  }, []);\n\n  const fetchUserProfile = useCallback(async (authToken: string) => {\n    try {\n      const response = await fetch(`${getApiBaseUrl()}/settings/user/profile`, {\n        headers: {\n          'Authorization': `Bearer ${authToken}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        } else {\n          // Invalid token, clear auth state\n          clearAuthState();\n        }\n      } else {\n        // Unauthorized, clear auth state\n        clearAuthState();\n      }\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      clearAuthState();\n    }\n  }, [clearAuthState]);\n\n  // Initialize auth state from localStorage on mount\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedToken = localStorage.getItem('authToken');\n      if (savedToken) {\n        setToken(savedToken);\n        await fetchUserProfile(savedToken);\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, [fetchUserProfile]);\n\n  const login = async (credentials: LoginCredentials): Promise<{ success: boolean; message: string }> => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${getApiBaseUrl()}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      const data = await response.json();\n\n      if (response.ok && data.success) {\n        const authToken = data.token;\n        setToken(authToken);\n        localStorage.setItem('authToken', authToken);\n        \n        // Fetch user profile\n        await fetchUserProfile(authToken);\n        \n        return { success: true, message: data.message || 'Login successful' };\n      } else {\n        return { success: false, message: data.message || 'Login failed' };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, message: 'Network error occurred' };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Call logout endpoint if token exists\n      if (token) {\n        await fetch(`${getApiBaseUrl()}/logout`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      clearAuthState();\n    }\n  };\n\n\n  const isAuthenticated = !!token && !!user;\n\n  const value: AuthContextType = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    isAuthenticated,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}