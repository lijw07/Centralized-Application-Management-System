{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useSearchParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const[searchParams]=useSearchParams();const token=searchParams.get('token');const[password,setPassword]=useState('');const[reTypePassword,setReTypePassword]=useState('');const[message,setMessage]=useState('');const[error,setError]=useState('');useEffect(()=>{if(!token){setError('Invalid or expired password reset link.');}},[token]);const handleSubmit=async e=>{e.preventDefault();if(!token)return;try{const response=await fetch('/PasswordReset',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({token,password,reTypePassword})});if(response.ok){const result=await response.text();setMessage(result);setError('');}else{const errorText=await response.text();setError(errorText);setMessage('');}}catch(err){setError('An error occurred while resetting the password.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Reset Password\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),message&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:message}),!message&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"New Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Re-Type Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:reTypePassword,onChange:e=>setReTypePassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Reset Password\"})]})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","jsx","_jsx","jsxs","_jsxs","ResetPassword","searchParams","token","get","password","setPassword","reTypePassword","setReTypePassword","message","setMessage","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","result","text","errorText","err","className","children","style","color","onSubmit","type","value","onChange","target","required"],"sources":["/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/src/components/account/ResetPassword.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst ResetPassword: React.FC = () => {\n    const [searchParams] = useSearchParams();\n    const token = searchParams.get('token');\n\n    const [password, setPassword] = useState('');\n    const [reTypePassword, setReTypePassword] = useState('');\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        if (!token) {\n            setError('Invalid or expired password reset link.');\n        }\n    }, [token]);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!token) return;\n\n        try {\n            const response = await fetch('/PasswordReset', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    token,\n                    password,\n                    reTypePassword\n                }),\n            });\n\n            if (response.ok) {\n                const result = await response.text();\n                setMessage(result);\n                setError('');\n            } else {\n                const errorText = await response.text();\n                setError(errorText);\n                setMessage('');\n            }\n        } catch (err) {\n            setError('An error occurred while resetting the password.');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h2>Reset Password</h2>\n    {error && <p style={{ color: 'red' }}>{error}</p>}\n        {message && <p style={{ color: 'green' }}>{message}</p>}\n            {!message && (\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <label>New Password:</label>\n            <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                />\n                </div>\n                <div>\n                <label>Re-Type Password:</label>\n            <input\n                type=\"password\"\n                value={reTypePassword}\n                onChange={(e) => setReTypePassword(e.target.value)}\n                required\n                />\n                </div>\n                <button type=\"submit\">Reset Password</button>\n            </form>\n            )}\n            </div>\n        );\n        };\n\n        export default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}