{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Database,Cpu,HardDrive,Wifi,AlertTriangle,CheckCircle2,AlertCircle,TrendingUp,TrendingDown,RefreshCw,Clock,Monitor,BarChart3}from'lucide-react';import{systemHealthApi}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function SystemHealthDashboard(){const[healthData,setHealthData]=useState(null);const[connections,setConnections]=useState([]);const[performanceData,setPerformanceData]=useState(null);const[loading,setLoading]=useState(true);const[lastUpdated,setLastUpdated]=useState(new Date());const fetchHealthData=async()=>{try{setLoading(true);console.log('Fetching health data...');const[healthResponse,connectionsResponse,performanceResponse]=await Promise.all([systemHealthApi.getHealthOverview(),systemHealthApi.getDatabaseConnections(),systemHealthApi.getPerformanceMetrics()]);console.log('Health response:',healthResponse);console.log('Connections response:',connectionsResponse);console.log('Performance response:',performanceResponse);if(healthResponse.success){setHealthData(healthResponse.data);}else{console.error('Health API failed:',healthResponse);}if(connectionsResponse.success){setConnections(connectionsResponse.data);}else{console.error('Connections API failed:',connectionsResponse);}if(performanceResponse.success){setPerformanceData(performanceResponse.data);}else{console.error('Performance API failed:',performanceResponse);}setLastUpdated(new Date());}catch(error){console.error('Failed to fetch health data:',error);}finally{setLoading(false);}};useEffect(()=>{fetchHealthData();// Auto-refresh every 2 minutes\nconst interval=setInterval(fetchHealthData,2*60*1000);return()=>clearInterval(interval);},[]);const getStatusColor=status=>{switch(status.toLowerCase()){case'excellent':case'healthy':case'good':case'stable':case'normal':return'success';case'fair':case'medium':case'warning':return'warning';case'poor':case'unhealthy':case'critical':case'high':return'danger';default:return'info';}};const getAlertColor=level=>{switch(level.toLowerCase()){case'critical':return'danger';case'warning':return'warning';case'info':return'info';default:return'secondary';}};const formatTimestamp=timestamp=>{const date=new Date(timestamp);const now=new Date();const diffMs=now.getTime()-date.getTime();const diffMins=Math.floor(diffMs/60000);if(diffMins<1)return'Just now';if(diffMins<60)return\"\".concat(diffMins,\"m ago\");return date.toLocaleTimeString();};const getTrendIcon=trend=>{if(trend>5)return/*#__PURE__*/_jsx(TrendingUp,{className:\"text-success\",size:16});if(trend<-5)return/*#__PURE__*/_jsx(TrendingDown,{className:\"text-danger\",size:16});return/*#__PURE__*/_jsx(\"div\",{className:\"text-muted\",style:{width:16,height:16},children:\"\\u2013\"});};if(loading&&!healthData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-vh-100 bg-light\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid py-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center\",style:{height:'50vh'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-primary mb-3\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"h5\",{children:\"Loading System Health Dashboard...\"})]})})})});}// Show error state if APIs failed to load data\nif(!loading&&!healthData){return/*#__PURE__*/_jsx(\"div\",{className:\"min-vh-100 bg-light\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid py-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center\",style:{height:'50vh'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"text-warning mb-3\",size:48}),/*#__PURE__*/_jsx(\"h5\",{children:\"Unable to load system health data\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:\"Check console for errors or try refreshing the page.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchHealthData,className:\"btn btn-primary\",children:\"Retry\"})]})})})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-vh-100 bg-light\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid py-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"display-6 fw-bold mb-2 d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Monitor,{className:\"text-primary me-3\",size:32}),\"System Health Dashboard\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-0\",children:\"Real-time infrastructure monitoring and performance analytics\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-end\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:fetchHealthData,className:\"btn btn-outline-primary btn-sm d-flex align-items-center\",disabled:loading,children:[/*#__PURE__*/_jsx(RefreshCw,{className:\"me-2 \".concat(loading?'rotating':''),size:16}),\"Refresh\"]}),/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted d-block mt-1\",children:[\"Last updated: \",lastUpdated.toLocaleTimeString()]})]})]})})}),healthData&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row g-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4 text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-\".concat(getStatusColor(healthData.overall.status),\" mb-3\"),children:healthData.overall.status==='Excellent'||healthData.overall.status==='Good'?/*#__PURE__*/_jsx(CheckCircle2,{size:48}):/*#__PURE__*/_jsx(AlertCircle,{size:48})}),/*#__PURE__*/_jsxs(\"h3\",{className:\"text-\".concat(getStatusColor(healthData.overall.status),\" fw-bold\"),children:[healthData.overall.healthScore,\"/100\"]}),/*#__PURE__*/_jsx(\"h6\",{className:\"fw-semibold mb-2\",children:\"Overall Health\"}),/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-\".concat(getStatusColor(healthData.overall.status),\" bg-opacity-10 text-\").concat(getStatusColor(healthData.overall.status),\" mb-3\"),children:healthData.overall.status.toUpperCase()}),/*#__PURE__*/_jsxs(\"div\",{className:\"small text-muted\",children:[/*#__PURE__*/_jsx(Clock,{size:12,className:\"me-1\"}),\"Response time: \",healthData.overall.responseTime,\"ms\"]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3 h-100\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-3 text-center\",children:[/*#__PURE__*/_jsx(Cpu,{className:\"text-\".concat(getStatusColor(healthData.performance.cpu.status),\" mb-2\"),size:24}),/*#__PURE__*/_jsxs(\"h4\",{className:\"fw-bold mb-1\",children:[healthData.performance.cpu.usage,\"%\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"CPU Usage\"}),/*#__PURE__*/_jsx(\"div\",{className:\"badge bg-\".concat(getStatusColor(healthData.performance.cpu.status),\" bg-opacity-10 text-\").concat(getStatusColor(healthData.performance.cpu.status),\" mt-1\"),children:healthData.performance.cpu.status})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-3 text-center\",children:[/*#__PURE__*/_jsx(HardDrive,{className:\"text-\".concat(getStatusColor(healthData.performance.memory.status),\" mb-2\"),size:24}),/*#__PURE__*/_jsxs(\"h4\",{className:\"fw-bold mb-1\",children:[healthData.performance.memory.usage,\"%\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Memory\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"small text-muted\",children:[healthData.performance.memory.available,\" free\"]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-3 text-center\",children:[/*#__PURE__*/_jsx(Database,{className:\"text-\".concat(getStatusColor(healthData.database.mainDatabase),\" mb-2\"),size:24}),/*#__PURE__*/_jsxs(\"h4\",{className:\"fw-bold mb-1\",children:[healthData.database.applicationConnections.healthy,\"/\",healthData.database.applicationConnections.total]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"DB Connections\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"small text-muted\",children:[healthData.database.applicationConnections.percentage,\"% healthy\"]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-3 text-center\",children:[/*#__PURE__*/_jsx(Wifi,{className:\"text-\".concat(getStatusColor(healthData.performance.network.status),\" mb-2\"),size:24}),/*#__PURE__*/_jsxs(\"h4\",{className:\"fw-bold mb-1\",children:[healthData.performance.network.latency,\"ms\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Network Latency\"}),/*#__PURE__*/_jsx(\"div\",{className:\"badge bg-\".concat(getStatusColor(healthData.performance.network.status),\" bg-opacity-10 text-\").concat(getStatusColor(healthData.performance.network.status),\" mt-1\"),children:healthData.performance.network.status})]})})})]})})]}),healthData.alerts.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"row mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-3\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"text-warning me-3\",size:24}),/*#__PURE__*/_jsx(\"h5\",{className:\"card-title fw-bold mb-0\",children:\"Active Alerts\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row g-3\",children:healthData.alerts.map((alert,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-\".concat(getAlertColor(alert.level),\" d-flex align-items-start\"),children:[/*#__PURE__*/_jsx(AlertCircle,{size:16,className:\"me-2 mt-1 flex-shrink-0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fw-semibold\",children:alert.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"small\",children:[alert.category,\" \\u2022 \",formatTimestamp(alert.timestamp)]})]})]})},index))})]})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-4\",children:[performanceData&&/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-4\",children:[/*#__PURE__*/_jsx(BarChart3,{className:\"text-primary me-3\",size:24}),/*#__PURE__*/_jsx(\"h5\",{className:\"card-title fw-bold mb-0\",children:\"Performance Metrics\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-light rounded-3 p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fw-semibold\",children:\"Response Time\"}),getTrendIcon(performanceData.responseTime.trend)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"h5 mb-0\",children:[performanceData.responseTime.average,\"ms\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Average\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-end\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"h6 mb-0\",children:[performanceData.responseTime.p95,\"ms\"]}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"95th percentile\"})]})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-light rounded-3 p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fw-semibold\",children:\"Uptime\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-success\",children:[performanceData.uptime.percentage,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"small text-muted\",children:[\"Since \",performanceData.uptime.since,\" \\u2022 \",performanceData.uptime.incidents24h,\" incidents (24h)\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-light rounded-3 p-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"fw-semibold\",children:\"Throughput\"}),getTrendIcon(performanceData.throughput.trend)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"h6 mb-0\",children:performanceData.throughput.requestsPerMinute}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Requests/min\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-end\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h6 mb-0\",children:performanceData.throughput.peak24h}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Peak (24h)\"})]})]})]})})]})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border-0 rounded-4 shadow-sm h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-4\",children:[/*#__PURE__*/_jsx(Database,{className:\"text-primary me-3\",size:24}),/*#__PURE__*/_jsx(\"h5\",{className:\"card-title fw-bold mb-0\",children:\"Database Connections\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{maxHeight:'300px',overflowY:'auto'},children:connections.length>0?connections.map(connection=>/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center py-2 px-3 mb-2 bg-light rounded-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"fw-semibold small\",children:connection.applicationName}),/*#__PURE__*/_jsx(\"div\",{className:\"text-muted small\",children:connection.connectionType})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-end\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge bg-\".concat(getStatusColor(connection.status)),children:connection.status}),/*#__PURE__*/_jsxs(\"div\",{className:\"small text-muted mt-1\",children:[connection.responseTime,\"ms\"]})]})]},connection.connectionId)):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4 text-muted\",children:[/*#__PURE__*/_jsx(Database,{size:32,className:\"mb-2 opacity-50\"}),/*#__PURE__*/_jsx(\"div\",{children:\"No database connections configured\"})]})})]})})})]})]})]}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n        .rotating {\\n          animation: spin 1s linear infinite;\\n        }\\n        \\n        @keyframes spin {\\n          from { transform: rotate(0deg); }\\n          to { transform: rotate(360deg); }\\n        }\\n      \"})]});}","map":{"version":3,"names":["React","useState","useEffect","Database","Cpu","HardDrive","Wifi","AlertTriangle","CheckCircle2","AlertCircle","TrendingUp","TrendingDown","RefreshCw","Clock","Monitor","BarChart3","systemHealthApi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SystemHealthDashboard","healthData","setHealthData","connections","setConnections","performanceData","setPerformanceData","loading","setLoading","lastUpdated","setLastUpdated","Date","fetchHealthData","console","log","healthResponse","connectionsResponse","performanceResponse","Promise","all","getHealthOverview","getDatabaseConnections","getPerformanceMetrics","success","data","error","interval","setInterval","clearInterval","getStatusColor","status","toLowerCase","getAlertColor","level","formatTimestamp","timestamp","date","now","diffMs","getTime","diffMins","Math","floor","concat","toLocaleTimeString","getTrendIcon","trend","className","size","style","width","height","children","role","onClick","disabled","overall","healthScore","toUpperCase","responseTime","performance","cpu","usage","memory","available","database","mainDatabase","applicationConnections","healthy","total","percentage","network","latency","alerts","length","map","alert","index","message","category","average","p95","uptime","since","incidents24h","throughput","requestsPerMinute","peak24h","maxHeight","overflowY","connection","applicationName","connectionType","connectionId"],"sources":["/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/src/components/health/SystemHealthDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Server, \n  Database, \n  Cpu, \n  HardDrive, \n  Wifi, \n  Activity, \n  AlertTriangle, \n  CheckCircle2, \n  AlertCircle,\n  TrendingUp,\n  TrendingDown,\n  RefreshCw,\n  Clock,\n  Zap,\n  Globe,\n  Monitor,\n  BarChart3\n} from 'lucide-react';\nimport { systemHealthApi } from '../../services/api';\n\ninterface HealthOverview {\n  overall: {\n    status: string;\n    healthScore: number;\n    lastChecked: string;\n    responseTime: number;\n  };\n  database: {\n    mainDatabase: string;\n    applicationConnections: {\n      healthy: number;\n      total: number;\n      percentage: number;\n    };\n  };\n  performance: {\n    cpu: { usage: number; status: string };\n    memory: { usage: number; status: string; available: string };\n    disk: { usage: number; status: string; available: string };\n    network: { status: string; latency: number };\n  };\n  alerts: Array<{\n    level: string;\n    message: string;\n    timestamp: string;\n    category: string;\n  }>;\n}\n\ninterface DatabaseConnection {\n  connectionId: string;\n  applicationName: string;\n  connectionType: string;\n  status: string;\n  responseTime: number;\n  errorMessage: string;\n  lastTested: string;\n}\n\ninterface PerformanceMetrics {\n  responseTime: {\n    average: number;\n    p95: number;\n    trend: number;\n  };\n  throughput: {\n    requestsPerMinute: number;\n    peak24h: number;\n    trend: number;\n  };\n  uptime: {\n    percentage: number;\n    since: string;\n    incidents24h: number;\n  };\n  resources: {\n    cpu: { usage: number; status: string };\n    memory: { usage: number; status: string; available: string };\n    disk: { usage: number; status: string; available: string };\n    network: { status: string; latency: number };\n  };\n}\n\nexport default function SystemHealthDashboard() {\n  const [healthData, setHealthData] = useState<HealthOverview | null>(null);\n  const [connections, setConnections] = useState<DatabaseConnection[]>([]);\n  const [performanceData, setPerformanceData] = useState<PerformanceMetrics | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n\n  const fetchHealthData = async () => {\n    try {\n      setLoading(true);\n      console.log('Fetching health data...');\n      \n      const [healthResponse, connectionsResponse, performanceResponse] = await Promise.all([\n        systemHealthApi.getHealthOverview(),\n        systemHealthApi.getDatabaseConnections(),\n        systemHealthApi.getPerformanceMetrics()\n      ]);\n\n      console.log('Health response:', healthResponse);\n      console.log('Connections response:', connectionsResponse);\n      console.log('Performance response:', performanceResponse);\n\n      if (healthResponse.success) {\n        setHealthData(healthResponse.data);\n      } else {\n        console.error('Health API failed:', healthResponse);\n      }\n      \n      if (connectionsResponse.success) {\n        setConnections(connectionsResponse.data);\n      } else {\n        console.error('Connections API failed:', connectionsResponse);\n      }\n      \n      if (performanceResponse.success) {\n        setPerformanceData(performanceResponse.data);\n      } else {\n        console.error('Performance API failed:', performanceResponse);\n      }\n      \n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error('Failed to fetch health data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchHealthData();\n    \n    // Auto-refresh every 2 minutes\n    const interval = setInterval(fetchHealthData, 2 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'excellent': case 'healthy': case 'good': case 'stable': case 'normal': return 'success';\n      case 'fair': case 'medium': case 'warning': return 'warning';\n      case 'poor': case 'unhealthy': case 'critical': case 'high': return 'danger';\n      default: return 'info';\n    }\n  };\n\n  const getAlertColor = (level: string) => {\n    switch (level.toLowerCase()) {\n      case 'critical': return 'danger';\n      case 'warning': return 'warning';\n      case 'info': return 'info';\n      default: return 'secondary';\n    }\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins}m ago`;\n    return date.toLocaleTimeString();\n  };\n\n  const getTrendIcon = (trend: number) => {\n    if (trend > 5) return <TrendingUp className=\"text-success\" size={16} />;\n    if (trend < -5) return <TrendingDown className=\"text-danger\" size={16} />;\n    return <div className=\"text-muted\" style={{ width: 16, height: 16 }}>–</div>;\n  };\n\n  if (loading && !healthData) {\n    return (\n      <div className=\"min-vh-100 bg-light\">\n        <div className=\"container-fluid py-4\">\n          <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '50vh' }}>\n            <div className=\"text-center\">\n              <div className=\"spinner-border text-primary mb-3\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n              </div>\n              <h5>Loading System Health Dashboard...</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show error state if APIs failed to load data\n  if (!loading && !healthData) {\n    return (\n      <div className=\"min-vh-100 bg-light\">\n        <div className=\"container-fluid py-4\">\n          <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '50vh' }}>\n            <div className=\"text-center\">\n              <AlertTriangle className=\"text-warning mb-3\" size={48} />\n              <h5>Unable to load system health data</h5>\n              <p className=\"text-muted\">Check console for errors or try refreshing the page.</p>\n              <button \n                onClick={fetchHealthData}\n                className=\"btn btn-primary\"\n              >\n                Retry\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-vh-100 bg-light\">\n      <div className=\"container-fluid py-4\">\n        {/* Header */}\n        <div className=\"row mb-4\">\n          <div className=\"col-12\">\n            <div className=\"d-flex justify-content-between align-items-center\">\n              <div>\n                <h1 className=\"display-6 fw-bold mb-2 d-flex align-items-center\">\n                  <Monitor className=\"text-primary me-3\" size={32} />\n                  System Health Dashboard\n                </h1>\n                <p className=\"text-muted mb-0\">\n                  Real-time infrastructure monitoring and performance analytics\n                </p>\n              </div>\n              <div className=\"text-end\">\n                <button \n                  onClick={fetchHealthData}\n                  className=\"btn btn-outline-primary btn-sm d-flex align-items-center\"\n                  disabled={loading}\n                >\n                  <RefreshCw className={`me-2 ${loading ? 'rotating' : ''}`} size={16} />\n                  Refresh\n                </button>\n                <small className=\"text-muted d-block mt-1\">\n                  Last updated: {lastUpdated.toLocaleTimeString()}\n                </small>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {healthData && (\n          <>\n            {/* Overall Health Status */}\n            <div className=\"row g-4 mb-4\">\n              <div className=\"col-lg-4\">\n                <div className=\"card border-0 rounded-4 shadow-sm h-100\">\n                  <div className=\"card-body p-4 text-center\">\n                    <div className={`text-${getStatusColor(healthData.overall.status)} mb-3`}>\n                      {healthData.overall.status === 'Excellent' || healthData.overall.status === 'Good' ? \n                        <CheckCircle2 size={48} /> : \n                        <AlertCircle size={48} />\n                      }\n                    </div>\n                    <h3 className={`text-${getStatusColor(healthData.overall.status)} fw-bold`}>\n                      {healthData.overall.healthScore}/100\n                    </h3>\n                    <h6 className=\"fw-semibold mb-2\">Overall Health</h6>\n                    <span className={`badge bg-${getStatusColor(healthData.overall.status)} bg-opacity-10 text-${getStatusColor(healthData.overall.status)} mb-3`}>\n                      {healthData.overall.status.toUpperCase()}\n                    </span>\n                    <div className=\"small text-muted\">\n                      <Clock size={12} className=\"me-1\" />\n                      Response time: {healthData.overall.responseTime}ms\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-lg-8\">\n                {/* System Resources */}\n                <div className=\"row g-3 h-100\">\n                  <div className=\"col-md-3\">\n                    <div className=\"card border-0 rounded-4 shadow-sm h-100\">\n                      <div className=\"card-body p-3 text-center\">\n                        <Cpu className={`text-${getStatusColor(healthData.performance.cpu.status)} mb-2`} size={24} />\n                        <h4 className=\"fw-bold mb-1\">{healthData.performance.cpu.usage}%</h4>\n                        <small className=\"text-muted\">CPU Usage</small>\n                        <div className={`badge bg-${getStatusColor(healthData.performance.cpu.status)} bg-opacity-10 text-${getStatusColor(healthData.performance.cpu.status)} mt-1`}>\n                          {healthData.performance.cpu.status}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <div className=\"card border-0 rounded-4 shadow-sm h-100\">\n                      <div className=\"card-body p-3 text-center\">\n                        <HardDrive className={`text-${getStatusColor(healthData.performance.memory.status)} mb-2`} size={24} />\n                        <h4 className=\"fw-bold mb-1\">{healthData.performance.memory.usage}%</h4>\n                        <small className=\"text-muted\">Memory</small>\n                        <div className=\"small text-muted\">{healthData.performance.memory.available} free</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <div className=\"card border-0 rounded-4 shadow-sm h-100\">\n                      <div className=\"card-body p-3 text-center\">\n                        <Database className={`text-${getStatusColor(healthData.database.mainDatabase)} mb-2`} size={24} />\n                        <h4 className=\"fw-bold mb-1\">{healthData.database.applicationConnections.healthy}/{healthData.database.applicationConnections.total}</h4>\n                        <small className=\"text-muted\">DB Connections</small>\n                        <div className=\"small text-muted\">{healthData.database.applicationConnections.percentage}% healthy</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-3\">\n                    <div className=\"card border-0 rounded-4 shadow-sm h-100\">\n                      <div className=\"card-body p-3 text-center\">\n                        <Wifi className={`text-${getStatusColor(healthData.performance.network.status)} mb-2`} size={24} />\n                        <h4 className=\"fw-bold mb-1\">{healthData.performance.network.latency}ms</h4>\n                        <small className=\"text-muted\">Network Latency</small>\n                        <div className={`badge bg-${getStatusColor(healthData.performance.network.status)} bg-opacity-10 text-${getStatusColor(healthData.performance.network.status)} mt-1`}>\n                          {healthData.performance.network.status}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Alerts */}\n            {healthData.alerts.length > 0 && (\n              <div className=\"row mb-4\">\n                <div className=\"col-12\">\n                  <div className=\"card border-0 rounded-4 shadow-sm\">\n                    <div className=\"card-body p-4\">\n                      <div className=\"d-flex align-items-center mb-3\">\n                        <AlertTriangle className=\"text-warning me-3\" size={24} />\n                        <h5 className=\"card-title fw-bold mb-0\">Active Alerts</h5>\n                      </div>\n                      <div className=\"row g-3\">\n                        {healthData.alerts.map((alert, index) => (\n                          <div key={index} className=\"col-lg-6\">\n                            <div className={`alert alert-${getAlertColor(alert.level)} d-flex align-items-start`}>\n                              <AlertCircle size={16} className=\"me-2 mt-1 flex-shrink-0\" />\n                              <div className=\"flex-grow-1\">\n                                <div className=\"fw-semibold\">{alert.message}</div>\n                                <div className=\"small\">\n                                  {alert.category} • {formatTimestamp(alert.timestamp)}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Performance Metrics & Database Connections */}\n            <div className=\"row g-4\">\n              {/* Performance Metrics */}\n              {performanceData && (\n                <div className=\"col-lg-6\">\n                  <div className=\"card border-0 rounded-4 shadow-sm h-100\">\n                    <div className=\"card-body p-4\">\n                      <div className=\"d-flex align-items-center mb-4\">\n                        <BarChart3 className=\"text-primary me-3\" size={24} />\n                        <h5 className=\"card-title fw-bold mb-0\">Performance Metrics</h5>\n                      </div>\n                      \n                      <div className=\"row g-3\">\n                        <div className=\"col-12\">\n                          <div className=\"bg-light rounded-3 p-3\">\n                            <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                              <span className=\"fw-semibold\">Response Time</span>\n                              {getTrendIcon(performanceData.responseTime.trend)}\n                            </div>\n                            <div className=\"d-flex justify-content-between\">\n                              <div>\n                                <div className=\"h5 mb-0\">{performanceData.responseTime.average}ms</div>\n                                <small className=\"text-muted\">Average</small>\n                              </div>\n                              <div className=\"text-end\">\n                                <div className=\"h6 mb-0\">{performanceData.responseTime.p95}ms</div>\n                                <small className=\"text-muted\">95th percentile</small>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"col-12\">\n                          <div className=\"bg-light rounded-3 p-3\">\n                            <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                              <span className=\"fw-semibold\">Uptime</span>\n                              <span className=\"text-success\">{performanceData.uptime.percentage}%</span>\n                            </div>\n                            <div className=\"small text-muted\">\n                              Since {performanceData.uptime.since} • {performanceData.uptime.incidents24h} incidents (24h)\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"col-12\">\n                          <div className=\"bg-light rounded-3 p-3\">\n                            <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                              <span className=\"fw-semibold\">Throughput</span>\n                              {getTrendIcon(performanceData.throughput.trend)}\n                            </div>\n                            <div className=\"d-flex justify-content-between\">\n                              <div>\n                                <div className=\"h6 mb-0\">{performanceData.throughput.requestsPerMinute}</div>\n                                <small className=\"text-muted\">Requests/min</small>\n                              </div>\n                              <div className=\"text-end\">\n                                <div className=\"h6 mb-0\">{performanceData.throughput.peak24h}</div>\n                                <small className=\"text-muted\">Peak (24h)</small>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Database Connections */}\n              <div className=\"col-lg-6\">\n                <div className=\"card border-0 rounded-4 shadow-sm h-100\">\n                  <div className=\"card-body p-4\">\n                    <div className=\"d-flex align-items-center mb-4\">\n                      <Database className=\"text-primary me-3\" size={24} />\n                      <h5 className=\"card-title fw-bold mb-0\">Database Connections</h5>\n                    </div>\n                    \n                    <div style={{ maxHeight: '300px', overflowY: 'auto' }}>\n                      {connections.length > 0 ? connections.map((connection) => (\n                        <div key={connection.connectionId} className=\"d-flex justify-content-between align-items-center py-2 px-3 mb-2 bg-light rounded-3\">\n                          <div className=\"flex-grow-1\">\n                            <div className=\"fw-semibold small\">{connection.applicationName}</div>\n                            <div className=\"text-muted small\">{connection.connectionType}</div>\n                          </div>\n                          <div className=\"text-end\">\n                            <span className={`badge bg-${getStatusColor(connection.status)}`}>\n                              {connection.status}\n                            </span>\n                            <div className=\"small text-muted mt-1\">{connection.responseTime}ms</div>\n                          </div>\n                        </div>\n                      )) : (\n                        <div className=\"text-center py-4 text-muted\">\n                          <Database size={32} className=\"mb-2 opacity-50\" />\n                          <div>No database connections configured</div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      <style>{`\n        .rotating {\n          animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n          from { transform: rotate(0deg); }\n          to { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAEEC,QAAQ,CACRC,GAAG,CACHC,SAAS,CACTC,IAAI,CAEJC,aAAa,CACbC,YAAY,CACZC,WAAW,CACXC,UAAU,CACVC,YAAY,CACZC,SAAS,CACTC,KAAK,CAGLC,OAAO,CACPC,SAAS,KACJ,cAAc,CACrB,OAASC,eAAe,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAiErD,cAAe,SAAS,CAAAC,qBAAqBA,CAAA,CAAG,CAC9C,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGxB,QAAQ,CAAwB,IAAI,CAAC,CACzE,KAAM,CAACyB,WAAW,CAAEC,cAAc,CAAC,CAAG1B,QAAQ,CAAuB,EAAE,CAAC,CACxE,KAAM,CAAC2B,eAAe,CAAEC,kBAAkB,CAAC,CAAG5B,QAAQ,CAA4B,IAAI,CAAC,CACvF,KAAM,CAAC6B,OAAO,CAAEC,UAAU,CAAC,CAAG9B,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC+B,WAAW,CAAEC,cAAc,CAAC,CAAGhC,QAAQ,CAAO,GAAI,CAAAiC,IAAI,CAAC,CAAC,CAAC,CAEhE,KAAM,CAAAC,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACFJ,UAAU,CAAC,IAAI,CAAC,CAChBK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CAEtC,KAAM,CAACC,cAAc,CAAEC,mBAAmB,CAAEC,mBAAmB,CAAC,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAAC,CACnF1B,eAAe,CAAC2B,iBAAiB,CAAC,CAAC,CACnC3B,eAAe,CAAC4B,sBAAsB,CAAC,CAAC,CACxC5B,eAAe,CAAC6B,qBAAqB,CAAC,CAAC,CACxC,CAAC,CAEFT,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEC,cAAc,CAAC,CAC/CF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEE,mBAAmB,CAAC,CACzDH,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEG,mBAAmB,CAAC,CAEzD,GAAIF,cAAc,CAACQ,OAAO,CAAE,CAC1BrB,aAAa,CAACa,cAAc,CAACS,IAAI,CAAC,CACpC,CAAC,IAAM,CACLX,OAAO,CAACY,KAAK,CAAC,oBAAoB,CAAEV,cAAc,CAAC,CACrD,CAEA,GAAIC,mBAAmB,CAACO,OAAO,CAAE,CAC/BnB,cAAc,CAACY,mBAAmB,CAACQ,IAAI,CAAC,CAC1C,CAAC,IAAM,CACLX,OAAO,CAACY,KAAK,CAAC,yBAAyB,CAAET,mBAAmB,CAAC,CAC/D,CAEA,GAAIC,mBAAmB,CAACM,OAAO,CAAE,CAC/BjB,kBAAkB,CAACW,mBAAmB,CAACO,IAAI,CAAC,CAC9C,CAAC,IAAM,CACLX,OAAO,CAACY,KAAK,CAAC,yBAAyB,CAAER,mBAAmB,CAAC,CAC/D,CAEAP,cAAc,CAAC,GAAI,CAAAC,IAAI,CAAC,CAAC,CAAC,CAC5B,CAAE,MAAOc,KAAK,CAAE,CACdZ,OAAO,CAACY,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAAC,OAAS,CACRjB,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED7B,SAAS,CAAC,IAAM,CACdiC,eAAe,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAc,QAAQ,CAAGC,WAAW,CAACf,eAAe,CAAE,CAAC,CAAG,EAAE,CAAG,IAAI,CAAC,CAC5D,MAAO,IAAMgB,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,cAAc,CAAIC,MAAc,EAAK,CACzC,OAAQA,MAAM,CAACC,WAAW,CAAC,CAAC,EAC1B,IAAK,WAAW,CAAE,IAAK,SAAS,CAAE,IAAK,MAAM,CAAE,IAAK,QAAQ,CAAE,IAAK,QAAQ,CAAE,MAAO,SAAS,CAC7F,IAAK,MAAM,CAAE,IAAK,QAAQ,CAAE,IAAK,SAAS,CAAE,MAAO,SAAS,CAC5D,IAAK,MAAM,CAAE,IAAK,WAAW,CAAE,IAAK,UAAU,CAAE,IAAK,MAAM,CAAE,MAAO,QAAQ,CAC5E,QAAS,MAAO,MAAM,CACxB,CACF,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIC,KAAa,EAAK,CACvC,OAAQA,KAAK,CAACF,WAAW,CAAC,CAAC,EACzB,IAAK,UAAU,CAAE,MAAO,QAAQ,CAChC,IAAK,SAAS,CAAE,MAAO,SAAS,CAChC,IAAK,MAAM,CAAE,MAAO,MAAM,CAC1B,QAAS,MAAO,WAAW,CAC7B,CACF,CAAC,CAED,KAAM,CAAAG,eAAe,CAAIC,SAAiB,EAAK,CAC7C,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAzB,IAAI,CAACwB,SAAS,CAAC,CAChC,KAAM,CAAAE,GAAG,CAAG,GAAI,CAAA1B,IAAI,CAAC,CAAC,CACtB,KAAM,CAAA2B,MAAM,CAAGD,GAAG,CAACE,OAAO,CAAC,CAAC,CAAGH,IAAI,CAACG,OAAO,CAAC,CAAC,CAC7C,KAAM,CAAAC,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAG,KAAK,CAAC,CAE3C,GAAIE,QAAQ,CAAG,CAAC,CAAE,MAAO,UAAU,CACnC,GAAIA,QAAQ,CAAG,EAAE,CAAE,SAAAG,MAAA,CAAUH,QAAQ,UACrC,MAAO,CAAAJ,IAAI,CAACQ,kBAAkB,CAAC,CAAC,CAClC,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIC,KAAa,EAAK,CACtC,GAAIA,KAAK,CAAG,CAAC,CAAE,mBAAOnD,IAAA,CAACR,UAAU,EAAC4D,SAAS,CAAC,cAAc,CAACC,IAAI,CAAE,EAAG,CAAE,CAAC,CACvE,GAAIF,KAAK,CAAG,CAAC,CAAC,CAAE,mBAAOnD,IAAA,CAACP,YAAY,EAAC2D,SAAS,CAAC,aAAa,CAACC,IAAI,CAAE,EAAG,CAAE,CAAC,CACzE,mBAAOrD,IAAA,QAAKoD,SAAS,CAAC,YAAY,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,MAAM,CAAE,EAAG,CAAE,CAAAC,QAAA,CAAC,QAAC,CAAK,CAAC,CAC9E,CAAC,CAED,GAAI7C,OAAO,EAAI,CAACN,UAAU,CAAE,CAC1B,mBACEN,IAAA,QAAKoD,SAAS,CAAC,qBAAqB,CAAAK,QAAA,cAClCzD,IAAA,QAAKoD,SAAS,CAAC,sBAAsB,CAAAK,QAAA,cACnCzD,IAAA,QAAKoD,SAAS,CAAC,kDAAkD,CAACE,KAAK,CAAE,CAAEE,MAAM,CAAE,MAAO,CAAE,CAAAC,QAAA,cAC1FvD,KAAA,QAAKkD,SAAS,CAAC,aAAa,CAAAK,QAAA,eAC1BzD,IAAA,QAAKoD,SAAS,CAAC,kCAAkC,CAACM,IAAI,CAAC,QAAQ,CAAAD,QAAA,cAC7DzD,IAAA,SAAMoD,SAAS,CAAC,iBAAiB,CAAAK,QAAA,CAAC,YAAU,CAAM,CAAC,CAChD,CAAC,cACNzD,IAAA,OAAAyD,QAAA,CAAI,oCAAkC,CAAI,CAAC,EACxC,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CAEV,CAEA;AACA,GAAI,CAAC7C,OAAO,EAAI,CAACN,UAAU,CAAE,CAC3B,mBACEN,IAAA,QAAKoD,SAAS,CAAC,qBAAqB,CAAAK,QAAA,cAClCzD,IAAA,QAAKoD,SAAS,CAAC,sBAAsB,CAAAK,QAAA,cACnCzD,IAAA,QAAKoD,SAAS,CAAC,kDAAkD,CAACE,KAAK,CAAE,CAAEE,MAAM,CAAE,MAAO,CAAE,CAAAC,QAAA,cAC1FvD,KAAA,QAAKkD,SAAS,CAAC,aAAa,CAAAK,QAAA,eAC1BzD,IAAA,CAACX,aAAa,EAAC+D,SAAS,CAAC,mBAAmB,CAACC,IAAI,CAAE,EAAG,CAAE,CAAC,cACzDrD,IAAA,OAAAyD,QAAA,CAAI,mCAAiC,CAAI,CAAC,cAC1CzD,IAAA,MAAGoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,sDAAoD,CAAG,CAAC,cAClFzD,IAAA,WACE2D,OAAO,CAAE1C,eAAgB,CACzBmC,SAAS,CAAC,iBAAiB,CAAAK,QAAA,CAC5B,OAED,CAAQ,CAAC,EACN,CAAC,CACH,CAAC,CACH,CAAC,CACH,CAAC,CAEV,CAEA,mBACEvD,KAAA,QAAKkD,SAAS,CAAC,qBAAqB,CAAAK,QAAA,eAClCvD,KAAA,QAAKkD,SAAS,CAAC,sBAAsB,CAAAK,QAAA,eAEnCzD,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,QAAQ,CAAAK,QAAA,cACrBvD,KAAA,QAAKkD,SAAS,CAAC,mDAAmD,CAAAK,QAAA,eAChEvD,KAAA,QAAAuD,QAAA,eACEvD,KAAA,OAAIkD,SAAS,CAAC,kDAAkD,CAAAK,QAAA,eAC9DzD,IAAA,CAACJ,OAAO,EAACwD,SAAS,CAAC,mBAAmB,CAACC,IAAI,CAAE,EAAG,CAAE,CAAC,0BAErD,EAAI,CAAC,cACLrD,IAAA,MAAGoD,SAAS,CAAC,iBAAiB,CAAAK,QAAA,CAAC,+DAE/B,CAAG,CAAC,EACD,CAAC,cACNvD,KAAA,QAAKkD,SAAS,CAAC,UAAU,CAAAK,QAAA,eACvBvD,KAAA,WACEyD,OAAO,CAAE1C,eAAgB,CACzBmC,SAAS,CAAC,0DAA0D,CACpEQ,QAAQ,CAAEhD,OAAQ,CAAA6C,QAAA,eAElBzD,IAAA,CAACN,SAAS,EAAC0D,SAAS,SAAAJ,MAAA,CAAUpC,OAAO,CAAG,UAAU,CAAG,EAAE,CAAG,CAACyC,IAAI,CAAE,EAAG,CAAE,CAAC,UAEzE,EAAQ,CAAC,cACTnD,KAAA,UAAOkD,SAAS,CAAC,yBAAyB,CAAAK,QAAA,EAAC,gBAC3B,CAAC3C,WAAW,CAACmC,kBAAkB,CAAC,CAAC,EAC1C,CAAC,EACL,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,CAEL3C,UAAU,eACTJ,KAAA,CAAAE,SAAA,EAAAqD,QAAA,eAEEvD,KAAA,QAAKkD,SAAS,CAAC,cAAc,CAAAK,QAAA,eAC3BzD,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAK,QAAA,cACtDvD,KAAA,QAAKkD,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACxCzD,IAAA,QAAKoD,SAAS,SAAAJ,MAAA,CAAUd,cAAc,CAAC5B,UAAU,CAACuD,OAAO,CAAC1B,MAAM,CAAC,SAAQ,CAAAsB,QAAA,CACtEnD,UAAU,CAACuD,OAAO,CAAC1B,MAAM,GAAK,WAAW,EAAI7B,UAAU,CAACuD,OAAO,CAAC1B,MAAM,GAAK,MAAM,cAChFnC,IAAA,CAACV,YAAY,EAAC+D,IAAI,CAAE,EAAG,CAAE,CAAC,cAC1BrD,IAAA,CAACT,WAAW,EAAC8D,IAAI,CAAE,EAAG,CAAE,CAAC,CAExB,CAAC,cACNnD,KAAA,OAAIkD,SAAS,SAAAJ,MAAA,CAAUd,cAAc,CAAC5B,UAAU,CAACuD,OAAO,CAAC1B,MAAM,CAAC,YAAW,CAAAsB,QAAA,EACxEnD,UAAU,CAACuD,OAAO,CAACC,WAAW,CAAC,MAClC,EAAI,CAAC,cACL9D,IAAA,OAAIoD,SAAS,CAAC,kBAAkB,CAAAK,QAAA,CAAC,gBAAc,CAAI,CAAC,cACpDzD,IAAA,SAAMoD,SAAS,aAAAJ,MAAA,CAAcd,cAAc,CAAC5B,UAAU,CAACuD,OAAO,CAAC1B,MAAM,CAAC,yBAAAa,MAAA,CAAuBd,cAAc,CAAC5B,UAAU,CAACuD,OAAO,CAAC1B,MAAM,CAAC,SAAQ,CAAAsB,QAAA,CAC3InD,UAAU,CAACuD,OAAO,CAAC1B,MAAM,CAAC4B,WAAW,CAAC,CAAC,CACpC,CAAC,cACP7D,KAAA,QAAKkD,SAAS,CAAC,kBAAkB,CAAAK,QAAA,eAC/BzD,IAAA,CAACL,KAAK,EAAC0D,IAAI,CAAE,EAAG,CAACD,SAAS,CAAC,MAAM,CAAE,CAAC,kBACrB,CAAC9C,UAAU,CAACuD,OAAO,CAACG,YAAY,CAAC,IAClD,EAAK,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,cAENhE,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cAEvBvD,KAAA,QAAKkD,SAAS,CAAC,eAAe,CAAAK,QAAA,eAC5BzD,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAK,QAAA,cACtDvD,KAAA,QAAKkD,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACxCzD,IAAA,CAACd,GAAG,EAACkE,SAAS,SAAAJ,MAAA,CAAUd,cAAc,CAAC5B,UAAU,CAAC2D,WAAW,CAACC,GAAG,CAAC/B,MAAM,CAAC,SAAQ,CAACkB,IAAI,CAAE,EAAG,CAAE,CAAC,cAC9FnD,KAAA,OAAIkD,SAAS,CAAC,cAAc,CAAAK,QAAA,EAAEnD,UAAU,CAAC2D,WAAW,CAACC,GAAG,CAACC,KAAK,CAAC,GAAC,EAAI,CAAC,cACrEnE,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,WAAS,CAAO,CAAC,cAC/CzD,IAAA,QAAKoD,SAAS,aAAAJ,MAAA,CAAcd,cAAc,CAAC5B,UAAU,CAAC2D,WAAW,CAACC,GAAG,CAAC/B,MAAM,CAAC,yBAAAa,MAAA,CAAuBd,cAAc,CAAC5B,UAAU,CAAC2D,WAAW,CAACC,GAAG,CAAC/B,MAAM,CAAC,SAAQ,CAAAsB,QAAA,CAC1JnD,UAAU,CAAC2D,WAAW,CAACC,GAAG,CAAC/B,MAAM,CAC/B,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,cACNnC,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAK,QAAA,cACtDvD,KAAA,QAAKkD,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACxCzD,IAAA,CAACb,SAAS,EAACiE,SAAS,SAAAJ,MAAA,CAAUd,cAAc,CAAC5B,UAAU,CAAC2D,WAAW,CAACG,MAAM,CAACjC,MAAM,CAAC,SAAQ,CAACkB,IAAI,CAAE,EAAG,CAAE,CAAC,cACvGnD,KAAA,OAAIkD,SAAS,CAAC,cAAc,CAAAK,QAAA,EAAEnD,UAAU,CAAC2D,WAAW,CAACG,MAAM,CAACD,KAAK,CAAC,GAAC,EAAI,CAAC,cACxEnE,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,QAAM,CAAO,CAAC,cAC5CvD,KAAA,QAAKkD,SAAS,CAAC,kBAAkB,CAAAK,QAAA,EAAEnD,UAAU,CAAC2D,WAAW,CAACG,MAAM,CAACC,SAAS,CAAC,OAAK,EAAK,CAAC,EACnF,CAAC,CACH,CAAC,CACH,CAAC,cACNrE,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAK,QAAA,cACtDvD,KAAA,QAAKkD,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACxCzD,IAAA,CAACf,QAAQ,EAACmE,SAAS,SAAAJ,MAAA,CAAUd,cAAc,CAAC5B,UAAU,CAACgE,QAAQ,CAACC,YAAY,CAAC,SAAQ,CAAClB,IAAI,CAAE,EAAG,CAAE,CAAC,cAClGnD,KAAA,OAAIkD,SAAS,CAAC,cAAc,CAAAK,QAAA,EAAEnD,UAAU,CAACgE,QAAQ,CAACE,sBAAsB,CAACC,OAAO,CAAC,GAAC,CAACnE,UAAU,CAACgE,QAAQ,CAACE,sBAAsB,CAACE,KAAK,EAAK,CAAC,cACzI1E,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,gBAAc,CAAO,CAAC,cACpDvD,KAAA,QAAKkD,SAAS,CAAC,kBAAkB,CAAAK,QAAA,EAAEnD,UAAU,CAACgE,QAAQ,CAACE,sBAAsB,CAACG,UAAU,CAAC,WAAS,EAAK,CAAC,EACrG,CAAC,CACH,CAAC,CACH,CAAC,cACN3E,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAK,QAAA,cACtDvD,KAAA,QAAKkD,SAAS,CAAC,2BAA2B,CAAAK,QAAA,eACxCzD,IAAA,CAACZ,IAAI,EAACgE,SAAS,SAAAJ,MAAA,CAAUd,cAAc,CAAC5B,UAAU,CAAC2D,WAAW,CAACW,OAAO,CAACzC,MAAM,CAAC,SAAQ,CAACkB,IAAI,CAAE,EAAG,CAAE,CAAC,cACnGnD,KAAA,OAAIkD,SAAS,CAAC,cAAc,CAAAK,QAAA,EAAEnD,UAAU,CAAC2D,WAAW,CAACW,OAAO,CAACC,OAAO,CAAC,IAAE,EAAI,CAAC,cAC5E7E,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,iBAAe,CAAO,CAAC,cACrDzD,IAAA,QAAKoD,SAAS,aAAAJ,MAAA,CAAcd,cAAc,CAAC5B,UAAU,CAAC2D,WAAW,CAACW,OAAO,CAACzC,MAAM,CAAC,yBAAAa,MAAA,CAAuBd,cAAc,CAAC5B,UAAU,CAAC2D,WAAW,CAACW,OAAO,CAACzC,MAAM,CAAC,SAAQ,CAAAsB,QAAA,CAClKnD,UAAU,CAAC2D,WAAW,CAACW,OAAO,CAACzC,MAAM,CACnC,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,EACH,CAAC,CACH,CAAC,EACH,CAAC,CAGL7B,UAAU,CAACwE,MAAM,CAACC,MAAM,CAAG,CAAC,eAC3B/E,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,QAAQ,CAAAK,QAAA,cACrBzD,IAAA,QAAKoD,SAAS,CAAC,mCAAmC,CAAAK,QAAA,cAChDvD,KAAA,QAAKkD,SAAS,CAAC,eAAe,CAAAK,QAAA,eAC5BvD,KAAA,QAAKkD,SAAS,CAAC,gCAAgC,CAAAK,QAAA,eAC7CzD,IAAA,CAACX,aAAa,EAAC+D,SAAS,CAAC,mBAAmB,CAACC,IAAI,CAAE,EAAG,CAAE,CAAC,cACzDrD,IAAA,OAAIoD,SAAS,CAAC,yBAAyB,CAAAK,QAAA,CAAC,eAAa,CAAI,CAAC,EACvD,CAAC,cACNzD,IAAA,QAAKoD,SAAS,CAAC,SAAS,CAAAK,QAAA,CACrBnD,UAAU,CAACwE,MAAM,CAACE,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAClClF,IAAA,QAAiBoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACnCvD,KAAA,QAAKkD,SAAS,gBAAAJ,MAAA,CAAiBX,aAAa,CAAC4C,KAAK,CAAC3C,KAAK,CAAC,6BAA4B,CAAAmB,QAAA,eACnFzD,IAAA,CAACT,WAAW,EAAC8D,IAAI,CAAE,EAAG,CAACD,SAAS,CAAC,yBAAyB,CAAE,CAAC,cAC7DlD,KAAA,QAAKkD,SAAS,CAAC,aAAa,CAAAK,QAAA,eAC1BzD,IAAA,QAAKoD,SAAS,CAAC,aAAa,CAAAK,QAAA,CAAEwB,KAAK,CAACE,OAAO,CAAM,CAAC,cAClDjF,KAAA,QAAKkD,SAAS,CAAC,OAAO,CAAAK,QAAA,EACnBwB,KAAK,CAACG,QAAQ,CAAC,UAAG,CAAC7C,eAAe,CAAC0C,KAAK,CAACzC,SAAS,CAAC,EACjD,CAAC,EACH,CAAC,EACH,CAAC,EATE0C,KAUL,CACN,CAAC,CACC,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,CACH,CACN,cAGDhF,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAK,QAAA,EAErB/C,eAAe,eACdV,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAK,QAAA,cACtDvD,KAAA,QAAKkD,SAAS,CAAC,eAAe,CAAAK,QAAA,eAC5BvD,KAAA,QAAKkD,SAAS,CAAC,gCAAgC,CAAAK,QAAA,eAC7CzD,IAAA,CAACH,SAAS,EAACuD,SAAS,CAAC,mBAAmB,CAACC,IAAI,CAAE,EAAG,CAAE,CAAC,cACrDrD,IAAA,OAAIoD,SAAS,CAAC,yBAAyB,CAAAK,QAAA,CAAC,qBAAmB,CAAI,CAAC,EAC7D,CAAC,cAENvD,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAK,QAAA,eACtBzD,IAAA,QAAKoD,SAAS,CAAC,QAAQ,CAAAK,QAAA,cACrBvD,KAAA,QAAKkD,SAAS,CAAC,wBAAwB,CAAAK,QAAA,eACrCvD,KAAA,QAAKkD,SAAS,CAAC,wDAAwD,CAAAK,QAAA,eACrEzD,IAAA,SAAMoD,SAAS,CAAC,aAAa,CAAAK,QAAA,CAAC,eAAa,CAAM,CAAC,CACjDP,YAAY,CAACxC,eAAe,CAACsD,YAAY,CAACb,KAAK,CAAC,EAC9C,CAAC,cACNjD,KAAA,QAAKkD,SAAS,CAAC,gCAAgC,CAAAK,QAAA,eAC7CvD,KAAA,QAAAuD,QAAA,eACEvD,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAK,QAAA,EAAE/C,eAAe,CAACsD,YAAY,CAACqB,OAAO,CAAC,IAAE,EAAK,CAAC,cACvErF,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,SAAO,CAAO,CAAC,EAC1C,CAAC,cACNvD,KAAA,QAAKkD,SAAS,CAAC,UAAU,CAAAK,QAAA,eACvBvD,KAAA,QAAKkD,SAAS,CAAC,SAAS,CAAAK,QAAA,EAAE/C,eAAe,CAACsD,YAAY,CAACsB,GAAG,CAAC,IAAE,EAAK,CAAC,cACnEtF,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,iBAAe,CAAO,CAAC,EAClD,CAAC,EACH,CAAC,EACH,CAAC,CACH,CAAC,cAENzD,IAAA,QAAKoD,SAAS,CAAC,QAAQ,CAAAK,QAAA,cACrBvD,KAAA,QAAKkD,SAAS,CAAC,wBAAwB,CAAAK,QAAA,eACrCvD,KAAA,QAAKkD,SAAS,CAAC,wDAAwD,CAAAK,QAAA,eACrEzD,IAAA,SAAMoD,SAAS,CAAC,aAAa,CAAAK,QAAA,CAAC,QAAM,CAAM,CAAC,cAC3CvD,KAAA,SAAMkD,SAAS,CAAC,cAAc,CAAAK,QAAA,EAAE/C,eAAe,CAAC6E,MAAM,CAACZ,UAAU,CAAC,GAAC,EAAM,CAAC,EACvE,CAAC,cACNzE,KAAA,QAAKkD,SAAS,CAAC,kBAAkB,CAAAK,QAAA,EAAC,QAC1B,CAAC/C,eAAe,CAAC6E,MAAM,CAACC,KAAK,CAAC,UAAG,CAAC9E,eAAe,CAAC6E,MAAM,CAACE,YAAY,CAAC,kBAC9E,EAAK,CAAC,EACH,CAAC,CACH,CAAC,cAENzF,IAAA,QAAKoD,SAAS,CAAC,QAAQ,CAAAK,QAAA,cACrBvD,KAAA,QAAKkD,SAAS,CAAC,wBAAwB,CAAAK,QAAA,eACrCvD,KAAA,QAAKkD,SAAS,CAAC,wDAAwD,CAAAK,QAAA,eACrEzD,IAAA,SAAMoD,SAAS,CAAC,aAAa,CAAAK,QAAA,CAAC,YAAU,CAAM,CAAC,CAC9CP,YAAY,CAACxC,eAAe,CAACgF,UAAU,CAACvC,KAAK,CAAC,EAC5C,CAAC,cACNjD,KAAA,QAAKkD,SAAS,CAAC,gCAAgC,CAAAK,QAAA,eAC7CvD,KAAA,QAAAuD,QAAA,eACEzD,IAAA,QAAKoD,SAAS,CAAC,SAAS,CAAAK,QAAA,CAAE/C,eAAe,CAACgF,UAAU,CAACC,iBAAiB,CAAM,CAAC,cAC7E3F,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,cAAY,CAAO,CAAC,EAC/C,CAAC,cACNvD,KAAA,QAAKkD,SAAS,CAAC,UAAU,CAAAK,QAAA,eACvBzD,IAAA,QAAKoD,SAAS,CAAC,SAAS,CAAAK,QAAA,CAAE/C,eAAe,CAACgF,UAAU,CAACE,OAAO,CAAM,CAAC,cACnE5F,IAAA,UAAOoD,SAAS,CAAC,YAAY,CAAAK,QAAA,CAAC,YAAU,CAAO,CAAC,EAC7C,CAAC,EACH,CAAC,EACH,CAAC,CACH,CAAC,EACH,CAAC,EACH,CAAC,CACH,CAAC,CACH,CACN,cAGDzD,IAAA,QAAKoD,SAAS,CAAC,UAAU,CAAAK,QAAA,cACvBzD,IAAA,QAAKoD,SAAS,CAAC,yCAAyC,CAAAK,QAAA,cACtDvD,KAAA,QAAKkD,SAAS,CAAC,eAAe,CAAAK,QAAA,eAC5BvD,KAAA,QAAKkD,SAAS,CAAC,gCAAgC,CAAAK,QAAA,eAC7CzD,IAAA,CAACf,QAAQ,EAACmE,SAAS,CAAC,mBAAmB,CAACC,IAAI,CAAE,EAAG,CAAE,CAAC,cACpDrD,IAAA,OAAIoD,SAAS,CAAC,yBAAyB,CAAAK,QAAA,CAAC,sBAAoB,CAAI,CAAC,EAC9D,CAAC,cAENzD,IAAA,QAAKsD,KAAK,CAAE,CAAEuC,SAAS,CAAE,OAAO,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAArC,QAAA,CACnDjD,WAAW,CAACuE,MAAM,CAAG,CAAC,CAAGvE,WAAW,CAACwE,GAAG,CAAEe,UAAU,eACnD7F,KAAA,QAAmCkD,SAAS,CAAC,qFAAqF,CAAAK,QAAA,eAChIvD,KAAA,QAAKkD,SAAS,CAAC,aAAa,CAAAK,QAAA,eAC1BzD,IAAA,QAAKoD,SAAS,CAAC,mBAAmB,CAAAK,QAAA,CAAEsC,UAAU,CAACC,eAAe,CAAM,CAAC,cACrEhG,IAAA,QAAKoD,SAAS,CAAC,kBAAkB,CAAAK,QAAA,CAAEsC,UAAU,CAACE,cAAc,CAAM,CAAC,EAChE,CAAC,cACN/F,KAAA,QAAKkD,SAAS,CAAC,UAAU,CAAAK,QAAA,eACvBzD,IAAA,SAAMoD,SAAS,aAAAJ,MAAA,CAAcd,cAAc,CAAC6D,UAAU,CAAC5D,MAAM,CAAC,CAAG,CAAAsB,QAAA,CAC9DsC,UAAU,CAAC5D,MAAM,CACd,CAAC,cACPjC,KAAA,QAAKkD,SAAS,CAAC,uBAAuB,CAAAK,QAAA,EAAEsC,UAAU,CAAC/B,YAAY,CAAC,IAAE,EAAK,CAAC,EACrE,CAAC,GAVE+B,UAAU,CAACG,YAWhB,CACN,CAAC,cACAhG,KAAA,QAAKkD,SAAS,CAAC,6BAA6B,CAAAK,QAAA,eAC1CzD,IAAA,CAACf,QAAQ,EAACoE,IAAI,CAAE,EAAG,CAACD,SAAS,CAAC,iBAAiB,CAAE,CAAC,cAClDpD,IAAA,QAAAyD,QAAA,CAAK,oCAAkC,CAAK,CAAC,EAC1C,CACN,CACE,CAAC,EACH,CAAC,CACH,CAAC,CACH,CAAC,EACH,CAAC,EACN,CACH,EACE,CAAC,cAENzD,IAAA,UAAAyD,QAAA,qOASS,CAAC,EACP,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}