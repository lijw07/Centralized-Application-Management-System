{"ast":null,"code":"import _objectSpread from\"/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useCallback}from'react';export function useForm(_ref){let{initialValues,validationRules={},onSubmit}=_ref;const[formState,setFormState]=useState(()=>{const initialState={};Object.keys(initialValues).forEach(key=>{initialState[key]={value:initialValues[key],error:'',touched:false};});return initialState;});const[isSubmitting,setIsSubmitting]=useState(false);const validateField=useCallback((name,value)=>{const rules=validationRules[name];if(!rules)return'';if(rules.required&&(!value||value.toString().trim()==='')){return\"\".concat(name,\" is required\");}if(rules.minLength&&value&&value.toString().length<rules.minLength){return\"\".concat(name,\" must be at least \").concat(rules.minLength,\" characters\");}if(rules.maxLength&&value&&value.toString().length>rules.maxLength){return\"\".concat(name,\" must be no more than \").concat(rules.maxLength,\" characters\");}if(rules.pattern&&value&&!rules.pattern.test(value.toString())){return\"\".concat(name,\" format is invalid\");}if(rules.custom){const customError=rules.custom(value);if(customError)return customError;}return'';},[validationRules]);const setValue=useCallback(function(name,value){let shouldValidate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;setFormState(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:_objectSpread(_objectSpread({},prev[name]),{},{value,error:shouldValidate?validateField(name,value):prev[name].error,touched:true})}));},[validateField]);const setError=useCallback((name,error)=>{setFormState(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:_objectSpread(_objectSpread({},prev[name]),{},{error})}));},[]);const validateForm=useCallback(()=>{let isValid=true;const newFormState=_objectSpread({},formState);Object.keys(formState).forEach(name=>{const error=validateField(name,formState[name].value);newFormState[name]=_objectSpread(_objectSpread({},newFormState[name]),{},{error,touched:true});if(error)isValid=false;});setFormState(newFormState);return isValid;},[formState,validateField]);const handleSubmit=useCallback(async e=>{if(e)e.preventDefault();if(!onSubmit)return;const isValid=validateForm();if(!isValid)return;setIsSubmitting(true);try{const values=Object.keys(formState).reduce((acc,key)=>{acc[key]=formState[key].value;return acc;},{});await onSubmit(values);}catch(error){console.error('Form submission error:',error);}finally{setIsSubmitting(false);}},[formState,onSubmit,validateForm]);const reset=useCallback(()=>{const resetState={};Object.keys(initialValues).forEach(key=>{resetState[key]={value:initialValues[key],error:'',touched:false};});setFormState(resetState);},[initialValues]);const values=Object.keys(formState).reduce((acc,key)=>{acc[key]=formState[key].value;return acc;},{});const errors=Object.keys(formState).reduce((acc,key)=>{acc[key]=formState[key].error;return acc;},{});const touched=Object.keys(formState).reduce((acc,key)=>{acc[key]=formState[key].touched;return acc;},{});const isValid=Object.values(formState).every(field=>!field.error);const hasErrors=Object.values(formState).some(field=>field.error&&field.touched);return{values,errors,touched,isValid,hasErrors,isSubmitting,setValue,setError,validateForm,handleSubmit,reset};}// Common validation rules\nexport const validationRules={required:{required:true},email:{required:true,pattern:/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,custom:value=>{if(value&&!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)){return'Please enter a valid email address';}return null;}},password:{required:true,minLength:8,custom:value=>{if(value&&value.length>=8){const hasUpperCase=/[A-Z]/.test(value);const hasLowerCase=/[a-z]/.test(value);const hasNumbers=/\\d/.test(value);const hasSpecial=/[@$!%*?&]/.test(value);if(!hasUpperCase||!hasLowerCase||!hasNumbers||!hasSpecial){return'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character';}}return null;}},username:{required:true,minLength:3,maxLength:50},name:{required:true,minLength:1,maxLength:50}};","map":{"version":3,"names":["useState","useCallback","useForm","_ref","initialValues","validationRules","onSubmit","formState","setFormState","initialState","Object","keys","forEach","key","value","error","touched","isSubmitting","setIsSubmitting","validateField","name","rules","required","toString","trim","concat","minLength","length","maxLength","pattern","test","custom","customError","setValue","shouldValidate","arguments","undefined","prev","_objectSpread","setError","validateForm","isValid","newFormState","handleSubmit","e","preventDefault","values","reduce","acc","console","reset","resetState","errors","every","field","hasErrors","some","email","password","hasUpperCase","hasLowerCase","hasNumbers","hasSpecial","username"],"sources":["/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/src/hooks/useForm.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\ninterface ValidationRule {\n  required?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  pattern?: RegExp;\n  custom?: (value: any) => string | null;\n}\n\ninterface FormField {\n  value: any;\n  error: string;\n  touched: boolean;\n}\n\ninterface FormState {\n  [key: string]: FormField;\n}\n\ninterface UseFormOptions<T> {\n  initialValues: T;\n  validationRules?: { [K in keyof T]?: ValidationRule };\n  onSubmit?: (values: T) => void | Promise<void>;\n}\n\nexport function useForm<T extends Record<string, any>>({\n  initialValues,\n  validationRules = {},\n  onSubmit,\n}: UseFormOptions<T>) {\n  const [formState, setFormState] = useState<FormState>(() => {\n    const initialState: FormState = {};\n    Object.keys(initialValues).forEach((key) => {\n      initialState[key] = {\n        value: initialValues[key],\n        error: '',\n        touched: false,\n      };\n    });\n    return initialState;\n  });\n\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const validateField = useCallback(\n    (name: string, value: any): string => {\n      const rules = validationRules[name as keyof T];\n      if (!rules) return '';\n\n      if (rules.required && (!value || value.toString().trim() === '')) {\n        return `${name} is required`;\n      }\n\n      if (rules.minLength && value && value.toString().length < rules.minLength) {\n        return `${name} must be at least ${rules.minLength} characters`;\n      }\n\n      if (rules.maxLength && value && value.toString().length > rules.maxLength) {\n        return `${name} must be no more than ${rules.maxLength} characters`;\n      }\n\n      if (rules.pattern && value && !rules.pattern.test(value.toString())) {\n        return `${name} format is invalid`;\n      }\n\n      if (rules.custom) {\n        const customError = rules.custom(value);\n        if (customError) return customError;\n      }\n\n      return '';\n    },\n    [validationRules]\n  );\n\n  const setValue = useCallback(\n    (name: string, value: any, shouldValidate = true) => {\n      setFormState((prev) => ({\n        ...prev,\n        [name]: {\n          ...prev[name],\n          value,\n          error: shouldValidate ? validateField(name, value) : prev[name].error,\n          touched: true,\n        },\n      }));\n    },\n    [validateField]\n  );\n\n  const setError = useCallback((name: string, error: string) => {\n    setFormState((prev) => ({\n      ...prev,\n      [name]: {\n        ...prev[name],\n        error,\n      },\n    }));\n  }, []);\n\n  const validateForm = useCallback(() => {\n    let isValid = true;\n    const newFormState = { ...formState };\n\n    Object.keys(formState).forEach((name) => {\n      const error = validateField(name, formState[name].value);\n      newFormState[name] = {\n        ...newFormState[name],\n        error,\n        touched: true,\n      };\n      if (error) isValid = false;\n    });\n\n    setFormState(newFormState);\n    return isValid;\n  }, [formState, validateField]);\n\n  const handleSubmit = useCallback(\n    async (e?: React.FormEvent) => {\n      if (e) e.preventDefault();\n\n      if (!onSubmit) return;\n\n      const isValid = validateForm();\n      if (!isValid) return;\n\n      setIsSubmitting(true);\n      try {\n        const values = Object.keys(formState).reduce((acc, key) => {\n          acc[key as keyof T] = formState[key].value;\n          return acc;\n        }, {} as T);\n\n        await onSubmit(values);\n      } catch (error) {\n        console.error('Form submission error:', error);\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [formState, onSubmit, validateForm]\n  );\n\n  const reset = useCallback(() => {\n    const resetState: FormState = {};\n    Object.keys(initialValues).forEach((key) => {\n      resetState[key] = {\n        value: initialValues[key],\n        error: '',\n        touched: false,\n      };\n    });\n    setFormState(resetState);\n  }, [initialValues]);\n\n  const values = Object.keys(formState).reduce((acc, key) => {\n    acc[key as keyof T] = formState[key].value;\n    return acc;\n  }, {} as T);\n\n  const errors = Object.keys(formState).reduce((acc, key) => {\n    acc[key] = formState[key].error;\n    return acc;\n  }, {} as Record<string, string>);\n\n  const touched = Object.keys(formState).reduce((acc, key) => {\n    acc[key] = formState[key].touched;\n    return acc;\n  }, {} as Record<string, boolean>);\n\n  const isValid = Object.values(formState).every((field) => !field.error);\n  const hasErrors = Object.values(formState).some((field) => field.error && field.touched);\n\n  return {\n    values,\n    errors,\n    touched,\n    isValid,\n    hasErrors,\n    isSubmitting,\n    setValue,\n    setError,\n    validateForm,\n    handleSubmit,\n    reset,\n  };\n}\n\n// Common validation rules\nexport const validationRules = {\n  required: { required: true },\n  email: {\n    required: true,\n    pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n    custom: (value: string) => {\n      if (value && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n        return 'Please enter a valid email address';\n      }\n      return null;\n    },\n  },\n  password: {\n    required: true,\n    minLength: 8,\n    custom: (value: string) => {\n      if (value && value.length >= 8) {\n        const hasUpperCase = /[A-Z]/.test(value);\n        const hasLowerCase = /[a-z]/.test(value);\n        const hasNumbers = /\\d/.test(value);\n        const hasSpecial = /[@$!%*?&]/.test(value);\n\n        if (!hasUpperCase || !hasLowerCase || !hasNumbers || !hasSpecial) {\n          return 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character';\n        }\n      }\n      return null;\n    },\n  },\n  username: {\n    required: true,\n    minLength: 3,\n    maxLength: 50,\n  },\n  name: {\n    required: true,\n    minLength: 1,\n    maxLength: 50,\n  },\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}