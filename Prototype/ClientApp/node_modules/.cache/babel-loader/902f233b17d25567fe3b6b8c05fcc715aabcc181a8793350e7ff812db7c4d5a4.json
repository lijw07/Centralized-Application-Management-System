{"ast":null,"code":"import _objectSpread from\"/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Database,Plus,Trash2,TestTube,Eye,EyeOff,ChevronLeft,ChevronRight,ChevronsLeft,ChevronsRight,Loader,CheckCircle2,AlertTriangle,Search}from'lucide-react';import{applicationApi}from'../../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// Enum mapping to convert numeric values to string names\nconst DataSourceTypeEnum={// Database connections\n0:'MicrosoftSqlServer',1:'MySql',2:'PostgreSql',3:'MongoDb',4:'Redis',5:'Oracle',6:'MariaDb',7:'Sqlite',8:'Cassandra',9:'ElasticSearch',// API connections\n10:'RestApi',11:'GraphQL',12:'SoapApi',13:'ODataApi',14:'WebSocket',// File-based connections\n15:'CsvFile',16:'JsonFile',17:'XmlFile',18:'ExcelFile',19:'ParquetFile',20:'YamlFile',21:'TextFile',// Cloud storage\n22:'AzureBlobStorage',23:'AmazonS3',24:'GoogleCloudStorage',// Message queues\n25:'RabbitMQ',26:'ApacheKafka',27:'AzureServiceBus'};// Helper function to get enum string name from numeric value\nconst getDataSourceTypeName=numericValue=>{return DataSourceTypeEnum[numericValue]||'MicrosoftSqlServer';};const Applications=()=>{// Shared function to calculate pagination data to ensure consistency\nconst calculatePaginationData=()=>{const hasFilters=searchTerm!==''||filterConnectionType!=='all'||filterAuthType!=='all'||sortOrder==='oldest';// Use allApplications for filtering/sorting, applications for backend pagination\nconst sourceApplications=hasFilters?allApplications:applications;// Safety check - if source applications is empty, return default values\nif(!sourceApplications||sourceApplications.length===0){return{hasFilters,currentApplications:[],displayTotalPages:0,displayTotalCount:0,filteredApplications:[]};}const filteredApplications=sourceApplications.filter(app=>{const matchesSearch=searchTerm===''||app.applicationName.toLowerCase().includes(searchTerm.toLowerCase())||app.applicationDescription.toLowerCase().includes(searchTerm.toLowerCase());const matchesConnectionType=filterConnectionType==='all'||DataSourceTypeEnum[app.applicationDataSourceType]===filterConnectionType;const matchesAuthType=filterAuthType==='all'||app.connection.authenticationType===filterAuthType;return matchesSearch&&matchesConnectionType&&matchesAuthType;});// Sort applications based on creation date\nconst sortedApplications=[...filteredApplications].sort((a,b)=>{if(!a.createdAt||!b.createdAt)return 0;const dateA=new Date(a.createdAt).getTime();const dateB=new Date(b.createdAt).getTime();return sortOrder==='newest'?dateB-dateA:dateA-dateB;});let displayTotalPages,displayTotalCount,currentApplications;if(hasFilters){// Client-side pagination for filtered/sorted results\ndisplayTotalPages=Math.ceil(sortedApplications.length/pageSize);displayTotalCount=sortedApplications.length;const startIndex=(currentPage-1)*pageSize;const endIndex=startIndex+pageSize;currentApplications=sortedApplications.slice(startIndex,endIndex);}else{// Backend pagination for unfiltered results\ndisplayTotalPages=totalPages;displayTotalCount=totalCount;currentApplications=applications;}return{hasFilters,currentApplications,displayTotalPages,displayTotalCount,filteredApplications};};const[applications,setApplications]=useState([]);const[allApplications,setAllApplications]=useState([]);// Store all applications for client-side operations\nconst[loading,setLoading]=useState(false);const[testingConnection,setTestingConnection]=useState(false);const[connectionTestResult,setConnectionTestResult]=useState(null);const[showApplicationForm,setShowApplicationForm]=useState(false);const[editingApp,setEditingApp]=useState(null);const[submitSuccess,setSubmitSuccess]=useState(false);const[isSubmitting,setIsSubmitting]=useState(false);const[showDeleteConfirm,setShowDeleteConfirm]=useState(false);const[deletingApp,setDeletingApp]=useState(null);const[deleteSuccess,setDeleteSuccess]=useState(false);// Pagination state\nconst[currentPage,setCurrentPage]=useState(1);const[pageSize,setPageSize]=useState(4);const[totalCount,setTotalCount]=useState(0);const[totalPages,setTotalPages]=useState(0);// Search and filter state\nconst[searchTerm,setSearchTerm]=useState('');const[filterConnectionType,setFilterConnectionType]=useState('all');const[filterAuthType,setFilterAuthType]=useState('all');const[sortOrder,setSortOrder]=useState('newest');// Application form state\nconst[applicationForm,setApplicationForm]=useState({applicationName:'',applicationDescription:'',dataSourceType:'MicrosoftSqlServer',connectionSource:{host:'',port:'1433',databaseName:'',authenticationType:'UserPassword',username:'',password:'',// AWS IAM fields\nawsAccessKeyId:'',awsSecretAccessKey:'',awsSessionToken:'',// Kerberos/GSSAPI fields\nprincipal:'',serviceName:'',serviceRealm:'',canonicalizeHostName:false,// MongoDB specific fields\nauthenticationDatabase:'',// X.509 certificate fields\ncertificateFilePath:'',privateKeyFilePath:'',caCertificateFilePath:'',// API-specific fields\napiEndpoint:'',httpMethod:'GET',headers:'',requestBody:'',apiKey:'',bearerToken:'',clientId:'',clientSecret:'',refreshToken:'',authorizationUrl:'',tokenUrl:'',scope:'',// File-specific fields\nfilePath:'',fileFormat:'',delimiter:',',encoding:'UTF-8',hasHeader:true,customProperties:''}});const[showPasswords,setShowPasswords]=useState({connection:false,awsSecret:false,awsSession:false});const fetchAllApplications=async()=>{try{var _response$data;// Fetch all applications by requesting a large page size\nconst response=await applicationApi.getApplications(1,1000);// Large enough to get all\nif(response.success&&(_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.data){setAllApplications(response.data.data);return response.data.data;}return[];}catch(error){console.error('Failed to fetch all applications:',error);return[];}};const fetchApplications=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:currentPage;let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:pageSize;setLoading(true);try{var _response$data2;const response=await applicationApi.getApplications(page,size);if(response.success&&(_response$data2=response.data)!==null&&_response$data2!==void 0&&_response$data2.data){setApplications(response.data.data);setCurrentPage(response.data.page||page);setPageSize(response.data.pageSize||size);setTotalCount(response.data.totalCount||0);setTotalPages(response.data.totalPages||1);}}catch(error){console.error('Failed to fetch applications:',error);}finally{setLoading(false);}};// Smart refetch that handles empty pages after deletion\nconst refetchApplications=async()=>{setLoading(true);try{var _response$data3;const response=await applicationApi.getApplications(currentPage,pageSize);if(response.success&&(_response$data3=response.data)!==null&&_response$data3!==void 0&&_response$data3.data){const newTotalPages=response.data.totalPages||1;const newTotalCount=response.data.totalCount||0;// If current page is beyond available pages and we have items, go to last page\nif(currentPage>newTotalPages&&newTotalCount>0){await fetchApplications(newTotalPages,pageSize);}else if(newTotalCount===0){// If no items at all, go to page 1\nsetCurrentPage(1);setApplications([]);setAllApplications([]);setTotalCount(0);setTotalPages(1);setLoading(false);}else{// Normal case - update with current data\nsetApplications(response.data.data);setTotalCount(newTotalCount);setTotalPages(newTotalPages);setLoading(false);}}// Also refresh all applications\nawait fetchAllApplications();}catch(error){console.error('Failed to fetch applications:',error);setLoading(false);}};// Refetch and navigate to first page (where new items should appear)\nconst refetchAndGoToFirstPage=async()=>{setLoading(true);try{// Navigate to the first page where new items should appear\nawait fetchApplications(1,pageSize);// Also refresh all applications\nawait fetchAllApplications();}catch(error){console.error('Failed to fetch applications:',error);setLoading(false);}};useEffect(()=>{fetchApplications(1,pageSize);// Also fetch all applications for client-side operations\nfetchAllApplications();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Reset form to initial state\nconst resetForm=()=>{setApplicationForm({applicationName:'',applicationDescription:'',dataSourceType:'MicrosoftSqlServer',connectionSource:{host:'',port:'1433',databaseName:'',authenticationType:'UserPassword',username:'',password:'',// AWS IAM fields\nawsAccessKeyId:'',awsSecretAccessKey:'',awsSessionToken:'',// Kerberos/GSSAPI fields\nprincipal:'',serviceName:'',serviceRealm:'',canonicalizeHostName:false,// MongoDB specific fields\nauthenticationDatabase:'',// X.509 certificate fields\ncertificateFilePath:'',privateKeyFilePath:'',caCertificateFilePath:'',// API-specific fields\napiEndpoint:'',httpMethod:'GET',headers:'',requestBody:'',apiKey:'',bearerToken:'',clientId:'',clientSecret:'',refreshToken:'',authorizationUrl:'',tokenUrl:'',scope:'',// File-specific fields\nfilePath:'',fileFormat:'',delimiter:',',encoding:'UTF-8',hasHeader:true,customProperties:''}});setEditingApp(null);setSubmitSuccess(false);};// Add escape key listener to close modals\nuseEffect(()=>{const handleEscapeKey=event=>{if(event.key==='Escape'){if(showApplicationForm){setShowApplicationForm(false);resetForm();}}};document.addEventListener('keydown',handleEscapeKey);return()=>{document.removeEventListener('keydown',handleEscapeKey);};},[showApplicationForm]);// Effect to populate form when editing an application\nuseEffect(()=>{if(editingApp){var _editingApp$connectio,_editingApp$connectio2,_editingApp$connectio3,_editingApp$connectio4,_editingApp$connectio5,_editingApp$connectio6,_editingApp$connectio7;setApplicationForm({applicationName:editingApp.applicationName,applicationDescription:editingApp.applicationDescription,dataSourceType:getDataSourceTypeName(editingApp.applicationDataSourceType),connectionSource:{host:editingApp.connection.host,port:editingApp.connection.port,databaseName:editingApp.connection.databaseName,authenticationType:editingApp.connection.authenticationType,username:((_editingApp$connectio=editingApp.connection)===null||_editingApp$connectio===void 0?void 0:_editingApp$connectio.username)||'',password:'',// We don't get password back from API for security - user must re-enter\n// AWS IAM fields\nawsAccessKeyId:((_editingApp$connectio2=editingApp.connection)===null||_editingApp$connectio2===void 0?void 0:_editingApp$connectio2.awsAccessKeyId)||'',awsSecretAccessKey:'',// Not returned for security\nawsSessionToken:'',// Not returned for security\n// Kerberos/GSSAPI fields\nprincipal:((_editingApp$connectio3=editingApp.connection)===null||_editingApp$connectio3===void 0?void 0:_editingApp$connectio3.principal)||'',serviceName:((_editingApp$connectio4=editingApp.connection)===null||_editingApp$connectio4===void 0?void 0:_editingApp$connectio4.serviceName)||'',serviceRealm:((_editingApp$connectio5=editingApp.connection)===null||_editingApp$connectio5===void 0?void 0:_editingApp$connectio5.serviceRealm)||'',canonicalizeHostName:((_editingApp$connectio6=editingApp.connection)===null||_editingApp$connectio6===void 0?void 0:_editingApp$connectio6.canonicalizeHostName)||false,// MongoDB specific fields\nauthenticationDatabase:((_editingApp$connectio7=editingApp.connection)===null||_editingApp$connectio7===void 0?void 0:_editingApp$connectio7.authenticationDatabase)||'',// X.509 certificate fields\ncertificateFilePath:'',privateKeyFilePath:'',caCertificateFilePath:'',// API-specific fields\napiEndpoint:'',httpMethod:'GET',headers:'',requestBody:'',apiKey:'',bearerToken:'',clientId:'',clientSecret:'',refreshToken:'',authorizationUrl:'',tokenUrl:'',scope:'',// File-specific fields\nfilePath:'',fileFormat:'',delimiter:',',encoding:'UTF-8',hasHeader:true,customProperties:''}});}else{// Reset form when not editing\nsetApplicationForm({applicationName:'',applicationDescription:'',dataSourceType:'MicrosoftSqlServer',connectionSource:{host:'',port:'1433',// Default for SQL Server\ndatabaseName:'',authenticationType:'UserPassword',username:'',password:'',// AWS IAM fields\nawsAccessKeyId:'',awsSecretAccessKey:'',awsSessionToken:'',// Kerberos/GSSAPI fields\nprincipal:'',serviceName:'',serviceRealm:'',canonicalizeHostName:false,// MongoDB specific fields\nauthenticationDatabase:'',// X.509 certificate fields\ncertificateFilePath:'',privateKeyFilePath:'',caCertificateFilePath:'',// API-specific fields\napiEndpoint:'',httpMethod:'GET',headers:'',requestBody:'',apiKey:'',bearerToken:'',clientId:'',clientSecret:'',refreshToken:'',authorizationUrl:'',tokenUrl:'',scope:'',// File-specific fields\nfilePath:'',fileFormat:'',delimiter:',',encoding:'UTF-8',hasHeader:true,customProperties:''}});}},[editingApp]);const generateConnectionUrl=connectionSource=>{const{host,port,databaseName,authenticationType,username,password}=connectionSource;// Handle different data source types\nswitch(applicationForm.dataSourceType){case'MicrosoftSqlServer':const sqlServerNeedsCredentials=['UserPassword','Kerberos','AzureAdPassword'].includes(authenticationType);return\"Server=\".concat(host,\",\").concat(port,\";Database=\").concat(databaseName,\";\").concat(sqlServerNeedsCredentials?\"User Id=\".concat(username,\";Password=\").concat(password,\";\"):'Integrated Security=true;',\"TrustServerCertificate=true;\");case'MySql':const mysqlNeedsCredentials=authenticationType==='UserPassword';return\"Server=\".concat(host,\";Port=\").concat(port,\";Database=\").concat(databaseName,\";\").concat(mysqlNeedsCredentials?\"Uid=\".concat(username,\";Pwd=\").concat(password,\";\"):'');case'MongoDb':const mongoNeedsCredentials=['UserPassword','ScramSha1','ScramSha256','PlainLdap'].includes(authenticationType);if(mongoNeedsCredentials){return\"mongodb://\".concat(username,\":\").concat(password,\"@\").concat(host,\":\").concat(port,\"/\").concat(databaseName);}else{return\"mongodb://\".concat(host,\":\").concat(port,\"/\").concat(databaseName);}default:return\"Server=\".concat(host,\",\").concat(port,\";Database=\").concat(databaseName,\";Integrated Security=true;TrustServerCertificate=true;\");}};const handleApplicationSubmit=async()=>{if(isSubmitting)return;setIsSubmitting(true);try{// Generate connection URL for submission\nconst formDataWithUrl=_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{url:generateConnectionUrl(applicationForm.connectionSource)})});let response;if(editingApp){response=await applicationApi.updateApplication(editingApp.applicationId,formDataWithUrl);}else{response=await applicationApi.createApplication(formDataWithUrl);}if(response.success){setSubmitSuccess(true);if(editingApp){// When editing, stay on current page\nfetchApplications(currentPage,pageSize);}else{// When creating new, go to first page where new item should appear\nrefetchAndGoToFirstPage();}// Form will be closed manually by user clicking X\n}else{console.error('Server response:',response);console.error('Response errors:',response.errors);alert(\"\".concat(response.message||'Failed to save application').concat(response.errors?'\\nErrors: '+Object.keys(response.errors).join(', '):''));}}catch(error){console.error('Failed to save application:',error);console.error('Full error details:',JSON.stringify(error,null,2));alert(error.message||'Failed to save application');}finally{setIsSubmitting(false);}};const testConnection=async application=>{if(testingConnection)return;// Prevent multiple simultaneous tests\nsetTestingConnection(true);try{let connectionData;if(application&&application.applicationId){// For existing applications, just send the applicationId\nconnectionData={applicationId:application.applicationId};}else{// For new applications, send full connection data\nconnectionData=_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{url:generateConnectionUrl(applicationForm.connectionSource)})});}const response=await applicationApi.testConnection(connectionData);setConnectionTestResult({message:response.message,success:response.success});// Auto-hide the result after 5 seconds\nsetTimeout(()=>setConnectionTestResult(null),5000);}catch(error){console.error('Connection test failed:',error);setConnectionTestResult({message:error.message||'Connection test failed',success:false});// Auto-hide the result after 5 seconds\nsetTimeout(()=>setConnectionTestResult(null),5000);}finally{setTestingConnection(false);}};const deleteApplication=async()=>{if(!deletingApp)return;try{const response=await applicationApi.deleteApplication(deletingApp.applicationId);if(response.success){setDeleteSuccess(true);refetchApplications();// Delete success modal will be closed manually by user clicking X\n}else{alert(response.message||'Failed to delete application');}}catch(error){console.error('Failed to delete application:',error);alert(error.message||'Failed to delete application');}};const confirmDeleteApplication=app=>{setDeletingApp(app);setShowDeleteConfirm(true);};const togglePasswordVisibility=field=>{setShowPasswords(prev=>_objectSpread(_objectSpread({},prev),{},{[field]:!prev[field]}));};return/*#__PURE__*/_jsx(\"div\",{className:\"min-vh-100 bg-light\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid py-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center mb-2\",children:[/*#__PURE__*/_jsx(Database,{className:\"text-primary me-3\",size:32}),/*#__PURE__*/_jsx(\"h1\",{className:\"display-5 fw-bold text-dark mb-0\",children:\"Applications\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted fs-6\",children:\"Manage your database applications and connections\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card shadow-sm border-0 rounded-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"card-title fw-bold text-dark mb-0 d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Database,{className:\"text-primary me-2\",size:24}),\"Database Applications\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{resetForm();setShowApplicationForm(true);},className:\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Plus,{className:\"me-2\",size:18}),/*#__PURE__*/_jsx(\"span\",{children:\"Add Application\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"position-absolute top-50 start-0 translate-middle-y ms-3 text-muted\",size:16}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control rounded-3 ps-5\",placeholder:\"Search applications...\",value:searchTerm,onChange:e=>{setSearchTerm(e.target.value);setCurrentPage(1);// Reset to first page when searching\n}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select rounded-3\",value:filterConnectionType,onChange:e=>{setFilterConnectionType(e.target.value);setCurrentPage(1);// Reset to first page when filtering\n},children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Connection Types\"}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Database Connections\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"MicrosoftSqlServer\",children:\"Microsoft SQL Server\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MySql\",children:\"MySQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PostgreSql\",children:\"PostgreSQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MongoDb\",children:\"MongoDB\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Redis\",children:\"Redis\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Oracle\",children:\"Oracle Database\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MariaDb\",children:\"MariaDB\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sqlite\",children:\"SQLite\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Cassandra\",children:\"Apache Cassandra\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ElasticSearch\",children:\"Elasticsearch\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"API Connections\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"RestApi\",children:\"REST API\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GraphQL\",children:\"GraphQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SoapApi\",children:\"SOAP API\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ODataApi\",children:\"OData API\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WebSocket\",children:\"WebSocket\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"File Connections\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"CsvFile\",children:\"CSV File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"JsonFile\",children:\"JSON File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"XmlFile\",children:\"XML File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ExcelFile\",children:\"Excel File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ParquetFile\",children:\"Parquet File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"YamlFile\",children:\"YAML File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"TextFile\",children:\"Text File\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Cloud Storage\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"AzureBlobStorage\",children:\"Azure Blob Storage\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AmazonS3\",children:\"Amazon S3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GoogleCloudStorage\",children:\"Google Cloud Storage\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Message Queues\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"RabbitMQ\",children:\"RabbitMQ\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApacheKafka\",children:\"Apache Kafka\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureServiceBus\",children:\"Azure Service Bus\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-3\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select rounded-3\",value:filterAuthType,onChange:e=>{setFilterAuthType(e.target.value);setCurrentPage(1);// Reset to first page when filtering\n},children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Auth Types\"}),/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WindowsIntegrated\",children:\"Windows Integrated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdPassword\",children:\"Azure AD with Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdIntegrated\",children:\"Azure AD Integrated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Kerberos\",children:\"Kerberos\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AwsIam\",children:\"AWS IAM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApiKey\",children:\"API Key\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BearerToken\",children:\"Bearer Token\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-2\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select rounded-3\",value:sortOrder,onChange:async e=>{const newSortOrder=e.target.value;setSortOrder(newSortOrder);setCurrentPage(1);// Reset to first page when sorting changes\n// If switching to oldest first and we don't have all applications, fetch them\nif(newSortOrder==='oldest'&&allApplications.length===0){await fetchAllApplications();}},children:[/*#__PURE__*/_jsx(\"option\",{value:\"newest\",children:\"Newest First\"}),/*#__PURE__*/_jsx(\"option\",{value:\"oldest\",children:\"Oldest First\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[(()=>{const{currentApplications}=calculatePaginationData();return currentApplications.map(app=>/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card border border-light rounded-3 h-100\",style:{cursor:'pointer'},onClick:()=>{setEditingApp(app);setShowApplicationForm(true);},children:/*#__PURE__*/_jsx(\"div\",{className:\"card-body p-3\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title fw-bold text-dark mb-1\",children:app.applicationName}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text text-muted small mb-2\",children:app.applicationDescription}),/*#__PURE__*/_jsxs(\"div\",{className:\"badge bg-light text-dark border\",children:[app.connection.host,\":\",app.connection.port,\"/\",app.connection.databaseName]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-1 ms-3\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();testConnection(app);},className:\"btn btn-outline-primary btn-sm rounded-3\",title:\"Test Connection\",disabled:testingConnection,children:testingConnection?/*#__PURE__*/_jsx(Loader,{size:16,className:\"animate-spin\"}):/*#__PURE__*/_jsx(TestTube,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();confirmDeleteApplication(app);},className:\"btn btn-outline-danger btn-sm rounded-3\",title:\"Delete\",children:/*#__PURE__*/_jsx(Trash2,{size:16})})]})]})})})},app.applicationId));})(),(()=>{const{hasFilters,filteredApplications}=calculatePaginationData();const isEmpty=hasFilters?filteredApplications.length===0:applications.length===0;return isEmpty&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5 text-muted\",children:[/*#__PURE__*/_jsx(Database,{size:48,className:\"mb-3 opacity-50\"}),/*#__PURE__*/_jsx(\"p\",{children:hasFilters?'No applications match your search criteria':'No applications configured yet'})]})});})(),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"col-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-5 text-muted\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2\",children:\"Loading applications...\"})]})})]}),(()=>{const{hasFilters,currentApplications,displayTotalPages,displayTotalCount}=calculatePaginationData();return(displayTotalCount>4||sortOrder==='oldest')&&/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mt-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-3\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-muted\",children:hasFilters?\"Showing \".concat(currentApplications.length,\" of \").concat(displayTotalCount,\" applications (filtered)\"):\"Showing \".concat((currentPage-1)*pageSize+1,\" to \").concat(Math.min(currentPage*pageSize,displayTotalCount),\" of \").concat(displayTotalCount,\" applications\")}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center gap-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-muted small\",children:\"Applications per page:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"form-select form-select-sm\",style:{width:'auto'},value:pageSize,onChange:e=>{const newPageSize=parseInt(e.target.value);setPageSize(newPageSize);setCurrentPage(1);if(!hasFilters){fetchApplications(1,newPageSize);}},children:[/*#__PURE__*/_jsx(\"option\",{value:4,children:\"4\"}),/*#__PURE__*/_jsx(\"option\",{value:10,children:\"10\"}),/*#__PURE__*/_jsx(\"option\",{value:20,children:\"20\"}),/*#__PURE__*/_jsx(\"option\",{value:50,children:\"50\"})]})]})]}),/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"pagination pagination-sm mb-0\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===1?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{setCurrentPage(1);if(!hasFilters){fetchApplications(1);}},disabled:currentPage===1,children:/*#__PURE__*/_jsx(ChevronsLeft,{size:16})})}),/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===1?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{const newPage=currentPage-1;setCurrentPage(newPage);if(!hasFilters){fetchApplications(newPage);}},disabled:currentPage===1,children:/*#__PURE__*/_jsx(ChevronLeft,{size:16})})}),Array.from({length:Math.min(5,displayTotalPages)},(_,i)=>{let pageNum;if(displayTotalPages<=5){pageNum=i+1;}else if(currentPage<=3){pageNum=i+1;}else if(currentPage>=displayTotalPages-2){pageNum=displayTotalPages-4+i;}else{pageNum=currentPage-2+i;}return/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===pageNum?'active':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{setCurrentPage(pageNum);if(!hasFilters){fetchApplications(pageNum);}},children:pageNum})},pageNum);}),/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===displayTotalPages?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{const newPage=currentPage+1;setCurrentPage(newPage);if(!hasFilters){fetchApplications(newPage);}},disabled:currentPage===displayTotalPages,children:/*#__PURE__*/_jsx(ChevronRight,{size:16})})}),/*#__PURE__*/_jsx(\"li\",{className:\"page-item \".concat(currentPage===displayTotalPages?'disabled':''),children:/*#__PURE__*/_jsx(\"button\",{className:\"page-link\",onClick:()=>{setCurrentPage(displayTotalPages);if(!hasFilters){fetchApplications(displayTotalPages);}},disabled:currentPage===displayTotalPages,children:/*#__PURE__*/_jsx(ChevronsRight,{size:16})})})]})})]});})()]})}),showApplicationForm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal d-block\",style:{backgroundColor:'rgba(0,0,0,0.5)'},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog modal-dialog-centered modal-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content border-0 rounded-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header border-0 pb-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-title fw-bold\",children:editingApp?'Edit Application':'Add New Application'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>{setShowApplicationForm(false);resetForm();}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:submitSuccess?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(CheckCircle2,{size:64,className:\"text-success mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-success fw-bold\",children:editingApp?'Application Updated Successfully!':'Application Created Successfully!'}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted\",children:editingApp?'The application has been updated.':'The new application has been created.'})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"row g-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Application Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.applicationName,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{applicationName:e.target.value})),className:\"form-control rounded-3\",placeholder:\"Enter application name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{value:applicationForm.applicationDescription,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{applicationDescription:e.target.value})),className:\"form-control rounded-3\",rows:3,placeholder:\"Enter application description\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Data Source Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:applicationForm.dataSourceType,onChange:e=>{// Reset authentication type and port when data source changes\nconst newAuthType='UserPassword';const getDefaultPort=type=>{switch(type){case'MicrosoftSqlServer':return'1433';case'MySql':return'3306';case'PostgreSql':return'5432';case'MongoDb':return'27017';case'Redis':return'6379';case'Oracle':return'1521';case'MariaDb':return'3306';case'Sqlite':return'';case'Cassandra':return'9042';case'ElasticSearch':return'9200';case'RestApi':return'443';case'GraphQL':return'443';case'SoapApi':return'443';case'ODataApi':return'443';case'WebSocket':return'443';case'RabbitMQ':return'5672';case'ApacheKafka':return'9092';case'AzureServiceBus':return'443';default:return'';}};const defaultPort=getDefaultPort(e.target.value);setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{dataSourceType:e.target.value,connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{authenticationType:newAuthType,port:defaultPort})}));},className:\"form-select rounded-3\",children:[/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Database Connections\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"MicrosoftSqlServer\",children:\"Microsoft SQL Server\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MySql\",children:\"MySQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PostgreSql\",children:\"PostgreSQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MongoDb\",children:\"MongoDB\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Redis\",children:\"Redis\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Oracle\",children:\"Oracle Database\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MariaDb\",children:\"MariaDB\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Sqlite\",children:\"SQLite\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Cassandra\",children:\"Apache Cassandra\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ElasticSearch\",children:\"Elasticsearch\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"API Connections\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"RestApi\",children:\"REST API\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GraphQL\",children:\"GraphQL\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SoapApi\",children:\"SOAP API\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ODataApi\",children:\"OData API\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WebSocket\",children:\"WebSocket\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"File Connections\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"CsvFile\",children:\"CSV File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"JsonFile\",children:\"JSON File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"XmlFile\",children:\"XML File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ExcelFile\",children:\"Excel File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ParquetFile\",children:\"Parquet File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"YamlFile\",children:\"YAML File\"}),/*#__PURE__*/_jsx(\"option\",{value:\"TextFile\",children:\"Text File\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Cloud Storage\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"AzureBlobStorage\",children:\"Azure Blob Storage\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AmazonS3\",children:\"Amazon S3\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GoogleCloudStorage\",children:\"Google Cloud Storage\"})]}),/*#__PURE__*/_jsxs(\"optgroup\",{label:\"Message Queues\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"RabbitMQ\",children:\"RabbitMQ\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApacheKafka\",children:\"Apache Kafka\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureServiceBus\",children:\"Azure Service Bus\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Authentication Type\"}),/*#__PURE__*/_jsxs(\"select\",{value:applicationForm.connectionSource.authenticationType,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{authenticationType:e.target.value})})),className:\"form-select rounded-3\",children:[applicationForm.dataSourceType==='MicrosoftSqlServer'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WindowsIntegrated\",children:\"Windows Integrated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Kerberos\",children:\"Kerberos\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdPassword\",children:\"Azure AD with Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdInteractive\",children:\"Azure AD Interactive\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdIntegrated\",children:\"Azure AD Integrated\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdDefault\",children:\"Azure AD Default\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdMsi\",children:\"Azure AD MSI\"})]}),applicationForm.dataSourceType==='MySql'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]}),applicationForm.dataSourceType==='MongoDb'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ScramSha1\",children:\"SCRAM-SHA-1\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ScramSha256\",children:\"SCRAM-SHA-256\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AwsIam\",children:\"AWS IAM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"X509\",children:\"X.509\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GssapiKerberos\",children:\"GSSAPI (Kerberos)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"PlainLdap\",children:\"Plain LDAP\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]}),applicationForm.dataSourceType==='PostgreSql'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WindowsIntegrated\",children:\"Windows Integrated\"})]}),applicationForm.dataSourceType==='Redis'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password (ACL)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]}),applicationForm.dataSourceType==='MariaDb'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]}),applicationForm.dataSourceType==='Oracle'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WindowsIntegrated\",children:\"Windows Integrated\"})]}),applicationForm.dataSourceType==='Sqlite'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"File-based (No Auth)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Password Protected\"})]}),applicationForm.dataSourceType==='Cassandra'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"})]}),applicationForm.dataSourceType==='ElasticSearch'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApiKey\",children:\"API Key\"})]}),applicationForm.dataSourceType==='RestApi'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApiKey\",children:\"API Key\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BearerToken\",children:\"Bearer Token\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BasicAuth\",children:\"Basic Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"OAuth2\",children:\"OAuth 2.0\"}),/*#__PURE__*/_jsx(\"option\",{value:\"JwtToken\",children:\"JWT Token\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Custom\",children:\"Custom Headers\"})]}),applicationForm.dataSourceType==='GraphQL'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApiKey\",children:\"API Key\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BearerToken\",children:\"Bearer Token\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BasicAuth\",children:\"Basic Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"OAuth2\",children:\"OAuth 2.0\"}),/*#__PURE__*/_jsx(\"option\",{value:\"JwtToken\",children:\"JWT Token\"})]}),applicationForm.dataSourceType==='SoapApi'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BasicAuth\",children:\"Basic Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Custom\",children:\"Custom Headers\"})]}),applicationForm.dataSourceType==='ODataApi'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApiKey\",children:\"API Key\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BearerToken\",children:\"Bearer Token\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BasicAuth\",children:\"Basic Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"OAuth2\",children:\"OAuth 2.0\"})]}),applicationForm.dataSourceType==='WebSocket'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ApiKey\",children:\"API Key\"}),/*#__PURE__*/_jsx(\"option\",{value:\"BearerToken\",children:\"Bearer Token\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Custom\",children:\"Custom Headers\"})]}),['CsvFile','JsonFile','XmlFile','ExcelFile','ParquetFile','YamlFile','TextFile'].includes(applicationForm.dataSourceType)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"Local File System\"}),/*#__PURE__*/_jsx(\"option\",{value:\"FileSystem\",children:\"Network Share\"})]}),applicationForm.dataSourceType==='AzureBlobStorage'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"AccessKey\",children:\"Access Key\"}),/*#__PURE__*/_jsx(\"option\",{value:\"SharedAccessSignature\",children:\"SAS Token\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ServicePrincipal\",children:\"Service Principal\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AzureAdIntegrated\",children:\"Azure AD Integrated\"})]}),applicationForm.dataSourceType==='AmazonS3'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"AwsIam\",children:\"AWS IAM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AccessKey\",children:\"Access Key\"})]}),applicationForm.dataSourceType==='GoogleCloudStorage'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"ServicePrincipal\",children:\"Service Account\"}),/*#__PURE__*/_jsx(\"option\",{value:\"AccessKey\",children:\"Access Key\"})]}),['RabbitMQ','ApacheKafka','AzureServiceBus'].includes(applicationForm.dataSourceType)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"option\",{value:\"UserPassword\",children:\"Username & Password\"}),/*#__PURE__*/_jsx(\"option\",{value:\"NoAuth\",children:\"No Authentication\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ServicePrincipal\",children:\"Service Principal\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-8\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Host\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.host,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{host:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"localhost or server address\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Port\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.port,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{port:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"1433\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Database Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.databaseName,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{databaseName:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"Enter database name\"})]}),(// SQL Server types that need username\napplicationForm.dataSourceType==='MicrosoftSqlServer'&&['UserPassword','Kerberos','AzureAdPassword','AzureAdInteractive'].includes(applicationForm.connectionSource.authenticationType)||// MySQL types that need username  \napplicationForm.dataSourceType==='MySql'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// MariaDB types that need username\napplicationForm.dataSourceType==='MariaDb'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// PostgreSQL types that need username\napplicationForm.dataSourceType==='PostgreSql'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// MongoDB types that need username\napplicationForm.dataSourceType==='MongoDb'&&['UserPassword','ScramSha1','ScramSha256','PlainLdap'].includes(applicationForm.connectionSource.authenticationType)||// Redis types that need username\napplicationForm.dataSourceType==='Redis'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// Oracle types that need username\napplicationForm.dataSourceType==='Oracle'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// SQLite types that need username\napplicationForm.dataSourceType==='Sqlite'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// Cassandra types that need username\napplicationForm.dataSourceType==='Cassandra'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// Elasticsearch types that need username\napplicationForm.dataSourceType==='ElasticSearch'&&['UserPassword','ApiKey'].includes(applicationForm.connectionSource.authenticationType))&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.username,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{username:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"Database username\"})]}),(// SQL Server types that need password\napplicationForm.dataSourceType==='MicrosoftSqlServer'&&['UserPassword','Kerberos','AzureAdPassword'].includes(applicationForm.connectionSource.authenticationType)||// MySQL types that need password\napplicationForm.dataSourceType==='MySql'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// MariaDB types that need password\napplicationForm.dataSourceType==='MariaDb'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// PostgreSQL types that need password\napplicationForm.dataSourceType==='PostgreSql'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// MongoDB types that need password\napplicationForm.dataSourceType==='MongoDb'&&['UserPassword','ScramSha1','ScramSha256','PlainLdap'].includes(applicationForm.connectionSource.authenticationType)||// Redis types that need password\napplicationForm.dataSourceType==='Redis'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// Oracle types that need password\napplicationForm.dataSourceType==='Oracle'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// SQLite types that need password\napplicationForm.dataSourceType==='Sqlite'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// Cassandra types that need password\napplicationForm.dataSourceType==='Cassandra'&&applicationForm.connectionSource.authenticationType==='UserPassword'||// Elasticsearch types that need password\napplicationForm.dataSourceType==='ElasticSearch'&&['UserPassword','ApiKey'].includes(applicationForm.connectionSource.authenticationType))&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label fw-semibold\",children:[\"Password\",editingApp&&/*#__PURE__*/_jsx(\"span\",{className:\"text-danger ms-2\",style:{fontSize:'0.875rem'},children:\"* Required - please re-enter\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPasswords.connection?\"text\":\"password\",value:applicationForm.connectionSource.password,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{password:e.target.value})})),className:\"form-control rounded-3 pe-5\",placeholder:editingApp?\"Re-enter database password\":\"Database password\",required:!!editingApp}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>togglePasswordVisibility('connection'),className:\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\",children:showPasswords.connection?/*#__PURE__*/_jsx(EyeOff,{size:16}):/*#__PURE__*/_jsx(Eye,{size:16})})]})]}),applicationForm.connectionSource.authenticationType==='AwsIam'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"AWS Access Key ID\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.awsAccessKeyId||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{awsAccessKeyId:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"AWS Access Key ID\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label fw-semibold\",children:[\"AWS Secret Access Key\",editingApp&&/*#__PURE__*/_jsx(\"span\",{className:\"text-danger ms-2\",style:{fontSize:'0.875rem'},children:\"* Required - please re-enter\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPasswords.awsSecret?\"text\":\"password\",value:applicationForm.connectionSource.awsSecretAccessKey||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{awsSecretAccessKey:e.target.value})})),className:\"form-control rounded-3 pe-5\",placeholder:editingApp?\"Re-enter AWS Secret Access Key\":\"AWS Secret Access Key\",required:!!editingApp}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowPasswords(prev=>_objectSpread(_objectSpread({},prev),{},{awsSecret:!prev.awsSecret})),className:\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\",children:showPasswords.awsSecret?/*#__PURE__*/_jsx(EyeOff,{size:16}):/*#__PURE__*/_jsx(Eye,{size:16})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label fw-semibold\",children:[\"AWS Session Token (Optional)\",editingApp&&/*#__PURE__*/_jsx(\"span\",{className:\"text-info ms-2\",style:{fontSize:'0.875rem'},children:\"- Re-enter if needed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"position-relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:showPasswords.awsSession?\"text\":\"password\",value:applicationForm.connectionSource.awsSessionToken||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{awsSessionToken:e.target.value})})),className:\"form-control rounded-3 pe-5\",placeholder:\"AWS Session Token (for temporary credentials)\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setShowPasswords(prev=>_objectSpread(_objectSpread({},prev),{},{awsSession:!prev.awsSession})),className:\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\",children:showPasswords.awsSession?/*#__PURE__*/_jsx(EyeOff,{size:16}):/*#__PURE__*/_jsx(Eye,{size:16})})]})]})]}),(applicationForm.connectionSource.authenticationType==='Kerberos'||applicationForm.connectionSource.authenticationType==='GssapiKerberos')&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Principal\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.principal||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{principal:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"user@REALM.COM\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Service Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.serviceName||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{serviceName:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"Service name (e.g., mongodb)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Service Realm\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.serviceRealm||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{serviceRealm:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"REALM.COM\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-check mt-4\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-check-input\",type:\"checkbox\",checked:applicationForm.connectionSource.canonicalizeHostName||false,onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{canonicalizeHostName:e.target.checked})})),id:\"canonicalizeHostName\"}),/*#__PURE__*/_jsx(\"label\",{className:\"form-check-label\",htmlFor:\"canonicalizeHostName\",children:\"Canonicalize Host Name\"})]})})]}),(applicationForm.connectionSource.authenticationType==='ScramSha1'||applicationForm.connectionSource.authenticationType==='ScramSha256')&&/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Authentication Database\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.authenticationDatabase||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{authenticationDatabase:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"admin\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-text\",children:\"The database where the user is defined (usually 'admin' for MongoDB)\"})]}),applicationForm.connectionSource.authenticationType==='X509'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Certificate File Path\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.certificateFilePath||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{certificateFilePath:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"/path/to/certificate.pem\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"Private Key File Path\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.privateKeyFilePath||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{privateKeyFilePath:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"/path/to/private-key.pem\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-12\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"form-label fw-semibold\",children:\"CA Certificate File Path (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:applicationForm.connectionSource.caCertificateFilePath||'',onChange:e=>setApplicationForm(_objectSpread(_objectSpread({},applicationForm),{},{connectionSource:_objectSpread(_objectSpread({},applicationForm.connectionSource),{},{caCertificateFilePath:e.target.value})})),className:\"form-control rounded-3\",placeholder:\"/path/to/ca-certificate.pem\"})]})]})]})}),!submitSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-footer border-0 pt-0\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>testConnection(),className:\"btn btn-warning rounded-3 fw-semibold d-flex align-items-center\",disabled:testingConnection||isSubmitting,children:testingConnection?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader,{className:\"me-2 animate-spin\",size:16}),\"Testing Connection...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TestTube,{className:\"me-2\",size:16}),\"Test Connection\"]})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleApplicationSubmit,className:\"btn btn-success rounded-3 fw-semibold d-flex align-items-center\",disabled:isSubmitting||testingConnection,children:isSubmitting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Loader,{className:\"me-2 animate-spin\",size:16}),editingApp?'Updating...':'Creating...']}):editingApp?'Update Application':'Create Application'})]})})]})})}),connectionTestResult&&/*#__PURE__*/_jsx(\"div\",{className:\"position-fixed top-0 end-0 p-3\",style:{zIndex:1055},children:/*#__PURE__*/_jsxs(\"div\",{className:\"alert \".concat(connectionTestResult.success?'alert-success':'alert-danger',\" d-flex align-items-center shadow-lg\"),role:\"alert\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"me-2\",children:connectionTestResult.success?'✅':'❌'}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Connection Test \",connectionTestResult.success?'Successful':'Failed']}),/*#__PURE__*/_jsx(\"br\",{}),connectionTestResult.message]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>setConnectionTestResult(null),\"aria-label\":\"Close\"})]})}),showDeleteConfirm&&deletingApp&&/*#__PURE__*/_jsx(\"div\",{className:\"modal d-block\",style:{backgroundColor:'rgba(0,0,0,0.5)',position:'fixed',top:0,left:0,width:'100%',height:'100%',zIndex:1050},children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-dialog modal-dialog-centered\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content border-0 rounded-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header border-0 pb-0\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"modal-title fw-bold text-danger\",children:deleteSuccess?'Application Deleted':'Confirm Deletion'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn-close\",onClick:()=>{setShowDeleteConfirm(false);setDeletingApp(null);setDeleteSuccess(false);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:deleteSuccess?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(CheckCircle2,{size:64,className:\"text-success mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"text-success fw-bold\",children:\"Application Deleted Successfully!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-muted\",children:[/*#__PURE__*/_jsx(\"strong\",{children:deletingApp.applicationName}),\" has been permanently removed.\"]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-4\",children:[/*#__PURE__*/_jsx(AlertTriangle,{size:64,className:\"text-warning mb-3\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"fw-bold\",children:\"Are you sure you want to delete this application?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-light rounded-3 p-3 my-3\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"fw-bold text-dark mb-1\",children:deletingApp.applicationName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted small mb-0\",children:deletingApp.applicationDescription})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-danger small fw-semibold\",children:\"\\u26A0\\uFE0F This action cannot be undone. All associated data will be permanently removed.\"})]})}),!deleteSuccess&&/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer border-0 pt-0\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setShowDeleteConfirm(false);setDeletingApp(null);},className:\"btn btn-secondary rounded-3 fw-semibold\",children:\"Cancel\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:deleteApplication,className:\"btn btn-danger rounded-3 fw-semibold d-flex align-items-center\",children:[/*#__PURE__*/_jsx(Trash2,{className:\"me-2\",size:16}),\"Delete Application\"]})]})]})})})]})});};export default Applications;","map":{"version":3,"names":["React","useState","useEffect","Database","Plus","Trash2","TestTube","Eye","EyeOff","ChevronLeft","ChevronRight","ChevronsLeft","ChevronsRight","Loader","CheckCircle2","AlertTriangle","Search","applicationApi","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DataSourceTypeEnum","getDataSourceTypeName","numericValue","Applications","calculatePaginationData","hasFilters","searchTerm","filterConnectionType","filterAuthType","sortOrder","sourceApplications","allApplications","applications","length","currentApplications","displayTotalPages","displayTotalCount","filteredApplications","filter","app","matchesSearch","applicationName","toLowerCase","includes","applicationDescription","matchesConnectionType","applicationDataSourceType","matchesAuthType","connection","authenticationType","sortedApplications","sort","a","b","createdAt","dateA","Date","getTime","dateB","Math","ceil","pageSize","startIndex","currentPage","endIndex","slice","totalPages","totalCount","setApplications","setAllApplications","loading","setLoading","testingConnection","setTestingConnection","connectionTestResult","setConnectionTestResult","showApplicationForm","setShowApplicationForm","editingApp","setEditingApp","submitSuccess","setSubmitSuccess","isSubmitting","setIsSubmitting","showDeleteConfirm","setShowDeleteConfirm","deletingApp","setDeletingApp","deleteSuccess","setDeleteSuccess","setCurrentPage","setPageSize","setTotalCount","setTotalPages","setSearchTerm","setFilterConnectionType","setFilterAuthType","setSortOrder","applicationForm","setApplicationForm","dataSourceType","connectionSource","host","port","databaseName","username","password","awsAccessKeyId","awsSecretAccessKey","awsSessionToken","principal","serviceName","serviceRealm","canonicalizeHostName","authenticationDatabase","certificateFilePath","privateKeyFilePath","caCertificateFilePath","apiEndpoint","httpMethod","headers","requestBody","apiKey","bearerToken","clientId","clientSecret","refreshToken","authorizationUrl","tokenUrl","scope","filePath","fileFormat","delimiter","encoding","hasHeader","customProperties","showPasswords","setShowPasswords","awsSecret","awsSession","fetchAllApplications","_response$data","response","getApplications","success","data","error","console","fetchApplications","page","arguments","undefined","size","_response$data2","refetchApplications","_response$data3","newTotalPages","newTotalCount","refetchAndGoToFirstPage","resetForm","handleEscapeKey","event","key","document","addEventListener","removeEventListener","_editingApp$connectio","_editingApp$connectio2","_editingApp$connectio3","_editingApp$connectio4","_editingApp$connectio5","_editingApp$connectio6","_editingApp$connectio7","generateConnectionUrl","sqlServerNeedsCredentials","concat","mysqlNeedsCredentials","mongoNeedsCredentials","handleApplicationSubmit","formDataWithUrl","_objectSpread","url","updateApplication","applicationId","createApplication","errors","alert","message","Object","keys","join","JSON","stringify","testConnection","application","connectionData","setTimeout","deleteApplication","confirmDeleteApplication","togglePasswordVisibility","field","prev","className","children","onClick","type","placeholder","value","onChange","e","target","label","newSortOrder","map","style","cursor","stopPropagation","title","disabled","isEmpty","role","min","width","newPageSize","parseInt","newPage","Array","from","_","i","pageNum","backgroundColor","rows","newAuthType","getDefaultPort","defaultPort","fontSize","required","checked","id","htmlFor","zIndex","position","top","left","height"],"sources":["/Users/jaili/csharpProject/Prototype/Prototype/ClientApp/src/components/applications/Applications.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Database, Plus, Trash2, TestTube, Eye, EyeOff, ChevronLeft, ChevronRight, ChevronsLeft, ChevronsRight, Loader, CheckCircle2, AlertTriangle, Search } from 'lucide-react';\nimport { applicationApi } from '../../services/api';\n\ninterface Application {\n    applicationId: string;\n    applicationName: string;\n    applicationDescription: string;\n    applicationDataSourceType: number;\n    connection: {\n        host: string;\n        port: string;\n        databaseName: string;\n        authenticationType: string;\n        username?: string;\n        // Additional fields based on authentication type\n        authenticationDatabase?: string;\n        awsAccessKeyId?: string;\n        principal?: string;\n        serviceName?: string;\n        serviceRealm?: string;\n        canonicalizeHostName?: boolean;\n    };\n    createdAt?: string;\n    updatedAt?: string;\n}\n\n// Enum mapping to convert numeric values to string names\nconst DataSourceTypeEnum: { [key: number]: string } = {\n    // Database connections\n    0: 'MicrosoftSqlServer',\n    1: 'MySql', \n    2: 'PostgreSql',\n    3: 'MongoDb',\n    4: 'Redis',\n    5: 'Oracle',\n    6: 'MariaDb',\n    7: 'Sqlite',\n    8: 'Cassandra',\n    9: 'ElasticSearch',\n    \n    // API connections\n    10: 'RestApi',\n    11: 'GraphQL',\n    12: 'SoapApi', \n    13: 'ODataApi',\n    14: 'WebSocket',\n    \n    // File-based connections\n    15: 'CsvFile',\n    16: 'JsonFile',\n    17: 'XmlFile',\n    18: 'ExcelFile',\n    19: 'ParquetFile',\n    20: 'YamlFile',\n    21: 'TextFile',\n    \n    // Cloud storage\n    22: 'AzureBlobStorage',\n    23: 'AmazonS3',\n    24: 'GoogleCloudStorage',\n    \n    // Message queues\n    25: 'RabbitMQ',\n    26: 'ApacheKafka',\n    27: 'AzureServiceBus'\n};\n\n// Helper function to get enum string name from numeric value\nconst getDataSourceTypeName = (numericValue: number): string => {\n    return DataSourceTypeEnum[numericValue] || 'MicrosoftSqlServer';\n};\n\nconst Applications: React.FC = () => {\n    // Shared function to calculate pagination data to ensure consistency\n    const calculatePaginationData = () => {\n        const hasFilters = searchTerm !== '' || filterConnectionType !== 'all' || \n                          filterAuthType !== 'all' || sortOrder === 'oldest';\n        \n        // Use allApplications for filtering/sorting, applications for backend pagination\n        const sourceApplications = hasFilters ? allApplications : applications;\n        \n        // Safety check - if source applications is empty, return default values\n        if (!sourceApplications || sourceApplications.length === 0) {\n            return {\n                hasFilters,\n                currentApplications: [],\n                displayTotalPages: 0,\n                displayTotalCount: 0,\n                filteredApplications: []\n            };\n        }\n        \n        const filteredApplications = sourceApplications.filter(app => {\n            const matchesSearch = searchTerm === '' || \n                                 app.applicationName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                 app.applicationDescription.toLowerCase().includes(searchTerm.toLowerCase());\n            \n            const matchesConnectionType = filterConnectionType === 'all' || \n                                        DataSourceTypeEnum[app.applicationDataSourceType] === filterConnectionType;\n            \n            const matchesAuthType = filterAuthType === 'all' || \n                                  app.connection.authenticationType === filterAuthType;\n            \n            return matchesSearch && matchesConnectionType && matchesAuthType;\n        });\n\n        // Sort applications based on creation date\n        const sortedApplications = [...filteredApplications].sort((a, b) => {\n            if (!a.createdAt || !b.createdAt) return 0;\n            const dateA = new Date(a.createdAt).getTime();\n            const dateB = new Date(b.createdAt).getTime();\n            return sortOrder === 'newest' ? dateB - dateA : dateA - dateB;\n        });\n\n        let displayTotalPages: number, displayTotalCount: number, currentApplications: Application[];\n        if (hasFilters) {\n            // Client-side pagination for filtered/sorted results\n            displayTotalPages = Math.ceil(sortedApplications.length / pageSize);\n            displayTotalCount = sortedApplications.length;\n            const startIndex = (currentPage - 1) * pageSize;\n            const endIndex = startIndex + pageSize;\n            currentApplications = sortedApplications.slice(startIndex, endIndex);\n        } else {\n            // Backend pagination for unfiltered results\n            displayTotalPages = totalPages;\n            displayTotalCount = totalCount;\n            currentApplications = applications;\n        }\n\n        return {\n            hasFilters,\n            currentApplications,\n            displayTotalPages,\n            displayTotalCount,\n            filteredApplications\n        };\n    };\n    const [applications, setApplications] = useState<Application[]>([]);\n    const [allApplications, setAllApplications] = useState<Application[]>([]); // Store all applications for client-side operations\n    const [loading, setLoading] = useState(false);\n    const [testingConnection, setTestingConnection] = useState(false);\n    const [connectionTestResult, setConnectionTestResult] = useState<{message: string, success: boolean} | null>(null);\n    const [showApplicationForm, setShowApplicationForm] = useState(false);\n    const [editingApp, setEditingApp] = useState<Application | null>(null);\n    const [submitSuccess, setSubmitSuccess] = useState(false);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n    const [deletingApp, setDeletingApp] = useState<Application | null>(null);\n    const [deleteSuccess, setDeleteSuccess] = useState(false);\n    \n    // Pagination state\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(4);\n    const [totalCount, setTotalCount] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    \n    // Search and filter state\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterConnectionType, setFilterConnectionType] = useState<string>('all');\n    const [filterAuthType, setFilterAuthType] = useState<string>('all');\n    const [sortOrder, setSortOrder] = useState<'newest' | 'oldest'>('newest');\n\n    // Application form state\n    const [applicationForm, setApplicationForm] = useState({\n        applicationName: '',\n        applicationDescription: '',\n        dataSourceType: 'MicrosoftSqlServer',\n        connectionSource: {\n            host: '',\n            port: '1433',\n            databaseName: '',\n            authenticationType: 'UserPassword',\n            username: '',\n            password: '',\n            // AWS IAM fields\n            awsAccessKeyId: '',\n            awsSecretAccessKey: '',\n            awsSessionToken: '',\n            // Kerberos/GSSAPI fields\n            principal: '',\n            serviceName: '',\n            serviceRealm: '',\n            canonicalizeHostName: false,\n            // MongoDB specific fields\n            authenticationDatabase: '',\n            // X.509 certificate fields\n            certificateFilePath: '',\n            privateKeyFilePath: '',\n            caCertificateFilePath: '',\n            // API-specific fields\n            apiEndpoint: '',\n            httpMethod: 'GET',\n            headers: '',\n            requestBody: '',\n            apiKey: '',\n            bearerToken: '',\n            clientId: '',\n            clientSecret: '',\n            refreshToken: '',\n            authorizationUrl: '',\n            tokenUrl: '',\n            scope: '',\n            // File-specific fields\n            filePath: '',\n            fileFormat: '',\n            delimiter: ',',\n            encoding: 'UTF-8',\n            hasHeader: true,\n            customProperties: ''\n        }\n    });\n\n    const [showPasswords, setShowPasswords] = useState({\n        connection: false,\n        awsSecret: false,\n        awsSession: false\n    });\n\n    const fetchAllApplications = async () => {\n        try {\n            // Fetch all applications by requesting a large page size\n            const response = await applicationApi.getApplications(1, 1000); // Large enough to get all\n            if (response.success && response.data?.data) {\n                setAllApplications(response.data.data);\n                return response.data.data;\n            }\n            return [];\n        } catch (error) {\n            console.error('Failed to fetch all applications:', error);\n            return [];\n        }\n    };\n\n    const fetchApplications = async (page: number = currentPage, size: number = pageSize) => {\n        setLoading(true);\n        try {\n            const response = await applicationApi.getApplications(page, size);\n            if (response.success && response.data?.data) {\n                setApplications(response.data.data);\n                setCurrentPage(response.data.page || page);\n                setPageSize(response.data.pageSize || size);\n                setTotalCount(response.data.totalCount || 0);\n                setTotalPages(response.data.totalPages || 1);\n            }\n        } catch (error) {\n            console.error('Failed to fetch applications:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Smart refetch that handles empty pages after deletion\n    const refetchApplications = async () => {\n        setLoading(true);\n        try {\n            const response = await applicationApi.getApplications(currentPage, pageSize);\n            if (response.success && response.data?.data) {\n                const newTotalPages = response.data.totalPages || 1;\n                const newTotalCount = response.data.totalCount || 0;\n                \n                // If current page is beyond available pages and we have items, go to last page\n                if (currentPage > newTotalPages && newTotalCount > 0) {\n                    await fetchApplications(newTotalPages, pageSize);\n                } else if (newTotalCount === 0) {\n                    // If no items at all, go to page 1\n                    setCurrentPage(1);\n                    setApplications([]);\n                    setAllApplications([]);\n                    setTotalCount(0);\n                    setTotalPages(1);\n                    setLoading(false);\n                } else {\n                    // Normal case - update with current data\n                    setApplications(response.data.data);\n                    setTotalCount(newTotalCount);\n                    setTotalPages(newTotalPages);\n                    setLoading(false);\n                }\n            }\n            // Also refresh all applications\n            await fetchAllApplications();\n        } catch (error) {\n            console.error('Failed to fetch applications:', error);\n            setLoading(false);\n        }\n    };\n\n    // Refetch and navigate to first page (where new items should appear)\n    const refetchAndGoToFirstPage = async () => {\n        setLoading(true);\n        try {\n            // Navigate to the first page where new items should appear\n            await fetchApplications(1, pageSize);\n            // Also refresh all applications\n            await fetchAllApplications();\n        } catch (error) {\n            console.error('Failed to fetch applications:', error);\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchApplications(1, pageSize);\n        // Also fetch all applications for client-side operations\n        fetchAllApplications();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // Reset form to initial state\n    const resetForm = () => {\n        setApplicationForm({\n            applicationName: '',\n            applicationDescription: '',\n            dataSourceType: 'MicrosoftSqlServer',\n            connectionSource: {\n                host: '',\n                port: '1433',\n                databaseName: '',\n                authenticationType: 'UserPassword',\n                username: '',\n                password: '',\n                // AWS IAM fields\n                awsAccessKeyId: '',\n                awsSecretAccessKey: '',\n                awsSessionToken: '',\n                // Kerberos/GSSAPI fields\n                principal: '',\n                serviceName: '',\n                serviceRealm: '',\n                canonicalizeHostName: false,\n                // MongoDB specific fields\n                authenticationDatabase: '',\n                // X.509 certificate fields\n                certificateFilePath: '',\n                privateKeyFilePath: '',\n                caCertificateFilePath: '',\n                // API-specific fields\n                apiEndpoint: '',\n                httpMethod: 'GET',\n                headers: '',\n                requestBody: '',\n                apiKey: '',\n                bearerToken: '',\n                clientId: '',\n                clientSecret: '',\n                refreshToken: '',\n                authorizationUrl: '',\n                tokenUrl: '',\n                scope: '',\n                // File-specific fields\n                filePath: '',\n                fileFormat: '',\n                delimiter: ',',\n                encoding: 'UTF-8',\n                hasHeader: true,\n                customProperties: ''\n            }\n        });\n        setEditingApp(null);\n        setSubmitSuccess(false);\n    };\n\n    // Add escape key listener to close modals\n    useEffect(() => {\n        const handleEscapeKey = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') {\n                if (showApplicationForm) {\n                    setShowApplicationForm(false);\n                    resetForm();\n                }\n            }\n        };\n\n        document.addEventListener('keydown', handleEscapeKey);\n        return () => {\n            document.removeEventListener('keydown', handleEscapeKey);\n        };\n    }, [showApplicationForm]);\n\n    // Effect to populate form when editing an application\n    useEffect(() => {\n        if (editingApp) {\n            setApplicationForm({\n                applicationName: editingApp.applicationName,\n                applicationDescription: editingApp.applicationDescription,\n                dataSourceType: getDataSourceTypeName(editingApp.applicationDataSourceType),\n                connectionSource: {\n                    host: editingApp.connection.host,\n                    port: editingApp.connection.port,\n                    databaseName: editingApp.connection.databaseName,\n                    authenticationType: editingApp.connection.authenticationType,\n                    username: editingApp.connection?.username || '',\n                    password: '',  // We don't get password back from API for security - user must re-enter\n                    // AWS IAM fields\n                    awsAccessKeyId: editingApp.connection?.awsAccessKeyId || '',\n                    awsSecretAccessKey: '', // Not returned for security\n                    awsSessionToken: '', // Not returned for security\n                    // Kerberos/GSSAPI fields\n                    principal: editingApp.connection?.principal || '',\n                    serviceName: editingApp.connection?.serviceName || '',\n                    serviceRealm: editingApp.connection?.serviceRealm || '',\n                    canonicalizeHostName: editingApp.connection?.canonicalizeHostName || false,\n                    // MongoDB specific fields\n                    authenticationDatabase: editingApp.connection?.authenticationDatabase || '',\n                    // X.509 certificate fields\n                    certificateFilePath: '',\n                    privateKeyFilePath: '',\n                    caCertificateFilePath: '',\n                    // API-specific fields\n                    apiEndpoint: '',\n                    httpMethod: 'GET',\n                    headers: '',\n                    requestBody: '',\n                    apiKey: '',\n                    bearerToken: '',\n                    clientId: '',\n                    clientSecret: '',\n                    refreshToken: '',\n                    authorizationUrl: '',\n                    tokenUrl: '',\n                    scope: '',\n                    // File-specific fields\n                    filePath: '',\n                    fileFormat: '',\n                    delimiter: ',',\n                    encoding: 'UTF-8',\n                    hasHeader: true,\n                    customProperties: ''\n                }\n            });\n        } else {\n            // Reset form when not editing\n            setApplicationForm({\n                applicationName: '',\n                applicationDescription: '',\n                dataSourceType: 'MicrosoftSqlServer',\n                connectionSource: {\n                    host: '',\n                    port: '1433', // Default for SQL Server\n                    databaseName: '',\n                    authenticationType: 'UserPassword',\n                    username: '',\n                    password: '',\n                    // AWS IAM fields\n                    awsAccessKeyId: '',\n                    awsSecretAccessKey: '',\n                    awsSessionToken: '',\n                    // Kerberos/GSSAPI fields\n                    principal: '',\n                    serviceName: '',\n                    serviceRealm: '',\n                    canonicalizeHostName: false,\n                    // MongoDB specific fields\n                    authenticationDatabase: '',\n                    // X.509 certificate fields\n                    certificateFilePath: '',\n                    privateKeyFilePath: '',\n                    caCertificateFilePath: '',\n                    // API-specific fields\n                    apiEndpoint: '',\n                    httpMethod: 'GET',\n                    headers: '',\n                    requestBody: '',\n                    apiKey: '',\n                    bearerToken: '',\n                    clientId: '',\n                    clientSecret: '',\n                    refreshToken: '',\n                    authorizationUrl: '',\n                    tokenUrl: '',\n                    scope: '',\n                    // File-specific fields\n                    filePath: '',\n                    fileFormat: '',\n                    delimiter: ',',\n                    encoding: 'UTF-8',\n                    hasHeader: true,\n                    customProperties: ''\n                }\n            });\n        }\n    }, [editingApp]);\n\n    const generateConnectionUrl = (connectionSource: any) => {\n        const { host, port, databaseName, authenticationType, username, password } = connectionSource;\n        \n        // Handle different data source types\n        switch (applicationForm.dataSourceType) {\n            case 'MicrosoftSqlServer':\n                const sqlServerNeedsCredentials = ['UserPassword', 'Kerberos', 'AzureAdPassword'].includes(authenticationType);\n                return `Server=${host},${port};Database=${databaseName};${sqlServerNeedsCredentials ? `User Id=${username};Password=${password};` : 'Integrated Security=true;'}TrustServerCertificate=true;`;\n                \n            case 'MySql':\n                const mysqlNeedsCredentials = authenticationType === 'UserPassword';\n                return `Server=${host};Port=${port};Database=${databaseName};${mysqlNeedsCredentials ? `Uid=${username};Pwd=${password};` : ''}`;\n                \n            case 'MongoDb':\n                const mongoNeedsCredentials = ['UserPassword', 'ScramSha1', 'ScramSha256', 'PlainLdap'].includes(authenticationType);\n                if (mongoNeedsCredentials) {\n                    return `mongodb://${username}:${password}@${host}:${port}/${databaseName}`;\n                } else {\n                    return `mongodb://${host}:${port}/${databaseName}`;\n                }\n                \n            default:\n                return `Server=${host},${port};Database=${databaseName};Integrated Security=true;TrustServerCertificate=true;`;\n        }\n    };\n\n    const handleApplicationSubmit = async () => {\n        if (isSubmitting) return;\n        \n        setIsSubmitting(true);\n        \n        try {\n            // Generate connection URL for submission\n            const formDataWithUrl = {\n                ...applicationForm,\n                connectionSource: {\n                    ...applicationForm.connectionSource,\n                    url: generateConnectionUrl(applicationForm.connectionSource)\n                }\n            };\n\n            let response;\n            if (editingApp) {\n                response = await applicationApi.updateApplication(editingApp.applicationId, formDataWithUrl);\n            } else {\n                response = await applicationApi.createApplication(formDataWithUrl);\n            }\n            \n            if (response.success) {\n                setSubmitSuccess(true);\n                if (editingApp) {\n                    // When editing, stay on current page\n                    fetchApplications(currentPage, pageSize);\n                } else {\n                    // When creating new, go to first page where new item should appear\n                    refetchAndGoToFirstPage();\n                }\n                \n                // Form will be closed manually by user clicking X\n            } else {\n                console.error('Server response:', response);\n                console.error('Response errors:', response.errors);\n                alert(`${response.message || 'Failed to save application'}${response.errors ? '\\nErrors: ' + Object.keys(response.errors).join(', ') : ''}`);\n            }\n        } catch (error: any) {\n            console.error('Failed to save application:', error);\n            console.error('Full error details:', JSON.stringify(error, null, 2));\n            alert(error.message || 'Failed to save application');\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    const testConnection = async (application?: any) => {\n        if (testingConnection) return; // Prevent multiple simultaneous tests\n        \n        setTestingConnection(true);\n        try {\n            let connectionData;\n            if (application && application.applicationId) {\n                // For existing applications, just send the applicationId\n                connectionData = { applicationId: application.applicationId };\n            } else {\n                // For new applications, send full connection data\n                connectionData = {\n                    ...applicationForm,\n                    connectionSource: {\n                        ...applicationForm.connectionSource,\n                        url: generateConnectionUrl(applicationForm.connectionSource)\n                    }\n                };\n            }\n            \n            const response = await applicationApi.testConnection(connectionData);\n            \n            setConnectionTestResult({\n                message: response.message,\n                success: response.success\n            });\n            \n            // Auto-hide the result after 5 seconds\n            setTimeout(() => setConnectionTestResult(null), 5000);\n        } catch (error: any) {\n            console.error('Connection test failed:', error);\n            setConnectionTestResult({\n                message: error.message || 'Connection test failed',\n                success: false\n            });\n            \n            // Auto-hide the result after 5 seconds\n            setTimeout(() => setConnectionTestResult(null), 5000);\n        } finally {\n            setTestingConnection(false);\n        }\n    };\n\n    const deleteApplication = async () => {\n        if (!deletingApp) return;\n\n        try {\n            const response = await applicationApi.deleteApplication(deletingApp.applicationId);\n            \n            if (response.success) {\n                setDeleteSuccess(true);\n                refetchApplications();\n                \n                // Delete success modal will be closed manually by user clicking X\n            } else {\n                alert(response.message || 'Failed to delete application');\n            }\n        } catch (error: any) {\n            console.error('Failed to delete application:', error);\n            alert(error.message || 'Failed to delete application');\n        }\n    };\n\n    const confirmDeleteApplication = (app: Application) => {\n        setDeletingApp(app);\n        setShowDeleteConfirm(true);\n    };\n\n    const togglePasswordVisibility = (field: keyof typeof showPasswords) => {\n        setShowPasswords(prev => ({ ...prev, [field]: !prev[field] }));\n    };\n\n    return (\n        <div className=\"min-vh-100 bg-light\">\n            <div className=\"container-fluid py-4\">\n                {/* Header */}\n                <div className=\"mb-4\">\n                    <div className=\"d-flex align-items-center mb-2\">\n                        <Database className=\"text-primary me-3\" size={32} />\n                        <h1 className=\"display-5 fw-bold text-dark mb-0\">Applications</h1>\n                    </div>\n                    <p className=\"text-muted fs-6\">Manage your database applications and connections</p>\n                </div>\n\n                {/* Applications */}\n                <div className=\"card shadow-sm border-0 rounded-4\">\n                    <div className=\"card-body p-4\">\n                        <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                            <h2 className=\"card-title fw-bold text-dark mb-0 d-flex align-items-center\">\n                                <Database className=\"text-primary me-2\" size={24} />\n                                Database Applications\n                            </h2>\n                            <button\n                                onClick={() => {\n                                    resetForm();\n                                    setShowApplicationForm(true);\n                                }}\n                                className=\"btn btn-primary rounded-3 fw-semibold d-flex align-items-center\"\n                            >\n                                <Plus className=\"me-2\" size={18} />\n                                <span>Add Application</span>\n                            </button>\n                        </div>\n\n                        {/* Search and Filter Controls */}\n                        <div className=\"row g-3 mb-4\">\n                            <div className=\"col-md-4\">\n                                <div className=\"position-relative\">\n                                    <Search className=\"position-absolute top-50 start-0 translate-middle-y ms-3 text-muted\" size={16} />\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control rounded-3 ps-5\"\n                                        placeholder=\"Search applications...\"\n                                        value={searchTerm}\n                                        onChange={(e) => {\n                                            setSearchTerm(e.target.value);\n                                            setCurrentPage(1); // Reset to first page when searching\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <select\n                                    className=\"form-select rounded-3\"\n                                    value={filterConnectionType}\n                                    onChange={(e) => {\n                                        setFilterConnectionType(e.target.value);\n                                        setCurrentPage(1); // Reset to first page when filtering\n                                    }}\n                                >\n                                    <option value=\"all\">All Connection Types</option>\n                                    <optgroup label=\"Database Connections\">\n                                        <option value=\"MicrosoftSqlServer\">Microsoft SQL Server</option>\n                                        <option value=\"MySql\">MySQL</option>\n                                        <option value=\"PostgreSql\">PostgreSQL</option>\n                                        <option value=\"MongoDb\">MongoDB</option>\n                                        <option value=\"Redis\">Redis</option>\n                                        <option value=\"Oracle\">Oracle Database</option>\n                                        <option value=\"MariaDb\">MariaDB</option>\n                                        <option value=\"Sqlite\">SQLite</option>\n                                        <option value=\"Cassandra\">Apache Cassandra</option>\n                                        <option value=\"ElasticSearch\">Elasticsearch</option>\n                                    </optgroup>\n                                    <optgroup label=\"API Connections\">\n                                        <option value=\"RestApi\">REST API</option>\n                                        <option value=\"GraphQL\">GraphQL</option>\n                                        <option value=\"SoapApi\">SOAP API</option>\n                                        <option value=\"ODataApi\">OData API</option>\n                                        <option value=\"WebSocket\">WebSocket</option>\n                                    </optgroup>\n                                    <optgroup label=\"File Connections\">\n                                        <option value=\"CsvFile\">CSV File</option>\n                                        <option value=\"JsonFile\">JSON File</option>\n                                        <option value=\"XmlFile\">XML File</option>\n                                        <option value=\"ExcelFile\">Excel File</option>\n                                        <option value=\"ParquetFile\">Parquet File</option>\n                                        <option value=\"YamlFile\">YAML File</option>\n                                        <option value=\"TextFile\">Text File</option>\n                                    </optgroup>\n                                    <optgroup label=\"Cloud Storage\">\n                                        <option value=\"AzureBlobStorage\">Azure Blob Storage</option>\n                                        <option value=\"AmazonS3\">Amazon S3</option>\n                                        <option value=\"GoogleCloudStorage\">Google Cloud Storage</option>\n                                    </optgroup>\n                                    <optgroup label=\"Message Queues\">\n                                        <option value=\"RabbitMQ\">RabbitMQ</option>\n                                        <option value=\"ApacheKafka\">Apache Kafka</option>\n                                        <option value=\"AzureServiceBus\">Azure Service Bus</option>\n                                    </optgroup>\n                                </select>\n                            </div>\n                            <div className=\"col-md-3\">\n                                <select\n                                    className=\"form-select rounded-3\"\n                                    value={filterAuthType}\n                                    onChange={(e) => {\n                                        setFilterAuthType(e.target.value);\n                                        setCurrentPage(1); // Reset to first page when filtering\n                                    }}\n                                >\n                                    <option value=\"all\">All Auth Types</option>\n                                    <option value=\"UserPassword\">Username & Password</option>\n                                    <option value=\"WindowsIntegrated\">Windows Integrated</option>\n                                    <option value=\"AzureAdPassword\">Azure AD with Password</option>\n                                    <option value=\"AzureAdIntegrated\">Azure AD Integrated</option>\n                                    <option value=\"NoAuth\">No Authentication</option>\n                                    <option value=\"Kerberos\">Kerberos</option>\n                                    <option value=\"AwsIam\">AWS IAM</option>\n                                    <option value=\"ApiKey\">API Key</option>\n                                    <option value=\"BearerToken\">Bearer Token</option>\n                                </select>\n                            </div>\n                            <div className=\"col-md-2\">\n                                <select\n                                    className=\"form-select rounded-3\"\n                                    value={sortOrder}\n                                    onChange={async (e) => {\n                                        const newSortOrder = e.target.value as 'newest' | 'oldest';\n                                        setSortOrder(newSortOrder);\n                                        setCurrentPage(1); // Reset to first page when sorting changes\n                                        \n                                        // If switching to oldest first and we don't have all applications, fetch them\n                                        if (newSortOrder === 'oldest' && allApplications.length === 0) {\n                                            await fetchAllApplications();\n                                        }\n                                    }}\n                                >\n                                    <option value=\"newest\">Newest First</option>\n                                    <option value=\"oldest\">Oldest First</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"row g-3\">\n                            {(() => {\n                                const { currentApplications } = calculatePaginationData();\n                                return currentApplications.map((app) => (\n                                <div key={app.applicationId} className=\"col-12\">\n                                    <div \n                                        className=\"card border border-light rounded-3 h-100\" \n                                        style={{cursor: 'pointer'}}\n                                        onClick={() => {\n                                            setEditingApp(app);\n                                            setShowApplicationForm(true);\n                                        }}\n                                    >\n                                        <div className=\"card-body p-3\">\n                                            <div className=\"d-flex justify-content-between align-items-start\">\n                                                <div className=\"flex-grow-1\">\n                                                    <h5 className=\"card-title fw-bold text-dark mb-1\">{app.applicationName}</h5>\n                                                    <p className=\"card-text text-muted small mb-2\">{app.applicationDescription}</p>\n                                                    <div className=\"badge bg-light text-dark border\">\n                                                        {app.connection.host}:{app.connection.port}/{app.connection.databaseName}\n                                                    </div>\n                                                </div>\n                                                <div className=\"d-flex gap-1 ms-3\">\n                                                    <button\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            testConnection(app);\n                                                        }}\n                                                        className=\"btn btn-outline-primary btn-sm rounded-3\"\n                                                        title=\"Test Connection\"\n                                                        disabled={testingConnection}\n                                                    >\n                                                        {testingConnection ? (\n                                                            <Loader size={16} className=\"animate-spin\" />\n                                                        ) : (\n                                                            <TestTube size={16} />\n                                                        )}\n                                                    </button>\n                                                    <button\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            confirmDeleteApplication(app);\n                                                        }}\n                                                        className=\"btn btn-outline-danger btn-sm rounded-3\"\n                                                        title=\"Delete\"\n                                                    >\n                                                        <Trash2 size={16} />\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                ));\n                            })()}\n                            {(() => {\n                                const { hasFilters, filteredApplications } = calculatePaginationData();\n                                const isEmpty = hasFilters ? filteredApplications.length === 0 : applications.length === 0;\n                                \n                                return isEmpty && !loading && (\n                                    <div className=\"col-12\">\n                                        <div className=\"text-center py-5 text-muted\">\n                                            <Database size={48} className=\"mb-3 opacity-50\" />\n                                            <p>{hasFilters ? 'No applications match your search criteria' : 'No applications configured yet'}</p>\n                                        </div>\n                                    </div>\n                                );\n                            })()}\n                            {loading && (\n                                <div className=\"col-12\">\n                                    <div className=\"text-center py-5 text-muted\">\n                                        <div className=\"spinner-border\" role=\"status\">\n                                            <span className=\"visually-hidden\">Loading...</span>\n                                        </div>\n                                        <p className=\"mt-2\">Loading applications...</p>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n\n                        {/* Pagination Controls */}\n                        {(() => {\n                            const { hasFilters, currentApplications, displayTotalPages, displayTotalCount } = calculatePaginationData();\n                            \n                            return (displayTotalCount > 4 || sortOrder === 'oldest') && (\n                                <div className=\"d-flex justify-content-between align-items-center mt-4\">\n                                    <div className=\"d-flex align-items-center gap-3\">\n                                        <span className=\"text-muted\">\n                                            {hasFilters ? (\n                                                `Showing ${currentApplications.length} of ${displayTotalCount} applications (filtered)`\n                                            ) : (\n                                                `Showing ${((currentPage - 1) * pageSize) + 1} to ${Math.min(currentPage * pageSize, displayTotalCount)} of ${displayTotalCount} applications`\n                                            )}\n                                        </span>\n                                        <div className=\"d-flex align-items-center gap-2\">\n                                            <span className=\"text-muted small\">Applications per page:</span>\n                                            <select\n                                                className=\"form-select form-select-sm\"\n                                                style={{ width: 'auto' }}\n                                                value={pageSize}\n                                                onChange={(e) => {\n                                                    const newPageSize = parseInt(e.target.value);\n                                                    setPageSize(newPageSize);\n                                                    setCurrentPage(1);\n                                                    if (!hasFilters) {\n                                                        fetchApplications(1, newPageSize);\n                                                    }\n                                                }}\n                                            >\n                                                <option value={4}>4</option>\n                                                <option value={10}>10</option>\n                                                <option value={20}>20</option>\n                                                <option value={50}>50</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    \n                                    <nav>\n                                        <ul className=\"pagination pagination-sm mb-0\">\n                                            <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n                                                <button \n                                                    className=\"page-link\" \n                                                    onClick={() => {\n                                                        setCurrentPage(1);\n                                                        if (!hasFilters) {\n                                                            fetchApplications(1);\n                                                        }\n                                                    }}\n                                                    disabled={currentPage === 1}\n                                                >\n                                                    <ChevronsLeft size={16} />\n                                                </button>\n                                            </li>\n                                            <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n                                                <button \n                                                    className=\"page-link\" \n                                                    onClick={() => {\n                                                        const newPage = currentPage - 1;\n                                                        setCurrentPage(newPage);\n                                                        if (!hasFilters) {\n                                                            fetchApplications(newPage);\n                                                        }\n                                                    }}\n                                                    disabled={currentPage === 1}\n                                                >\n                                                    <ChevronLeft size={16} />\n                                                </button>\n                                            </li>\n                                            \n                                            {/* Page numbers */}\n                                            {Array.from({ length: Math.min(5, displayTotalPages) }, (_, i) => {\n                                                let pageNum: number;\n                                                if (displayTotalPages <= 5) {\n                                                    pageNum = i + 1;\n                                                } else if (currentPage <= 3) {\n                                                    pageNum = i + 1;\n                                                } else if (currentPage >= displayTotalPages - 2) {\n                                                    pageNum = displayTotalPages - 4 + i;\n                                                } else {\n                                                    pageNum = currentPage - 2 + i;\n                                                }\n                                                \n                                                return (\n                                                    <li key={pageNum} className={`page-item ${currentPage === pageNum ? 'active' : ''}`}>\n                                                        <button \n                                                            className=\"page-link\" \n                                                            onClick={() => {\n                                                                setCurrentPage(pageNum);\n                                                                if (!hasFilters) {\n                                                                    fetchApplications(pageNum);\n                                                                }\n                                                            }}\n                                                        >\n                                                            {pageNum}\n                                                        </button>\n                                                    </li>\n                                                );\n                                            })}\n                                            \n                                            <li className={`page-item ${currentPage === displayTotalPages ? 'disabled' : ''}`}>\n                                                <button \n                                                    className=\"page-link\" \n                                                    onClick={() => {\n                                                        const newPage = currentPage + 1;\n                                                        setCurrentPage(newPage);\n                                                        if (!hasFilters) {\n                                                            fetchApplications(newPage);\n                                                        }\n                                                    }}\n                                                    disabled={currentPage === displayTotalPages}\n                                                >\n                                                    <ChevronRight size={16} />\n                                                </button>\n                                            </li>\n                                            <li className={`page-item ${currentPage === displayTotalPages ? 'disabled' : ''}`}>\n                                                <button \n                                                    className=\"page-link\" \n                                                    onClick={() => {\n                                                        setCurrentPage(displayTotalPages);\n                                                        if (!hasFilters) {\n                                                            fetchApplications(displayTotalPages);\n                                                        }\n                                                    }}\n                                                    disabled={currentPage === displayTotalPages}\n                                                >\n                                                    <ChevronsRight size={16} />\n                                                </button>\n                                            </li>\n                                        </ul>\n                                    </nav>\n                                </div>\n                            );\n                        })()}\n                    </div>\n                </div>\n\n                {showApplicationForm && (\n                    <div className=\"modal d-block\" style={{backgroundColor: 'rgba(0,0,0,0.5)'}}>\n                        <div className=\"modal-dialog modal-dialog-centered modal-lg\">\n                            <div className=\"modal-content border-0 rounded-4\">\n                                <div className=\"modal-header border-0 pb-0\">\n                                    <h3 className=\"modal-title fw-bold\">\n                                        {editingApp ? 'Edit Application' : 'Add New Application'}\n                                    </h3>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn-close\"\n                                        onClick={() => {\n                                            setShowApplicationForm(false);\n                                            resetForm();\n                                        }}\n                                    ></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    {submitSuccess ? (\n                                        <div className=\"text-center py-4\">\n                                            <CheckCircle2 size={64} className=\"text-success mb-3\" />\n                                            <h4 className=\"text-success fw-bold\">\n                                                {editingApp ? 'Application Updated Successfully!' : 'Application Created Successfully!'}\n                                            </h4>\n                                            <p className=\"text-muted\">\n                                                {editingApp ? 'The application has been updated.' : 'The new application has been created.'}\n                                            </p>\n                                        </div>\n                                    ) : (\n                                        <div className=\"row g-3\">\n                                        <div className=\"col-12\">\n                                            <label className=\"form-label fw-semibold\">Application Name</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.applicationName}\n                                                onChange={(e) => setApplicationForm({...applicationForm, applicationName: e.target.value})}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"Enter application name\"\n                                            />\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <label className=\"form-label fw-semibold\">Description</label>\n                                            <textarea\n                                                value={applicationForm.applicationDescription}\n                                                onChange={(e) => setApplicationForm({...applicationForm, applicationDescription: e.target.value})}\n                                                className=\"form-control rounded-3\"\n                                                rows={3}\n                                                placeholder=\"Enter application description\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label fw-semibold\">Data Source Type</label>\n                                            <select\n                                                value={applicationForm.dataSourceType}\n                                                onChange={(e) => {\n                                                    // Reset authentication type and port when data source changes\n                                                    const newAuthType = 'UserPassword';\n                                                    const getDefaultPort = (type: string) => {\n                                                        switch (type) {\n                                                            case 'MicrosoftSqlServer': return '1433';\n                                                            case 'MySql': return '3306';\n                                                            case 'PostgreSql': return '5432';\n                                                            case 'MongoDb': return '27017';\n                                                            case 'Redis': return '6379';\n                                                            case 'Oracle': return '1521';\n                                                            case 'MariaDb': return '3306';\n                                                            case 'Sqlite': return '';\n                                                            case 'Cassandra': return '9042';\n                                                            case 'ElasticSearch': return '9200';\n                                                            case 'RestApi': return '443';\n                                                            case 'GraphQL': return '443';\n                                                            case 'SoapApi': return '443';\n                                                            case 'ODataApi': return '443';\n                                                            case 'WebSocket': return '443';\n                                                            case 'RabbitMQ': return '5672';\n                                                            case 'ApacheKafka': return '9092';\n                                                            case 'AzureServiceBus': return '443';\n                                                            default: return '';\n                                                        }\n                                                    };\n                                                    const defaultPort = getDefaultPort(e.target.value);\n                                                    setApplicationForm({\n                                                        ...applicationForm, \n                                                        dataSourceType: e.target.value,\n                                                        connectionSource: {\n                                                            ...applicationForm.connectionSource,\n                                                            authenticationType: newAuthType,\n                                                            port: defaultPort\n                                                        }\n                                                    });\n                                                }}\n                                                className=\"form-select rounded-3\"\n                                            >\n                                                <optgroup label=\"Database Connections\">\n                                                    <option value=\"MicrosoftSqlServer\">Microsoft SQL Server</option>\n                                                    <option value=\"MySql\">MySQL</option>\n                                                    <option value=\"PostgreSql\">PostgreSQL</option>\n                                                    <option value=\"MongoDb\">MongoDB</option>\n                                                    <option value=\"Redis\">Redis</option>\n                                                    <option value=\"Oracle\">Oracle Database</option>\n                                                    <option value=\"MariaDb\">MariaDB</option>\n                                                    <option value=\"Sqlite\">SQLite</option>\n                                                    <option value=\"Cassandra\">Apache Cassandra</option>\n                                                    <option value=\"ElasticSearch\">Elasticsearch</option>\n                                                </optgroup>\n                                                <optgroup label=\"API Connections\">\n                                                    <option value=\"RestApi\">REST API</option>\n                                                    <option value=\"GraphQL\">GraphQL</option>\n                                                    <option value=\"SoapApi\">SOAP API</option>\n                                                    <option value=\"ODataApi\">OData API</option>\n                                                    <option value=\"WebSocket\">WebSocket</option>\n                                                </optgroup>\n                                                <optgroup label=\"File Connections\">\n                                                    <option value=\"CsvFile\">CSV File</option>\n                                                    <option value=\"JsonFile\">JSON File</option>\n                                                    <option value=\"XmlFile\">XML File</option>\n                                                    <option value=\"ExcelFile\">Excel File</option>\n                                                    <option value=\"ParquetFile\">Parquet File</option>\n                                                    <option value=\"YamlFile\">YAML File</option>\n                                                    <option value=\"TextFile\">Text File</option>\n                                                </optgroup>\n                                                <optgroup label=\"Cloud Storage\">\n                                                    <option value=\"AzureBlobStorage\">Azure Blob Storage</option>\n                                                    <option value=\"AmazonS3\">Amazon S3</option>\n                                                    <option value=\"GoogleCloudStorage\">Google Cloud Storage</option>\n                                                </optgroup>\n                                                <optgroup label=\"Message Queues\">\n                                                    <option value=\"RabbitMQ\">RabbitMQ</option>\n                                                    <option value=\"ApacheKafka\">Apache Kafka</option>\n                                                    <option value=\"AzureServiceBus\">Azure Service Bus</option>\n                                                </optgroup>\n                                            </select>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <label className=\"form-label fw-semibold\">Authentication Type</label>\n                                            <select\n                                                value={applicationForm.connectionSource.authenticationType}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, authenticationType: e.target.value}\n                                                })}\n                                                className=\"form-select rounded-3\"\n                                            >\n                                                {/* Microsoft SQL Server options */}\n                                                {applicationForm.dataSourceType === 'MicrosoftSqlServer' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"WindowsIntegrated\">Windows Integrated</option>\n                                                        <option value=\"Kerberos\">Kerberos</option>\n                                                        <option value=\"AzureAdPassword\">Azure AD with Password</option>\n                                                        <option value=\"AzureAdInteractive\">Azure AD Interactive</option>\n                                                        <option value=\"AzureAdIntegrated\">Azure AD Integrated</option>\n                                                        <option value=\"AzureAdDefault\">Azure AD Default</option>\n                                                        <option value=\"AzureAdMsi\">Azure AD MSI</option>\n                                                    </>\n                                                )}\n                                                \n                                                {/* MySQL options */}\n                                                {applicationForm.dataSourceType === 'MySql' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n                                                \n                                                {/* MongoDB options */}\n                                                {applicationForm.dataSourceType === 'MongoDb' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"ScramSha1\">SCRAM-SHA-1</option>\n                                                        <option value=\"ScramSha256\">SCRAM-SHA-256</option>\n                                                        <option value=\"AwsIam\">AWS IAM</option>\n                                                        <option value=\"X509\">X.509</option>\n                                                        <option value=\"GssapiKerberos\">GSSAPI (Kerberos)</option>\n                                                        <option value=\"PlainLdap\">Plain LDAP</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n\n                                                {/* PostgreSQL options */}\n                                                {applicationForm.dataSourceType === 'PostgreSql' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"WindowsIntegrated\">Windows Integrated</option>\n                                                    </>\n                                                )}\n\n                                                {/* Redis options */}\n                                                {applicationForm.dataSourceType === 'Redis' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password (ACL)</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n\n                                                {/* MariaDB options (same as MySQL) */}\n                                                {applicationForm.dataSourceType === 'MariaDb' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n\n                                                {/* Oracle options */}\n                                                {applicationForm.dataSourceType === 'Oracle' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"WindowsIntegrated\">Windows Integrated</option>\n                                                    </>\n                                                )}\n\n                                                {/* SQLite options */}\n                                                {applicationForm.dataSourceType === 'Sqlite' && (\n                                                    <>\n                                                        <option value=\"NoAuth\">File-based (No Auth)</option>\n                                                        <option value=\"UserPassword\">Password Protected</option>\n                                                    </>\n                                                )}\n\n                                                {/* Cassandra options */}\n                                                {applicationForm.dataSourceType === 'Cassandra' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                    </>\n                                                )}\n\n                                                {/* Elasticsearch options */}\n                                                {applicationForm.dataSourceType === 'ElasticSearch' && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                        <option value=\"ApiKey\">API Key</option>\n                                                    </>\n                                                )}\n\n                                                {/* REST API options */}\n                                                {applicationForm.dataSourceType === 'RestApi' && (\n                                                    <>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                        <option value=\"ApiKey\">API Key</option>\n                                                        <option value=\"BearerToken\">Bearer Token</option>\n                                                        <option value=\"BasicAuth\">Basic Authentication</option>\n                                                        <option value=\"OAuth2\">OAuth 2.0</option>\n                                                        <option value=\"JwtToken\">JWT Token</option>\n                                                        <option value=\"Custom\">Custom Headers</option>\n                                                    </>\n                                                )}\n\n                                                {/* GraphQL options */}\n                                                {applicationForm.dataSourceType === 'GraphQL' && (\n                                                    <>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                        <option value=\"ApiKey\">API Key</option>\n                                                        <option value=\"BearerToken\">Bearer Token</option>\n                                                        <option value=\"BasicAuth\">Basic Authentication</option>\n                                                        <option value=\"OAuth2\">OAuth 2.0</option>\n                                                        <option value=\"JwtToken\">JWT Token</option>\n                                                    </>\n                                                )}\n\n                                                {/* SOAP API options */}\n                                                {applicationForm.dataSourceType === 'SoapApi' && (\n                                                    <>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                        <option value=\"BasicAuth\">Basic Authentication</option>\n                                                        <option value=\"Custom\">Custom Headers</option>\n                                                    </>\n                                                )}\n\n                                                {/* OData API options */}\n                                                {applicationForm.dataSourceType === 'ODataApi' && (\n                                                    <>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                        <option value=\"ApiKey\">API Key</option>\n                                                        <option value=\"BearerToken\">Bearer Token</option>\n                                                        <option value=\"BasicAuth\">Basic Authentication</option>\n                                                        <option value=\"OAuth2\">OAuth 2.0</option>\n                                                    </>\n                                                )}\n\n                                                {/* WebSocket options */}\n                                                {applicationForm.dataSourceType === 'WebSocket' && (\n                                                    <>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                        <option value=\"ApiKey\">API Key</option>\n                                                        <option value=\"BearerToken\">Bearer Token</option>\n                                                        <option value=\"Custom\">Custom Headers</option>\n                                                    </>\n                                                )}\n\n                                                {/* File connection options */}\n                                                {['CsvFile', 'JsonFile', 'XmlFile', 'ExcelFile', 'ParquetFile', 'YamlFile', 'TextFile'].includes(applicationForm.dataSourceType) && (\n                                                    <>\n                                                        <option value=\"NoAuth\">Local File System</option>\n                                                        <option value=\"FileSystem\">Network Share</option>\n                                                    </>\n                                                )}\n\n                                                {/* Cloud storage options */}\n                                                {applicationForm.dataSourceType === 'AzureBlobStorage' && (\n                                                    <>\n                                                        <option value=\"AccessKey\">Access Key</option>\n                                                        <option value=\"SharedAccessSignature\">SAS Token</option>\n                                                        <option value=\"ServicePrincipal\">Service Principal</option>\n                                                        <option value=\"AzureAdIntegrated\">Azure AD Integrated</option>\n                                                    </>\n                                                )}\n\n                                                {applicationForm.dataSourceType === 'AmazonS3' && (\n                                                    <>\n                                                        <option value=\"AwsIam\">AWS IAM</option>\n                                                        <option value=\"AccessKey\">Access Key</option>\n                                                    </>\n                                                )}\n\n                                                {applicationForm.dataSourceType === 'GoogleCloudStorage' && (\n                                                    <>\n                                                        <option value=\"ServicePrincipal\">Service Account</option>\n                                                        <option value=\"AccessKey\">Access Key</option>\n                                                    </>\n                                                )}\n\n                                                {/* Message queue options */}\n                                                {['RabbitMQ', 'ApacheKafka', 'AzureServiceBus'].includes(applicationForm.dataSourceType) && (\n                                                    <>\n                                                        <option value=\"UserPassword\">Username & Password</option>\n                                                        <option value=\"NoAuth\">No Authentication</option>\n                                                        <option value=\"ServicePrincipal\">Service Principal</option>\n                                                    </>\n                                                )}\n                                            </select>\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <label className=\"form-label fw-semibold\">Host</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.connectionSource.host}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, host: e.target.value}\n                                                })}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"localhost or server address\"\n                                            />\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <label className=\"form-label fw-semibold\">Port</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.connectionSource.port}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, port: e.target.value}\n                                                })}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"1433\"\n                                            />\n                                        </div>\n                                        <div className=\"col-12\">\n                                            <label className=\"form-label fw-semibold\">Database Name</label>\n                                            <input\n                                                type=\"text\"\n                                                value={applicationForm.connectionSource.databaseName}\n                                                onChange={(e) => setApplicationForm({\n                                                    ...applicationForm,\n                                                    connectionSource: {...applicationForm.connectionSource, databaseName: e.target.value}\n                                                })}\n                                                className=\"form-control rounded-3\"\n                                                placeholder=\"Enter database name\"\n                                            />\n                                        </div>\n                                        {/* Username field - show for most authentication types */}\n                                        {(\n                                            // SQL Server types that need username\n                                            (applicationForm.dataSourceType === 'MicrosoftSqlServer' && \n                                             ['UserPassword', 'Kerberos', 'AzureAdPassword', 'AzureAdInteractive'].includes(applicationForm.connectionSource.authenticationType)) ||\n                                            // MySQL types that need username  \n                                            (applicationForm.dataSourceType === 'MySql' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // MariaDB types that need username\n                                            (applicationForm.dataSourceType === 'MariaDb' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // PostgreSQL types that need username\n                                            (applicationForm.dataSourceType === 'PostgreSql' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // MongoDB types that need username\n                                            (applicationForm.dataSourceType === 'MongoDb' && \n                                             ['UserPassword', 'ScramSha1', 'ScramSha256', 'PlainLdap'].includes(applicationForm.connectionSource.authenticationType)) ||\n                                            // Redis types that need username\n                                            (applicationForm.dataSourceType === 'Redis' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // Oracle types that need username\n                                            (applicationForm.dataSourceType === 'Oracle' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // SQLite types that need username\n                                            (applicationForm.dataSourceType === 'Sqlite' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // Cassandra types that need username\n                                            (applicationForm.dataSourceType === 'Cassandra' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // Elasticsearch types that need username\n                                            (applicationForm.dataSourceType === 'ElasticSearch' && \n                                             ['UserPassword', 'ApiKey'].includes(applicationForm.connectionSource.authenticationType))\n                                        ) && (\n                                            <div className=\"col-12\">\n                                                <label className=\"form-label fw-semibold\">Username</label>\n                                                <input\n                                                    type=\"text\"\n                                                    value={applicationForm.connectionSource.username}\n                                                    onChange={(e) => setApplicationForm({\n                                                        ...applicationForm,\n                                                        connectionSource: {...applicationForm.connectionSource, username: e.target.value}\n                                                    })}\n                                                    className=\"form-control rounded-3\"\n                                                    placeholder=\"Database username\"\n                                                />\n                                            </div>\n                                        )}\n\n                                        {/* Password field - show for authentication types that need password */}\n                                        {(\n                                            // SQL Server types that need password\n                                            (applicationForm.dataSourceType === 'MicrosoftSqlServer' && \n                                             ['UserPassword', 'Kerberos', 'AzureAdPassword'].includes(applicationForm.connectionSource.authenticationType)) ||\n                                            // MySQL types that need password\n                                            (applicationForm.dataSourceType === 'MySql' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // MariaDB types that need password\n                                            (applicationForm.dataSourceType === 'MariaDb' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // PostgreSQL types that need password\n                                            (applicationForm.dataSourceType === 'PostgreSql' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // MongoDB types that need password\n                                            (applicationForm.dataSourceType === 'MongoDb' && \n                                             ['UserPassword', 'ScramSha1', 'ScramSha256', 'PlainLdap'].includes(applicationForm.connectionSource.authenticationType)) ||\n                                            // Redis types that need password\n                                            (applicationForm.dataSourceType === 'Redis' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // Oracle types that need password\n                                            (applicationForm.dataSourceType === 'Oracle' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // SQLite types that need password\n                                            (applicationForm.dataSourceType === 'Sqlite' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // Cassandra types that need password\n                                            (applicationForm.dataSourceType === 'Cassandra' && \n                                             applicationForm.connectionSource.authenticationType === 'UserPassword') ||\n                                            // Elasticsearch types that need password\n                                            (applicationForm.dataSourceType === 'ElasticSearch' && \n                                             ['UserPassword', 'ApiKey'].includes(applicationForm.connectionSource.authenticationType))\n                                        ) && (\n                                            <div className=\"col-12\">\n                                                <label className=\"form-label fw-semibold\">\n                                                    Password\n                                                    {editingApp && (\n                                                        <span className=\"text-danger ms-2\" style={{ fontSize: '0.875rem' }}>\n                                                            * Required - please re-enter\n                                                        </span>\n                                                    )}\n                                                </label>\n                                                <div className=\"position-relative\">\n                                                    <input\n                                                        type={showPasswords.connection ? \"text\" : \"password\"}\n                                                        value={applicationForm.connectionSource.password}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, password: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3 pe-5\"\n                                                        placeholder={editingApp ? \"Re-enter database password\" : \"Database password\"}\n                                                        required={!!editingApp}\n                                                    />\n                                                    <button\n                                                        type=\"button\"\n                                                        onClick={() => togglePasswordVisibility('connection')}\n                                                        className=\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\"\n                                                    >\n                                                        {showPasswords.connection ? <EyeOff size={16} /> : <Eye size={16} />}\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        )}\n\n                                        {/* AWS IAM fields */}\n                                        {applicationForm.connectionSource.authenticationType === 'AwsIam' && (\n                                            <>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">AWS Access Key ID</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.awsAccessKeyId || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, awsAccessKeyId: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"AWS Access Key ID\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">\n                                                        AWS Secret Access Key\n                                                        {editingApp && (\n                                                            <span className=\"text-danger ms-2\" style={{ fontSize: '0.875rem' }}>\n                                                                * Required - please re-enter\n                                                            </span>\n                                                        )}\n                                                    </label>\n                                                    <div className=\"position-relative\">\n                                                        <input\n                                                            type={showPasswords.awsSecret ? \"text\" : \"password\"}\n                                                            value={applicationForm.connectionSource.awsSecretAccessKey || ''}\n                                                            onChange={(e) => setApplicationForm({\n                                                                ...applicationForm,\n                                                                connectionSource: {...applicationForm.connectionSource, awsSecretAccessKey: e.target.value}\n                                                            })}\n                                                            className=\"form-control rounded-3 pe-5\"\n                                                            placeholder={editingApp ? \"Re-enter AWS Secret Access Key\" : \"AWS Secret Access Key\"}\n                                                            required={!!editingApp}\n                                                        />\n                                                        <button\n                                                            type=\"button\"\n                                                            onClick={() => setShowPasswords(prev => ({ ...prev, awsSecret: !prev.awsSecret }))}\n                                                            className=\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\"\n                                                        >\n                                                            {showPasswords.awsSecret ? <EyeOff size={16} /> : <Eye size={16} />}\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">\n                                                        AWS Session Token (Optional)\n                                                        {editingApp && (\n                                                            <span className=\"text-info ms-2\" style={{ fontSize: '0.875rem' }}>\n                                                                - Re-enter if needed\n                                                            </span>\n                                                        )}\n                                                    </label>\n                                                    <div className=\"position-relative\">\n                                                        <input\n                                                            type={showPasswords.awsSession ? \"text\" : \"password\"}\n                                                            value={applicationForm.connectionSource.awsSessionToken || ''}\n                                                            onChange={(e) => setApplicationForm({\n                                                                ...applicationForm,\n                                                                connectionSource: {...applicationForm.connectionSource, awsSessionToken: e.target.value}\n                                                            })}\n                                                            className=\"form-control rounded-3 pe-5\"\n                                                            placeholder=\"AWS Session Token (for temporary credentials)\"\n                                                        />\n                                                        <button\n                                                            type=\"button\"\n                                                            onClick={() => setShowPasswords(prev => ({ ...prev, awsSession: !prev.awsSession }))}\n                                                            className=\"btn btn-outline-secondary position-absolute top-50 end-0 translate-middle-y me-2 border-0 p-1\"\n                                                        >\n                                                            {showPasswords.awsSession ? <EyeOff size={16} /> : <Eye size={16} />}\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        )}\n\n                                        {/* Kerberos/GSSAPI fields */}\n                                        {(applicationForm.connectionSource.authenticationType === 'Kerberos' || \n                                          applicationForm.connectionSource.authenticationType === 'GssapiKerberos') && (\n                                            <>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label fw-semibold\">Principal</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.principal || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, principal: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"user@REALM.COM\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label fw-semibold\">Service Name</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.serviceName || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, serviceName: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"Service name (e.g., mongodb)\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <label className=\"form-label fw-semibold\">Service Realm</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.serviceRealm || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, serviceRealm: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"REALM.COM\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-md-6\">\n                                                    <div className=\"form-check mt-4\">\n                                                        <input\n                                                            className=\"form-check-input\"\n                                                            type=\"checkbox\"\n                                                            checked={applicationForm.connectionSource.canonicalizeHostName || false}\n                                                            onChange={(e) => setApplicationForm({\n                                                                ...applicationForm,\n                                                                connectionSource: {...applicationForm.connectionSource, canonicalizeHostName: e.target.checked}\n                                                            })}\n                                                            id=\"canonicalizeHostName\"\n                                                        />\n                                                        <label className=\"form-check-label\" htmlFor=\"canonicalizeHostName\">\n                                                            Canonicalize Host Name\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </>\n                                        )}\n\n                                        {/* MongoDB Authentication Database field (for SCRAM authentication) */}\n                                        {(applicationForm.connectionSource.authenticationType === 'ScramSha1' ||\n                                          applicationForm.connectionSource.authenticationType === 'ScramSha256') && (\n                                            <div className=\"col-12\">\n                                                <label className=\"form-label fw-semibold\">Authentication Database</label>\n                                                <input\n                                                    type=\"text\"\n                                                    value={applicationForm.connectionSource.authenticationDatabase || ''}\n                                                    onChange={(e) => setApplicationForm({\n                                                        ...applicationForm,\n                                                        connectionSource: {...applicationForm.connectionSource, authenticationDatabase: e.target.value}\n                                                    })}\n                                                    className=\"form-control rounded-3\"\n                                                    placeholder=\"admin\"\n                                                />\n                                                <div className=\"form-text\">\n                                                    The database where the user is defined (usually 'admin' for MongoDB)\n                                                </div>\n                                            </div>\n                                        )}\n\n                                        {/* X.509 Certificate fields */}\n                                        {applicationForm.connectionSource.authenticationType === 'X509' && (\n                                            <>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">Certificate File Path</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.certificateFilePath || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, certificateFilePath: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"/path/to/certificate.pem\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">Private Key File Path</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.privateKeyFilePath || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, privateKeyFilePath: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"/path/to/private-key.pem\"\n                                                    />\n                                                </div>\n                                                <div className=\"col-12\">\n                                                    <label className=\"form-label fw-semibold\">CA Certificate File Path (Optional)</label>\n                                                    <input\n                                                        type=\"text\"\n                                                        value={applicationForm.connectionSource.caCertificateFilePath || ''}\n                                                        onChange={(e) => setApplicationForm({\n                                                            ...applicationForm,\n                                                            connectionSource: {...applicationForm.connectionSource, caCertificateFilePath: e.target.value}\n                                                        })}\n                                                        className=\"form-control rounded-3\"\n                                                        placeholder=\"/path/to/ca-certificate.pem\"\n                                                    />\n                                                </div>\n                                            </>\n                                        )}\n                                        </div>\n                                    )}\n                                </div>\n                                {!submitSuccess && (\n                                    <div className=\"modal-footer border-0 pt-0\">\n                                    <div className=\"d-flex gap-2\">\n                                        <button\n                                            onClick={() => testConnection()}\n                                            className=\"btn btn-warning rounded-3 fw-semibold d-flex align-items-center\"\n                                            disabled={testingConnection || isSubmitting}\n                                        >\n                                            {testingConnection ? (\n                                                <>\n                                                    <Loader className=\"me-2 animate-spin\" size={16} />\n                                                    Testing Connection...\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <TestTube className=\"me-2\" size={16} />\n                                                    Test Connection\n                                                </>\n                                            )}\n                                        </button>\n                                        <button\n                                            onClick={handleApplicationSubmit}\n                                            className=\"btn btn-success rounded-3 fw-semibold d-flex align-items-center\"\n                                            disabled={isSubmitting || testingConnection}\n                                        >\n                                            {isSubmitting ? (\n                                                <>\n                                                    <Loader className=\"me-2 animate-spin\" size={16} />\n                                                    {editingApp ? 'Updating...' : 'Creating...'}\n                                                </>\n                                            ) : (\n                                                editingApp ? 'Update Application' : 'Create Application'\n                                            )}\n                                        </button>\n                                    </div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n                {/* Connection Test Result Toast */}\n                {connectionTestResult && (\n                    <div className=\"position-fixed top-0 end-0 p-3\" style={{ zIndex: 1055 }}>\n                        <div className={`alert ${connectionTestResult.success ? 'alert-success' : 'alert-danger'} d-flex align-items-center shadow-lg`} role=\"alert\">\n                            <div className=\"me-2\">\n                                {connectionTestResult.success ? '✅' : '❌'}\n                            </div>\n                            <div className=\"flex-grow-1\">\n                                <strong>Connection Test {connectionTestResult.success ? 'Successful' : 'Failed'}</strong>\n                                <br />\n                                {connectionTestResult.message}\n                            </div>\n                            <button \n                                type=\"button\" \n                                className=\"btn-close\" \n                                onClick={() => setConnectionTestResult(null)}\n                                aria-label=\"Close\"\n                            ></button>\n                        </div>\n                    </div>\n                )}\n\n                {/* Delete Confirmation Modal */}\n                {showDeleteConfirm && deletingApp && (\n                    <div className=\"modal d-block\" style={{backgroundColor: 'rgba(0,0,0,0.5)', position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', zIndex: 1050}}>\n                        <div className=\"modal-dialog modal-dialog-centered\">\n                            <div className=\"modal-content border-0 rounded-4\">\n                                <div className=\"modal-header border-0 pb-0\">\n                                    <h3 className=\"modal-title fw-bold text-danger\">\n                                        {deleteSuccess ? 'Application Deleted' : 'Confirm Deletion'}\n                                    </h3>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn-close\"\n                                        onClick={() => {\n                                            setShowDeleteConfirm(false);\n                                            setDeletingApp(null);\n                                            setDeleteSuccess(false);\n                                        }}\n                                    ></button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    {deleteSuccess ? (\n                                        <div className=\"text-center py-4\">\n                                            <CheckCircle2 size={64} className=\"text-success mb-3\" />\n                                            <h4 className=\"text-success fw-bold\">Application Deleted Successfully!</h4>\n                                            <p className=\"text-muted\">\n                                                <strong>{deletingApp.applicationName}</strong> has been permanently removed.\n                                            </p>\n                                        </div>\n                                    ) : (\n                                        <div className=\"text-center py-4\">\n                                            <AlertTriangle size={64} className=\"text-warning mb-3\" />\n                                            <h4 className=\"fw-bold\">Are you sure you want to delete this application?</h4>\n                                            <div className=\"bg-light rounded-3 p-3 my-3\">\n                                                <h5 className=\"fw-bold text-dark mb-1\">{deletingApp.applicationName}</h5>\n                                                <p className=\"text-muted small mb-0\">{deletingApp.applicationDescription}</p>\n                                            </div>\n                                            <p className=\"text-danger small fw-semibold\">\n                                                ⚠️ This action cannot be undone. All associated data will be permanently removed.\n                                            </p>\n                                        </div>\n                                    )}\n                                </div>\n                                {!deleteSuccess && (\n                                    <div className=\"modal-footer border-0 pt-0\">\n                                        <button\n                                            onClick={() => {\n                                                setShowDeleteConfirm(false);\n                                                setDeletingApp(null);\n                                            }}\n                                            className=\"btn btn-secondary rounded-3 fw-semibold\"\n                                        >\n                                            Cancel\n                                        </button>\n                                        <button\n                                            onClick={deleteApplication}\n                                            className=\"btn btn-danger rounded-3 fw-semibold d-flex align-items-center\"\n                                        >\n                                            <Trash2 className=\"me-2\" size={16} />\n                                            Delete Application\n                                        </button>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Applications;"],"mappings":"6IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,CAAEC,IAAI,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,GAAG,CAAEC,MAAM,CAAEC,WAAW,CAAEC,YAAY,CAAEC,YAAY,CAAEC,aAAa,CAAEC,MAAM,CAAEC,YAAY,CAAEC,aAAa,CAAEC,MAAM,KAAQ,cAAc,CACjL,OAASC,cAAc,KAAQ,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAyBpD;AACA,KAAM,CAAAC,kBAA6C,CAAG,CAClD;AACA,CAAC,CAAE,oBAAoB,CACvB,CAAC,CAAE,OAAO,CACV,CAAC,CAAE,YAAY,CACf,CAAC,CAAE,SAAS,CACZ,CAAC,CAAE,OAAO,CACV,CAAC,CAAE,QAAQ,CACX,CAAC,CAAE,SAAS,CACZ,CAAC,CAAE,QAAQ,CACX,CAAC,CAAE,WAAW,CACd,CAAC,CAAE,eAAe,CAElB;AACA,EAAE,CAAE,SAAS,CACb,EAAE,CAAE,SAAS,CACb,EAAE,CAAE,SAAS,CACb,EAAE,CAAE,UAAU,CACd,EAAE,CAAE,WAAW,CAEf;AACA,EAAE,CAAE,SAAS,CACb,EAAE,CAAE,UAAU,CACd,EAAE,CAAE,SAAS,CACb,EAAE,CAAE,WAAW,CACf,EAAE,CAAE,aAAa,CACjB,EAAE,CAAE,UAAU,CACd,EAAE,CAAE,UAAU,CAEd;AACA,EAAE,CAAE,kBAAkB,CACtB,EAAE,CAAE,UAAU,CACd,EAAE,CAAE,oBAAoB,CAExB;AACA,EAAE,CAAE,UAAU,CACd,EAAE,CAAE,aAAa,CACjB,EAAE,CAAE,iBACR,CAAC,CAED;AACA,KAAM,CAAAC,qBAAqB,CAAIC,YAAoB,EAAa,CAC5D,MAAO,CAAAF,kBAAkB,CAACE,YAAY,CAAC,EAAI,oBAAoB,CACnE,CAAC,CAED,KAAM,CAAAC,YAAsB,CAAGA,CAAA,GAAM,CACjC;AACA,KAAM,CAAAC,uBAAuB,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAAC,UAAU,CAAGC,UAAU,GAAK,EAAE,EAAIC,oBAAoB,GAAK,KAAK,EACpDC,cAAc,GAAK,KAAK,EAAIC,SAAS,GAAK,QAAQ,CAEpE;AACA,KAAM,CAAAC,kBAAkB,CAAGL,UAAU,CAAGM,eAAe,CAAGC,YAAY,CAEtE;AACA,GAAI,CAACF,kBAAkB,EAAIA,kBAAkB,CAACG,MAAM,GAAK,CAAC,CAAE,CACxD,MAAO,CACHR,UAAU,CACVS,mBAAmB,CAAE,EAAE,CACvBC,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,CAAC,CACpBC,oBAAoB,CAAE,EAC1B,CAAC,CACL,CAEA,KAAM,CAAAA,oBAAoB,CAAGP,kBAAkB,CAACQ,MAAM,CAACC,GAAG,EAAI,CAC1D,KAAM,CAAAC,aAAa,CAAGd,UAAU,GAAK,EAAE,EAClBa,GAAG,CAACE,eAAe,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,UAAU,CAACgB,WAAW,CAAC,CAAC,CAAC,EACpEH,GAAG,CAACK,sBAAsB,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,UAAU,CAACgB,WAAW,CAAC,CAAC,CAAC,CAEhG,KAAM,CAAAG,qBAAqB,CAAGlB,oBAAoB,GAAK,KAAK,EAChCP,kBAAkB,CAACmB,GAAG,CAACO,yBAAyB,CAAC,GAAKnB,oBAAoB,CAEtG,KAAM,CAAAoB,eAAe,CAAGnB,cAAc,GAAK,KAAK,EAC1BW,GAAG,CAACS,UAAU,CAACC,kBAAkB,GAAKrB,cAAc,CAE1E,MAAO,CAAAY,aAAa,EAAIK,qBAAqB,EAAIE,eAAe,CACpE,CAAC,CAAC,CAEF;AACA,KAAM,CAAAG,kBAAkB,CAAG,CAAC,GAAGb,oBAAoB,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAChE,GAAI,CAACD,CAAC,CAACE,SAAS,EAAI,CAACD,CAAC,CAACC,SAAS,CAAE,MAAO,EAAC,CAC1C,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAACJ,CAAC,CAACE,SAAS,CAAC,CAACG,OAAO,CAAC,CAAC,CAC7C,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAF,IAAI,CAACH,CAAC,CAACC,SAAS,CAAC,CAACG,OAAO,CAAC,CAAC,CAC7C,MAAO,CAAA5B,SAAS,GAAK,QAAQ,CAAG6B,KAAK,CAAGH,KAAK,CAAGA,KAAK,CAAGG,KAAK,CACjE,CAAC,CAAC,CAEF,GAAI,CAAAvB,iBAAyB,CAAEC,iBAAyB,CAAEF,mBAAkC,CAC5F,GAAIT,UAAU,CAAE,CACZ;AACAU,iBAAiB,CAAGwB,IAAI,CAACC,IAAI,CAACV,kBAAkB,CAACjB,MAAM,CAAG4B,QAAQ,CAAC,CACnEzB,iBAAiB,CAAGc,kBAAkB,CAACjB,MAAM,CAC7C,KAAM,CAAA6B,UAAU,CAAG,CAACC,WAAW,CAAG,CAAC,EAAIF,QAAQ,CAC/C,KAAM,CAAAG,QAAQ,CAAGF,UAAU,CAAGD,QAAQ,CACtC3B,mBAAmB,CAAGgB,kBAAkB,CAACe,KAAK,CAACH,UAAU,CAAEE,QAAQ,CAAC,CACxE,CAAC,IAAM,CACH;AACA7B,iBAAiB,CAAG+B,UAAU,CAC9B9B,iBAAiB,CAAG+B,UAAU,CAC9BjC,mBAAmB,CAAGF,YAAY,CACtC,CAEA,MAAO,CACHP,UAAU,CACVS,mBAAmB,CACnBC,iBAAiB,CACjBC,iBAAiB,CACjBC,oBACJ,CAAC,CACL,CAAC,CACD,KAAM,CAACL,YAAY,CAAEoC,eAAe,CAAC,CAAGvE,QAAQ,CAAgB,EAAE,CAAC,CACnE,KAAM,CAACkC,eAAe,CAAEsC,kBAAkB,CAAC,CAAGxE,QAAQ,CAAgB,EAAE,CAAC,CAAE;AAC3E,KAAM,CAACyE,OAAO,CAAEC,UAAU,CAAC,CAAG1E,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC2E,iBAAiB,CAAEC,oBAAoB,CAAC,CAAG5E,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAAC6E,oBAAoB,CAAEC,uBAAuB,CAAC,CAAG9E,QAAQ,CAA6C,IAAI,CAAC,CAClH,KAAM,CAAC+E,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGhF,QAAQ,CAAC,KAAK,CAAC,CACrE,KAAM,CAACiF,UAAU,CAAEC,aAAa,CAAC,CAAGlF,QAAQ,CAAqB,IAAI,CAAC,CACtE,KAAM,CAACmF,aAAa,CAAEC,gBAAgB,CAAC,CAAGpF,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACqF,YAAY,CAAEC,eAAe,CAAC,CAAGtF,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACuF,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGxF,QAAQ,CAAC,KAAK,CAAC,CACjE,KAAM,CAACyF,WAAW,CAAEC,cAAc,CAAC,CAAG1F,QAAQ,CAAqB,IAAI,CAAC,CACxE,KAAM,CAAC2F,aAAa,CAAEC,gBAAgB,CAAC,CAAG5F,QAAQ,CAAC,KAAK,CAAC,CAEzD;AACA,KAAM,CAACkE,WAAW,CAAE2B,cAAc,CAAC,CAAG7F,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACgE,QAAQ,CAAE8B,WAAW,CAAC,CAAG9F,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAACsE,UAAU,CAAEyB,aAAa,CAAC,CAAG/F,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAACqE,UAAU,CAAE2B,aAAa,CAAC,CAAGhG,QAAQ,CAAC,CAAC,CAAC,CAE/C;AACA,KAAM,CAAC6B,UAAU,CAAEoE,aAAa,CAAC,CAAGjG,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAC8B,oBAAoB,CAAEoE,uBAAuB,CAAC,CAAGlG,QAAQ,CAAS,KAAK,CAAC,CAC/E,KAAM,CAAC+B,cAAc,CAAEoE,iBAAiB,CAAC,CAAGnG,QAAQ,CAAS,KAAK,CAAC,CACnE,KAAM,CAACgC,SAAS,CAAEoE,YAAY,CAAC,CAAGpG,QAAQ,CAAsB,QAAQ,CAAC,CAEzE;AACA,KAAM,CAACqG,eAAe,CAAEC,kBAAkB,CAAC,CAAGtG,QAAQ,CAAC,CACnD4C,eAAe,CAAE,EAAE,CACnBG,sBAAsB,CAAE,EAAE,CAC1BwD,cAAc,CAAE,oBAAoB,CACpCC,gBAAgB,CAAE,CACdC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,EAAE,CAChBvD,kBAAkB,CAAE,cAAc,CAClCwD,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZ;AACAC,cAAc,CAAE,EAAE,CAClBC,kBAAkB,CAAE,EAAE,CACtBC,eAAe,CAAE,EAAE,CACnB;AACAC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,YAAY,CAAE,EAAE,CAChBC,oBAAoB,CAAE,KAAK,CAC3B;AACAC,sBAAsB,CAAE,EAAE,CAC1B;AACAC,mBAAmB,CAAE,EAAE,CACvBC,kBAAkB,CAAE,EAAE,CACtBC,qBAAqB,CAAE,EAAE,CACzB;AACAC,WAAW,CAAE,EAAE,CACfC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,YAAY,CAAE,EAAE,CAChBC,YAAY,CAAE,EAAE,CAChBC,gBAAgB,CAAE,EAAE,CACpBC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACT;AACAC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,GAAG,CACdC,QAAQ,CAAE,OAAO,CACjBC,SAAS,CAAE,IAAI,CACfC,gBAAgB,CAAE,EACtB,CACJ,CAAC,CAAC,CAEF,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAG5I,QAAQ,CAAC,CAC/CmD,UAAU,CAAE,KAAK,CACjB0F,SAAS,CAAE,KAAK,CAChBC,UAAU,CAAE,KAChB,CAAC,CAAC,CAEF,KAAM,CAAAC,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,KAAAC,cAAA,CACA;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjI,cAAc,CAACkI,eAAe,CAAC,CAAC,CAAE,IAAI,CAAC,CAAE;AAChE,GAAID,QAAQ,CAACE,OAAO,GAAAH,cAAA,CAAIC,QAAQ,CAACG,IAAI,UAAAJ,cAAA,WAAbA,cAAA,CAAeI,IAAI,CAAE,CACzC5E,kBAAkB,CAACyE,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CACtC,MAAO,CAAAH,QAAQ,CAACG,IAAI,CAACA,IAAI,CAC7B,CACA,MAAO,EAAE,CACb,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CACzD,MAAO,EAAE,CACb,CACJ,CAAC,CAED,KAAM,CAAAE,iBAAiB,CAAG,cAAAA,CAAA,CAA+D,IAAxD,CAAAC,IAAY,CAAAC,SAAA,CAAArH,MAAA,IAAAqH,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAGvF,WAAW,IAAE,CAAAyF,IAAY,CAAAF,SAAA,CAAArH,MAAA,IAAAqH,SAAA,MAAAC,SAAA,CAAAD,SAAA,IAAGzF,QAAQ,CAChFU,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,KAAAkF,eAAA,CACA,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAjI,cAAc,CAACkI,eAAe,CAACM,IAAI,CAAEG,IAAI,CAAC,CACjE,GAAIV,QAAQ,CAACE,OAAO,GAAAS,eAAA,CAAIX,QAAQ,CAACG,IAAI,UAAAQ,eAAA,WAAbA,eAAA,CAAeR,IAAI,CAAE,CACzC7E,eAAe,CAAC0E,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CACnCvD,cAAc,CAACoD,QAAQ,CAACG,IAAI,CAACI,IAAI,EAAIA,IAAI,CAAC,CAC1C1D,WAAW,CAACmD,QAAQ,CAACG,IAAI,CAACpF,QAAQ,EAAI2F,IAAI,CAAC,CAC3C5D,aAAa,CAACkD,QAAQ,CAACG,IAAI,CAAC9E,UAAU,EAAI,CAAC,CAAC,CAC5C0B,aAAa,CAACiD,QAAQ,CAACG,IAAI,CAAC/E,UAAU,EAAI,CAAC,CAAC,CAChD,CACJ,CAAE,MAAOgF,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACzD,CAAC,OAAS,CACN3E,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED;AACA,KAAM,CAAAmF,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACpCnF,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,KAAAoF,eAAA,CACA,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAjI,cAAc,CAACkI,eAAe,CAAChF,WAAW,CAAEF,QAAQ,CAAC,CAC5E,GAAIiF,QAAQ,CAACE,OAAO,GAAAW,eAAA,CAAIb,QAAQ,CAACG,IAAI,UAAAU,eAAA,WAAbA,eAAA,CAAeV,IAAI,CAAE,CACzC,KAAM,CAAAW,aAAa,CAAGd,QAAQ,CAACG,IAAI,CAAC/E,UAAU,EAAI,CAAC,CACnD,KAAM,CAAA2F,aAAa,CAAGf,QAAQ,CAACG,IAAI,CAAC9E,UAAU,EAAI,CAAC,CAEnD;AACA,GAAIJ,WAAW,CAAG6F,aAAa,EAAIC,aAAa,CAAG,CAAC,CAAE,CAClD,KAAM,CAAAT,iBAAiB,CAACQ,aAAa,CAAE/F,QAAQ,CAAC,CACpD,CAAC,IAAM,IAAIgG,aAAa,GAAK,CAAC,CAAE,CAC5B;AACAnE,cAAc,CAAC,CAAC,CAAC,CACjBtB,eAAe,CAAC,EAAE,CAAC,CACnBC,kBAAkB,CAAC,EAAE,CAAC,CACtBuB,aAAa,CAAC,CAAC,CAAC,CAChBC,aAAa,CAAC,CAAC,CAAC,CAChBtB,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,IAAM,CACH;AACAH,eAAe,CAAC0E,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CACnCrD,aAAa,CAACiE,aAAa,CAAC,CAC5BhE,aAAa,CAAC+D,aAAa,CAAC,CAC5BrF,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CACA;AACA,KAAM,CAAAqE,oBAAoB,CAAC,CAAC,CAChC,CAAE,MAAOM,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD3E,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED;AACA,KAAM,CAAAuF,uBAAuB,CAAG,KAAAA,CAAA,GAAY,CACxCvF,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACA;AACA,KAAM,CAAA6E,iBAAiB,CAAC,CAAC,CAAEvF,QAAQ,CAAC,CACpC;AACA,KAAM,CAAA+E,oBAAoB,CAAC,CAAC,CAChC,CAAE,MAAOM,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD3E,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDzE,SAAS,CAAC,IAAM,CACZsJ,iBAAiB,CAAC,CAAC,CAAEvF,QAAQ,CAAC,CAC9B;AACA+E,oBAAoB,CAAC,CAAC,CACtB;AACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAmB,SAAS,CAAGA,CAAA,GAAM,CACpB5D,kBAAkB,CAAC,CACf1D,eAAe,CAAE,EAAE,CACnBG,sBAAsB,CAAE,EAAE,CAC1BwD,cAAc,CAAE,oBAAoB,CACpCC,gBAAgB,CAAE,CACdC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,MAAM,CACZC,YAAY,CAAE,EAAE,CAChBvD,kBAAkB,CAAE,cAAc,CAClCwD,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZ;AACAC,cAAc,CAAE,EAAE,CAClBC,kBAAkB,CAAE,EAAE,CACtBC,eAAe,CAAE,EAAE,CACnB;AACAC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,YAAY,CAAE,EAAE,CAChBC,oBAAoB,CAAE,KAAK,CAC3B;AACAC,sBAAsB,CAAE,EAAE,CAC1B;AACAC,mBAAmB,CAAE,EAAE,CACvBC,kBAAkB,CAAE,EAAE,CACtBC,qBAAqB,CAAE,EAAE,CACzB;AACAC,WAAW,CAAE,EAAE,CACfC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,YAAY,CAAE,EAAE,CAChBC,YAAY,CAAE,EAAE,CAChBC,gBAAgB,CAAE,EAAE,CACpBC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACT;AACAC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,GAAG,CACdC,QAAQ,CAAE,OAAO,CACjBC,SAAS,CAAE,IAAI,CACfC,gBAAgB,CAAE,EACtB,CACJ,CAAC,CAAC,CACFxD,aAAa,CAAC,IAAI,CAAC,CACnBE,gBAAgB,CAAC,KAAK,CAAC,CAC3B,CAAC,CAED;AACAnF,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAkK,eAAe,CAAIC,KAAoB,EAAK,CAC9C,GAAIA,KAAK,CAACC,GAAG,GAAK,QAAQ,CAAE,CACxB,GAAItF,mBAAmB,CAAE,CACrBC,sBAAsB,CAAC,KAAK,CAAC,CAC7BkF,SAAS,CAAC,CAAC,CACf,CACJ,CACJ,CAAC,CAEDI,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAEJ,eAAe,CAAC,CACrD,MAAO,IAAM,CACTG,QAAQ,CAACE,mBAAmB,CAAC,SAAS,CAAEL,eAAe,CAAC,CAC5D,CAAC,CACL,CAAC,CAAE,CAACpF,mBAAmB,CAAC,CAAC,CAEzB;AACA9E,SAAS,CAAC,IAAM,CACZ,GAAIgF,UAAU,CAAE,KAAAwF,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CACZzE,kBAAkB,CAAC,CACf1D,eAAe,CAAEqC,UAAU,CAACrC,eAAe,CAC3CG,sBAAsB,CAAEkC,UAAU,CAAClC,sBAAsB,CACzDwD,cAAc,CAAE/E,qBAAqB,CAACyD,UAAU,CAAChC,yBAAyB,CAAC,CAC3EuD,gBAAgB,CAAE,CACdC,IAAI,CAAExB,UAAU,CAAC9B,UAAU,CAACsD,IAAI,CAChCC,IAAI,CAAEzB,UAAU,CAAC9B,UAAU,CAACuD,IAAI,CAChCC,YAAY,CAAE1B,UAAU,CAAC9B,UAAU,CAACwD,YAAY,CAChDvD,kBAAkB,CAAE6B,UAAU,CAAC9B,UAAU,CAACC,kBAAkB,CAC5DwD,QAAQ,CAAE,EAAA6D,qBAAA,CAAAxF,UAAU,CAAC9B,UAAU,UAAAsH,qBAAA,iBAArBA,qBAAA,CAAuB7D,QAAQ,GAAI,EAAE,CAC/CC,QAAQ,CAAE,EAAE,CAAG;AACf;AACAC,cAAc,CAAE,EAAA4D,sBAAA,CAAAzF,UAAU,CAAC9B,UAAU,UAAAuH,sBAAA,iBAArBA,sBAAA,CAAuB5D,cAAc,GAAI,EAAE,CAC3DC,kBAAkB,CAAE,EAAE,CAAE;AACxBC,eAAe,CAAE,EAAE,CAAE;AACrB;AACAC,SAAS,CAAE,EAAA0D,sBAAA,CAAA1F,UAAU,CAAC9B,UAAU,UAAAwH,sBAAA,iBAArBA,sBAAA,CAAuB1D,SAAS,GAAI,EAAE,CACjDC,WAAW,CAAE,EAAA0D,sBAAA,CAAA3F,UAAU,CAAC9B,UAAU,UAAAyH,sBAAA,iBAArBA,sBAAA,CAAuB1D,WAAW,GAAI,EAAE,CACrDC,YAAY,CAAE,EAAA0D,sBAAA,CAAA5F,UAAU,CAAC9B,UAAU,UAAA0H,sBAAA,iBAArBA,sBAAA,CAAuB1D,YAAY,GAAI,EAAE,CACvDC,oBAAoB,CAAE,EAAA0D,sBAAA,CAAA7F,UAAU,CAAC9B,UAAU,UAAA2H,sBAAA,iBAArBA,sBAAA,CAAuB1D,oBAAoB,GAAI,KAAK,CAC1E;AACAC,sBAAsB,CAAE,EAAA0D,sBAAA,CAAA9F,UAAU,CAAC9B,UAAU,UAAA4H,sBAAA,iBAArBA,sBAAA,CAAuB1D,sBAAsB,GAAI,EAAE,CAC3E;AACAC,mBAAmB,CAAE,EAAE,CACvBC,kBAAkB,CAAE,EAAE,CACtBC,qBAAqB,CAAE,EAAE,CACzB;AACAC,WAAW,CAAE,EAAE,CACfC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,YAAY,CAAE,EAAE,CAChBC,YAAY,CAAE,EAAE,CAChBC,gBAAgB,CAAE,EAAE,CACpBC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACT;AACAC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,GAAG,CACdC,QAAQ,CAAE,OAAO,CACjBC,SAAS,CAAE,IAAI,CACfC,gBAAgB,CAAE,EACtB,CACJ,CAAC,CAAC,CACN,CAAC,IAAM,CACH;AACApC,kBAAkB,CAAC,CACf1D,eAAe,CAAE,EAAE,CACnBG,sBAAsB,CAAE,EAAE,CAC1BwD,cAAc,CAAE,oBAAoB,CACpCC,gBAAgB,CAAE,CACdC,IAAI,CAAE,EAAE,CACRC,IAAI,CAAE,MAAM,CAAE;AACdC,YAAY,CAAE,EAAE,CAChBvD,kBAAkB,CAAE,cAAc,CAClCwD,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZ;AACAC,cAAc,CAAE,EAAE,CAClBC,kBAAkB,CAAE,EAAE,CACtBC,eAAe,CAAE,EAAE,CACnB;AACAC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,YAAY,CAAE,EAAE,CAChBC,oBAAoB,CAAE,KAAK,CAC3B;AACAC,sBAAsB,CAAE,EAAE,CAC1B;AACAC,mBAAmB,CAAE,EAAE,CACvBC,kBAAkB,CAAE,EAAE,CACtBC,qBAAqB,CAAE,EAAE,CACzB;AACAC,WAAW,CAAE,EAAE,CACfC,UAAU,CAAE,KAAK,CACjBC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,EAAE,CACfC,QAAQ,CAAE,EAAE,CACZC,YAAY,CAAE,EAAE,CAChBC,YAAY,CAAE,EAAE,CAChBC,gBAAgB,CAAE,EAAE,CACpBC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACT;AACAC,QAAQ,CAAE,EAAE,CACZC,UAAU,CAAE,EAAE,CACdC,SAAS,CAAE,GAAG,CACdC,QAAQ,CAAE,OAAO,CACjBC,SAAS,CAAE,IAAI,CACfC,gBAAgB,CAAE,EACtB,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,CAACzD,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAA+F,qBAAqB,CAAIxE,gBAAqB,EAAK,CACrD,KAAM,CAAEC,IAAI,CAAEC,IAAI,CAAEC,YAAY,CAAEvD,kBAAkB,CAAEwD,QAAQ,CAAEC,QAAS,CAAC,CAAGL,gBAAgB,CAE7F;AACA,OAAQH,eAAe,CAACE,cAAc,EAClC,IAAK,oBAAoB,CACrB,KAAM,CAAA0E,yBAAyB,CAAG,CAAC,cAAc,CAAE,UAAU,CAAE,iBAAiB,CAAC,CAACnI,QAAQ,CAACM,kBAAkB,CAAC,CAC9G,gBAAA8H,MAAA,CAAiBzE,IAAI,MAAAyE,MAAA,CAAIxE,IAAI,eAAAwE,MAAA,CAAavE,YAAY,MAAAuE,MAAA,CAAID,yBAAyB,YAAAC,MAAA,CAActE,QAAQ,eAAAsE,MAAA,CAAarE,QAAQ,MAAM,2BAA2B,iCAEnK,IAAK,OAAO,CACR,KAAM,CAAAsE,qBAAqB,CAAG/H,kBAAkB,GAAK,cAAc,CACnE,gBAAA8H,MAAA,CAAiBzE,IAAI,WAAAyE,MAAA,CAASxE,IAAI,eAAAwE,MAAA,CAAavE,YAAY,MAAAuE,MAAA,CAAIC,qBAAqB,QAAAD,MAAA,CAAUtE,QAAQ,UAAAsE,MAAA,CAAQrE,QAAQ,MAAM,EAAE,EAElI,IAAK,SAAS,CACV,KAAM,CAAAuE,qBAAqB,CAAG,CAAC,cAAc,CAAE,WAAW,CAAE,aAAa,CAAE,WAAW,CAAC,CAACtI,QAAQ,CAACM,kBAAkB,CAAC,CACpH,GAAIgI,qBAAqB,CAAE,CACvB,mBAAAF,MAAA,CAAoBtE,QAAQ,MAAAsE,MAAA,CAAIrE,QAAQ,MAAAqE,MAAA,CAAIzE,IAAI,MAAAyE,MAAA,CAAIxE,IAAI,MAAAwE,MAAA,CAAIvE,YAAY,EAC5E,CAAC,IAAM,CACH,mBAAAuE,MAAA,CAAoBzE,IAAI,MAAAyE,MAAA,CAAIxE,IAAI,MAAAwE,MAAA,CAAIvE,YAAY,EACpD,CAEJ,QACI,gBAAAuE,MAAA,CAAiBzE,IAAI,MAAAyE,MAAA,CAAIxE,IAAI,eAAAwE,MAAA,CAAavE,YAAY,2DAC9D,CACJ,CAAC,CAED,KAAM,CAAA0E,uBAAuB,CAAG,KAAAA,CAAA,GAAY,CACxC,GAAIhG,YAAY,CAAE,OAElBC,eAAe,CAAC,IAAI,CAAC,CAErB,GAAI,CACA;AACA,KAAM,CAAAgG,eAAe,CAAAC,aAAA,CAAAA,aAAA,IACdlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IACTlF,eAAe,CAACG,gBAAgB,MACnCgF,GAAG,CAAER,qBAAqB,CAAC3E,eAAe,CAACG,gBAAgB,CAAC,EAC/D,EACJ,CAED,GAAI,CAAAyC,QAAQ,CACZ,GAAIhE,UAAU,CAAE,CACZgE,QAAQ,CAAG,KAAM,CAAAjI,cAAc,CAACyK,iBAAiB,CAACxG,UAAU,CAACyG,aAAa,CAAEJ,eAAe,CAAC,CAChG,CAAC,IAAM,CACHrC,QAAQ,CAAG,KAAM,CAAAjI,cAAc,CAAC2K,iBAAiB,CAACL,eAAe,CAAC,CACtE,CAEA,GAAIrC,QAAQ,CAACE,OAAO,CAAE,CAClB/D,gBAAgB,CAAC,IAAI,CAAC,CACtB,GAAIH,UAAU,CAAE,CACZ;AACAsE,iBAAiB,CAACrF,WAAW,CAAEF,QAAQ,CAAC,CAC5C,CAAC,IAAM,CACH;AACAiG,uBAAuB,CAAC,CAAC,CAC7B,CAEA;AACJ,CAAC,IAAM,CACHX,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEJ,QAAQ,CAAC,CAC3CK,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEJ,QAAQ,CAAC2C,MAAM,CAAC,CAClDC,KAAK,IAAAX,MAAA,CAAIjC,QAAQ,CAAC6C,OAAO,EAAI,4BAA4B,EAAAZ,MAAA,CAAGjC,QAAQ,CAAC2C,MAAM,CAAG,YAAY,CAAGG,MAAM,CAACC,IAAI,CAAC/C,QAAQ,CAAC2C,MAAM,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CAAG,EAAE,CAAE,CAAC,CAChJ,CACJ,CAAE,MAAO5C,KAAU,CAAE,CACjBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnDC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAE6C,IAAI,CAACC,SAAS,CAAC9C,KAAK,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CACpEwC,KAAK,CAACxC,KAAK,CAACyC,OAAO,EAAI,4BAA4B,CAAC,CACxD,CAAC,OAAS,CACNxG,eAAe,CAAC,KAAK,CAAC,CAC1B,CACJ,CAAC,CAED,KAAM,CAAA8G,cAAc,CAAG,KAAO,CAAAC,WAAiB,EAAK,CAChD,GAAI1H,iBAAiB,CAAE,OAAQ;AAE/BC,oBAAoB,CAAC,IAAI,CAAC,CAC1B,GAAI,CACA,GAAI,CAAA0H,cAAc,CAClB,GAAID,WAAW,EAAIA,WAAW,CAACX,aAAa,CAAE,CAC1C;AACAY,cAAc,CAAG,CAAEZ,aAAa,CAAEW,WAAW,CAACX,aAAc,CAAC,CACjE,CAAC,IAAM,CACH;AACAY,cAAc,CAAAf,aAAA,CAAAA,aAAA,IACPlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IACTlF,eAAe,CAACG,gBAAgB,MACnCgF,GAAG,CAAER,qBAAqB,CAAC3E,eAAe,CAACG,gBAAgB,CAAC,EAC/D,EACJ,CACL,CAEA,KAAM,CAAAyC,QAAQ,CAAG,KAAM,CAAAjI,cAAc,CAACoL,cAAc,CAACE,cAAc,CAAC,CAEpExH,uBAAuB,CAAC,CACpBgH,OAAO,CAAE7C,QAAQ,CAAC6C,OAAO,CACzB3C,OAAO,CAAEF,QAAQ,CAACE,OACtB,CAAC,CAAC,CAEF;AACAoD,UAAU,CAAC,IAAMzH,uBAAuB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CACzD,CAAE,MAAOuE,KAAU,CAAE,CACjBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CvE,uBAAuB,CAAC,CACpBgH,OAAO,CAAEzC,KAAK,CAACyC,OAAO,EAAI,wBAAwB,CAClD3C,OAAO,CAAE,KACb,CAAC,CAAC,CAEF;AACAoD,UAAU,CAAC,IAAMzH,uBAAuB,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,CACzD,CAAC,OAAS,CACNF,oBAAoB,CAAC,KAAK,CAAC,CAC/B,CACJ,CAAC,CAED,KAAM,CAAA4H,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CAAC/G,WAAW,CAAE,OAElB,GAAI,CACA,KAAM,CAAAwD,QAAQ,CAAG,KAAM,CAAAjI,cAAc,CAACwL,iBAAiB,CAAC/G,WAAW,CAACiG,aAAa,CAAC,CAElF,GAAIzC,QAAQ,CAACE,OAAO,CAAE,CAClBvD,gBAAgB,CAAC,IAAI,CAAC,CACtBiE,mBAAmB,CAAC,CAAC,CAErB;AACJ,CAAC,IAAM,CACHgC,KAAK,CAAC5C,QAAQ,CAAC6C,OAAO,EAAI,8BAA8B,CAAC,CAC7D,CACJ,CAAE,MAAOzC,KAAU,CAAE,CACjBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDwC,KAAK,CAACxC,KAAK,CAACyC,OAAO,EAAI,8BAA8B,CAAC,CAC1D,CACJ,CAAC,CAED,KAAM,CAAAW,wBAAwB,CAAI/J,GAAgB,EAAK,CACnDgD,cAAc,CAAChD,GAAG,CAAC,CACnB8C,oBAAoB,CAAC,IAAI,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAkH,wBAAwB,CAAIC,KAAiC,EAAK,CACpE/D,gBAAgB,CAACgE,IAAI,EAAArB,aAAA,CAAAA,aAAA,IAAUqB,IAAI,MAAE,CAACD,KAAK,EAAG,CAACC,IAAI,CAACD,KAAK,CAAC,EAAG,CAAC,CAClE,CAAC,CAED,mBACIzL,IAAA,QAAK2L,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAChC1L,KAAA,QAAKyL,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eAEjC1L,KAAA,QAAKyL,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjB1L,KAAA,QAAKyL,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eAC3C5L,IAAA,CAAChB,QAAQ,EAAC2M,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,cACpDzI,IAAA,OAAI2L,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,cAAY,CAAI,CAAC,EACjE,CAAC,cACN5L,IAAA,MAAG2L,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,mDAAiD,CAAG,CAAC,EACnF,CAAC,cAGN5L,IAAA,QAAK2L,SAAS,CAAC,mCAAmC,CAAAC,QAAA,cAC9C1L,KAAA,QAAKyL,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC1B1L,KAAA,QAAKyL,SAAS,CAAC,wDAAwD,CAAAC,QAAA,eACnE1L,KAAA,OAAIyL,SAAS,CAAC,6DAA6D,CAAAC,QAAA,eACvE5L,IAAA,CAAChB,QAAQ,EAAC2M,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,wBAExD,EAAI,CAAC,cACLvI,KAAA,WACI2L,OAAO,CAAEA,CAAA,GAAM,CACX7C,SAAS,CAAC,CAAC,CACXlF,sBAAsB,CAAC,IAAI,CAAC,CAChC,CAAE,CACF6H,SAAS,CAAC,iEAAiE,CAAAC,QAAA,eAE3E5L,IAAA,CAACf,IAAI,EAAC0M,SAAS,CAAC,MAAM,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,cACnCzI,IAAA,SAAA4L,QAAA,CAAM,iBAAe,CAAM,CAAC,EACxB,CAAC,EACR,CAAC,cAGN1L,KAAA,QAAKyL,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzB5L,IAAA,QAAK2L,SAAS,CAAC,UAAU,CAAAC,QAAA,cACrB1L,KAAA,QAAKyL,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9B5L,IAAA,CAACH,MAAM,EAAC8L,SAAS,CAAC,qEAAqE,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,cACpGzI,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXH,SAAS,CAAC,6BAA6B,CACvCI,WAAW,CAAC,wBAAwB,CACpCC,KAAK,CAAErL,UAAW,CAClBsL,QAAQ,CAAGC,CAAC,EAAK,CACbnH,aAAa,CAACmH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAC7BrH,cAAc,CAAC,CAAC,CAAC,CAAE;AACvB,CAAE,CACL,CAAC,EACD,CAAC,CACL,CAAC,cACN3E,IAAA,QAAK2L,SAAS,CAAC,UAAU,CAAAC,QAAA,cACrB1L,KAAA,WACIyL,SAAS,CAAC,uBAAuB,CACjCK,KAAK,CAAEpL,oBAAqB,CAC5BqL,QAAQ,CAAGC,CAAC,EAAK,CACblH,uBAAuB,CAACkH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CACvCrH,cAAc,CAAC,CAAC,CAAC,CAAE;AACvB,CAAE,CAAAiH,QAAA,eAEF5L,IAAA,WAAQgM,KAAK,CAAC,KAAK,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACjD1L,KAAA,aAAUkM,KAAK,CAAC,sBAAsB,CAAAR,QAAA,eAClC5L,IAAA,WAAQgM,KAAK,CAAC,oBAAoB,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cAChE5L,IAAA,WAAQgM,KAAK,CAAC,OAAO,CAAAJ,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC5L,IAAA,WAAQgM,KAAK,CAAC,YAAY,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC9C5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC5L,IAAA,WAAQgM,KAAK,CAAC,OAAO,CAAAJ,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,iBAAe,CAAQ,CAAC,cAC/C5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtC5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,kBAAgB,CAAQ,CAAC,cACnD5L,IAAA,WAAQgM,KAAK,CAAC,eAAe,CAAAJ,QAAA,CAAC,eAAa,CAAQ,CAAC,EAC9C,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,iBAAiB,CAAAR,QAAA,eAC7B5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,kBAAkB,CAAAR,QAAA,eAC9B5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC7C5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,EACrC,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,eAAe,CAAAR,QAAA,eAC3B5L,IAAA,WAAQgM,KAAK,CAAC,kBAAkB,CAAAJ,QAAA,CAAC,oBAAkB,CAAQ,CAAC,cAC5D5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,oBAAoB,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,EAC1D,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,gBAAgB,CAAAR,QAAA,eAC5B5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,iBAAiB,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACpD,CAAC,EACP,CAAC,CACR,CAAC,cACN5L,IAAA,QAAK2L,SAAS,CAAC,UAAU,CAAAC,QAAA,cACrB1L,KAAA,WACIyL,SAAS,CAAC,uBAAuB,CACjCK,KAAK,CAAEnL,cAAe,CACtBoL,QAAQ,CAAGC,CAAC,EAAK,CACbjH,iBAAiB,CAACiH,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CACjCrH,cAAc,CAAC,CAAC,CAAC,CAAE;AACvB,CAAE,CAAAiH,QAAA,eAEF5L,IAAA,WAAQgM,KAAK,CAAC,KAAK,CAAAJ,QAAA,CAAC,gBAAc,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,mBAAmB,CAAAJ,QAAA,CAAC,oBAAkB,CAAQ,CAAC,cAC7D5L,IAAA,WAAQgM,KAAK,CAAC,iBAAiB,CAAAJ,QAAA,CAAC,wBAAsB,CAAQ,CAAC,cAC/D5L,IAAA,WAAQgM,KAAK,CAAC,mBAAmB,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cAC9D5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,EAC7C,CAAC,CACR,CAAC,cACN5L,IAAA,QAAK2L,SAAS,CAAC,UAAU,CAAAC,QAAA,cACrB1L,KAAA,WACIyL,SAAS,CAAC,uBAAuB,CACjCK,KAAK,CAAElL,SAAU,CACjBmL,QAAQ,CAAE,KAAO,CAAAC,CAAC,EAAK,CACnB,KAAM,CAAAG,YAAY,CAAGH,CAAC,CAACC,MAAM,CAACH,KAA4B,CAC1D9G,YAAY,CAACmH,YAAY,CAAC,CAC1B1H,cAAc,CAAC,CAAC,CAAC,CAAE;AAEnB;AACA,GAAI0H,YAAY,GAAK,QAAQ,EAAIrL,eAAe,CAACE,MAAM,GAAK,CAAC,CAAE,CAC3D,KAAM,CAAA2G,oBAAoB,CAAC,CAAC,CAChC,CACJ,CAAE,CAAA+D,QAAA,eAEF5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cAC5C5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,EACxC,CAAC,CACR,CAAC,EACL,CAAC,cAEN1L,KAAA,QAAKyL,SAAS,CAAC,SAAS,CAAAC,QAAA,EACnB,CAAC,IAAM,CACJ,KAAM,CAAEzK,mBAAoB,CAAC,CAAGV,uBAAuB,CAAC,CAAC,CACzD,MAAO,CAAAU,mBAAmB,CAACmL,GAAG,CAAE9K,GAAG,eACnCxB,IAAA,QAA6B2L,SAAS,CAAC,QAAQ,CAAAC,QAAA,cAC3C5L,IAAA,QACI2L,SAAS,CAAC,0CAA0C,CACpDY,KAAK,CAAE,CAACC,MAAM,CAAE,SAAS,CAAE,CAC3BX,OAAO,CAAEA,CAAA,GAAM,CACX7H,aAAa,CAACxC,GAAG,CAAC,CAClBsC,sBAAsB,CAAC,IAAI,CAAC,CAChC,CAAE,CAAA8H,QAAA,cAEF5L,IAAA,QAAK2L,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC1B1L,KAAA,QAAKyL,SAAS,CAAC,kDAAkD,CAAAC,QAAA,eAC7D1L,KAAA,QAAKyL,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxB5L,IAAA,OAAI2L,SAAS,CAAC,mCAAmC,CAAAC,QAAA,CAAEpK,GAAG,CAACE,eAAe,CAAK,CAAC,cAC5E1B,IAAA,MAAG2L,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAAEpK,GAAG,CAACK,sBAAsB,CAAI,CAAC,cAC/E3B,KAAA,QAAKyL,SAAS,CAAC,iCAAiC,CAAAC,QAAA,EAC3CpK,GAAG,CAACS,UAAU,CAACsD,IAAI,CAAC,GAAC,CAAC/D,GAAG,CAACS,UAAU,CAACuD,IAAI,CAAC,GAAC,CAAChE,GAAG,CAACS,UAAU,CAACwD,YAAY,EACvE,CAAC,EACL,CAAC,cACNvF,KAAA,QAAKyL,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9B5L,IAAA,WACI6L,OAAO,CAAGK,CAAC,EAAK,CACZA,CAAC,CAACO,eAAe,CAAC,CAAC,CACnBvB,cAAc,CAAC1J,GAAG,CAAC,CACvB,CAAE,CACFmK,SAAS,CAAC,0CAA0C,CACpDe,KAAK,CAAC,iBAAiB,CACvBC,QAAQ,CAAElJ,iBAAkB,CAAAmI,QAAA,CAE3BnI,iBAAiB,cACdzD,IAAA,CAACN,MAAM,EAAC+I,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,cAAc,CAAE,CAAC,cAE7C3L,IAAA,CAACb,QAAQ,EAACsJ,IAAI,CAAE,EAAG,CAAE,CACxB,CACG,CAAC,cACTzI,IAAA,WACI6L,OAAO,CAAGK,CAAC,EAAK,CACZA,CAAC,CAACO,eAAe,CAAC,CAAC,CACnBlB,wBAAwB,CAAC/J,GAAG,CAAC,CACjC,CAAE,CACFmK,SAAS,CAAC,yCAAyC,CACnDe,KAAK,CAAC,QAAQ,CAAAd,QAAA,cAEd5L,IAAA,CAACd,MAAM,EAACuJ,IAAI,CAAE,EAAG,CAAE,CAAC,CAChB,CAAC,EACR,CAAC,EACL,CAAC,CACL,CAAC,CACL,CAAC,EA/CAjH,GAAG,CAACgJ,aAgDT,CACJ,CAAC,CACN,CAAC,EAAE,CAAC,CACH,CAAC,IAAM,CACJ,KAAM,CAAE9J,UAAU,CAAEY,oBAAqB,CAAC,CAAGb,uBAAuB,CAAC,CAAC,CACtE,KAAM,CAAAmM,OAAO,CAAGlM,UAAU,CAAGY,oBAAoB,CAACJ,MAAM,GAAK,CAAC,CAAGD,YAAY,CAACC,MAAM,GAAK,CAAC,CAE1F,MAAO,CAAA0L,OAAO,EAAI,CAACrJ,OAAO,eACtBvD,IAAA,QAAK2L,SAAS,CAAC,QAAQ,CAAAC,QAAA,cACnB1L,KAAA,QAAKyL,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eACxC5L,IAAA,CAAChB,QAAQ,EAACyJ,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,iBAAiB,CAAE,CAAC,cAClD3L,IAAA,MAAA4L,QAAA,CAAIlL,UAAU,CAAG,4CAA4C,CAAG,gCAAgC,CAAI,CAAC,EACpG,CAAC,CACL,CACR,CACL,CAAC,EAAE,CAAC,CACH6C,OAAO,eACJvD,IAAA,QAAK2L,SAAS,CAAC,QAAQ,CAAAC,QAAA,cACnB1L,KAAA,QAAKyL,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eACxC5L,IAAA,QAAK2L,SAAS,CAAC,gBAAgB,CAACkB,IAAI,CAAC,QAAQ,CAAAjB,QAAA,cACzC5L,IAAA,SAAM2L,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,CAClD,CAAC,cACN5L,IAAA,MAAG2L,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,yBAAuB,CAAG,CAAC,EAC9C,CAAC,CACL,CACR,EACA,CAAC,CAGL,CAAC,IAAM,CACJ,KAAM,CAAElL,UAAU,CAAES,mBAAmB,CAAEC,iBAAiB,CAAEC,iBAAkB,CAAC,CAAGZ,uBAAuB,CAAC,CAAC,CAE3G,MAAO,CAACY,iBAAiB,CAAG,CAAC,EAAIP,SAAS,GAAK,QAAQ,gBACnDZ,KAAA,QAAKyL,SAAS,CAAC,wDAAwD,CAAAC,QAAA,eACnE1L,KAAA,QAAKyL,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC5C5L,IAAA,SAAM2L,SAAS,CAAC,YAAY,CAAAC,QAAA,CACvBlL,UAAU,YAAAsJ,MAAA,CACI7I,mBAAmB,CAACD,MAAM,SAAA8I,MAAA,CAAO3I,iBAAiB,wCAAA2I,MAAA,CAEjD,CAAChH,WAAW,CAAG,CAAC,EAAIF,QAAQ,CAAI,CAAC,SAAAkH,MAAA,CAAOpH,IAAI,CAACkK,GAAG,CAAC9J,WAAW,CAAGF,QAAQ,CAAEzB,iBAAiB,CAAC,SAAA2I,MAAA,CAAO3I,iBAAiB,iBAClI,CACC,CAAC,cACPnB,KAAA,QAAKyL,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC5C5L,IAAA,SAAM2L,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,wBAAsB,CAAM,CAAC,cAChE1L,KAAA,WACIyL,SAAS,CAAC,4BAA4B,CACtCY,KAAK,CAAE,CAAEQ,KAAK,CAAE,MAAO,CAAE,CACzBf,KAAK,CAAElJ,QAAS,CAChBmJ,QAAQ,CAAGC,CAAC,EAAK,CACb,KAAM,CAAAc,WAAW,CAAGC,QAAQ,CAACf,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAC5CpH,WAAW,CAACoI,WAAW,CAAC,CACxBrI,cAAc,CAAC,CAAC,CAAC,CACjB,GAAI,CAACjE,UAAU,CAAE,CACb2H,iBAAiB,CAAC,CAAC,CAAE2E,WAAW,CAAC,CACrC,CACJ,CAAE,CAAApB,QAAA,eAEF5L,IAAA,WAAQgM,KAAK,CAAE,CAAE,CAAAJ,QAAA,CAAC,GAAC,CAAQ,CAAC,cAC5B5L,IAAA,WAAQgM,KAAK,CAAE,EAAG,CAAAJ,QAAA,CAAC,IAAE,CAAQ,CAAC,cAC9B5L,IAAA,WAAQgM,KAAK,CAAE,EAAG,CAAAJ,QAAA,CAAC,IAAE,CAAQ,CAAC,cAC9B5L,IAAA,WAAQgM,KAAK,CAAE,EAAG,CAAAJ,QAAA,CAAC,IAAE,CAAQ,CAAC,EAC1B,CAAC,EACR,CAAC,EACL,CAAC,cAEN5L,IAAA,QAAA4L,QAAA,cACI1L,KAAA,OAAIyL,SAAS,CAAC,+BAA+B,CAAAC,QAAA,eACzC5L,IAAA,OAAI2L,SAAS,cAAA3B,MAAA,CAAehH,WAAW,GAAK,CAAC,CAAG,UAAU,CAAG,EAAE,CAAG,CAAA4I,QAAA,cAC9D5L,IAAA,WACI2L,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAM,CACXlH,cAAc,CAAC,CAAC,CAAC,CACjB,GAAI,CAACjE,UAAU,CAAE,CACb2H,iBAAiB,CAAC,CAAC,CAAC,CACxB,CACJ,CAAE,CACFsE,QAAQ,CAAE3J,WAAW,GAAK,CAAE,CAAA4I,QAAA,cAE5B5L,IAAA,CAACR,YAAY,EAACiJ,IAAI,CAAE,EAAG,CAAE,CAAC,CACtB,CAAC,CACT,CAAC,cACLzI,IAAA,OAAI2L,SAAS,cAAA3B,MAAA,CAAehH,WAAW,GAAK,CAAC,CAAG,UAAU,CAAG,EAAE,CAAG,CAAA4I,QAAA,cAC9D5L,IAAA,WACI2L,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAM,CACX,KAAM,CAAAqB,OAAO,CAAGlK,WAAW,CAAG,CAAC,CAC/B2B,cAAc,CAACuI,OAAO,CAAC,CACvB,GAAI,CAACxM,UAAU,CAAE,CACb2H,iBAAiB,CAAC6E,OAAO,CAAC,CAC9B,CACJ,CAAE,CACFP,QAAQ,CAAE3J,WAAW,GAAK,CAAE,CAAA4I,QAAA,cAE5B5L,IAAA,CAACV,WAAW,EAACmJ,IAAI,CAAE,EAAG,CAAE,CAAC,CACrB,CAAC,CACT,CAAC,CAGJ0E,KAAK,CAACC,IAAI,CAAC,CAAElM,MAAM,CAAE0B,IAAI,CAACkK,GAAG,CAAC,CAAC,CAAE1L,iBAAiB,CAAE,CAAC,CAAE,CAACiM,CAAC,CAAEC,CAAC,GAAK,CAC9D,GAAI,CAAAC,OAAe,CACnB,GAAInM,iBAAiB,EAAI,CAAC,CAAE,CACxBmM,OAAO,CAAGD,CAAC,CAAG,CAAC,CACnB,CAAC,IAAM,IAAItK,WAAW,EAAI,CAAC,CAAE,CACzBuK,OAAO,CAAGD,CAAC,CAAG,CAAC,CACnB,CAAC,IAAM,IAAItK,WAAW,EAAI5B,iBAAiB,CAAG,CAAC,CAAE,CAC7CmM,OAAO,CAAGnM,iBAAiB,CAAG,CAAC,CAAGkM,CAAC,CACvC,CAAC,IAAM,CACHC,OAAO,CAAGvK,WAAW,CAAG,CAAC,CAAGsK,CAAC,CACjC,CAEA,mBACItN,IAAA,OAAkB2L,SAAS,cAAA3B,MAAA,CAAehH,WAAW,GAAKuK,OAAO,CAAG,QAAQ,CAAG,EAAE,CAAG,CAAA3B,QAAA,cAChF5L,IAAA,WACI2L,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAM,CACXlH,cAAc,CAAC4I,OAAO,CAAC,CACvB,GAAI,CAAC7M,UAAU,CAAE,CACb2H,iBAAiB,CAACkF,OAAO,CAAC,CAC9B,CACJ,CAAE,CAAA3B,QAAA,CAED2B,OAAO,CACJ,CAAC,EAXJA,OAYL,CAAC,CAEb,CAAC,CAAC,cAEFvN,IAAA,OAAI2L,SAAS,cAAA3B,MAAA,CAAehH,WAAW,GAAK5B,iBAAiB,CAAG,UAAU,CAAG,EAAE,CAAG,CAAAwK,QAAA,cAC9E5L,IAAA,WACI2L,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAM,CACX,KAAM,CAAAqB,OAAO,CAAGlK,WAAW,CAAG,CAAC,CAC/B2B,cAAc,CAACuI,OAAO,CAAC,CACvB,GAAI,CAACxM,UAAU,CAAE,CACb2H,iBAAiB,CAAC6E,OAAO,CAAC,CAC9B,CACJ,CAAE,CACFP,QAAQ,CAAE3J,WAAW,GAAK5B,iBAAkB,CAAAwK,QAAA,cAE5C5L,IAAA,CAACT,YAAY,EAACkJ,IAAI,CAAE,EAAG,CAAE,CAAC,CACtB,CAAC,CACT,CAAC,cACLzI,IAAA,OAAI2L,SAAS,cAAA3B,MAAA,CAAehH,WAAW,GAAK5B,iBAAiB,CAAG,UAAU,CAAG,EAAE,CAAG,CAAAwK,QAAA,cAC9E5L,IAAA,WACI2L,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAM,CACXlH,cAAc,CAACvD,iBAAiB,CAAC,CACjC,GAAI,CAACV,UAAU,CAAE,CACb2H,iBAAiB,CAACjH,iBAAiB,CAAC,CACxC,CACJ,CAAE,CACFuL,QAAQ,CAAE3J,WAAW,GAAK5B,iBAAkB,CAAAwK,QAAA,cAE5C5L,IAAA,CAACP,aAAa,EAACgJ,IAAI,CAAE,EAAG,CAAE,CAAC,CACvB,CAAC,CACT,CAAC,EACL,CAAC,CACJ,CAAC,EACL,CACR,CACL,CAAC,EAAE,CAAC,EACH,CAAC,CACL,CAAC,CAEL5E,mBAAmB,eAChB7D,IAAA,QAAK2L,SAAS,CAAC,eAAe,CAACY,KAAK,CAAE,CAACiB,eAAe,CAAE,iBAAiB,CAAE,CAAA5B,QAAA,cACvE5L,IAAA,QAAK2L,SAAS,CAAC,6CAA6C,CAAAC,QAAA,cACxD1L,KAAA,QAAKyL,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC7C1L,KAAA,QAAKyL,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACvC5L,IAAA,OAAI2L,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAC9B7H,UAAU,CAAG,kBAAkB,CAAG,qBAAqB,CACxD,CAAC,cACL/D,IAAA,WACI8L,IAAI,CAAC,QAAQ,CACbH,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAM,CACX/H,sBAAsB,CAAC,KAAK,CAAC,CAC7BkF,SAAS,CAAC,CAAC,CACf,CAAE,CACG,CAAC,EACT,CAAC,cACNhJ,IAAA,QAAK2L,SAAS,CAAC,YAAY,CAAAC,QAAA,CACtB3H,aAAa,cACV/D,KAAA,QAAKyL,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7B5L,IAAA,CAACL,YAAY,EAAC8I,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACxD3L,IAAA,OAAI2L,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAC/B7H,UAAU,CAAG,mCAAmC,CAAG,mCAAmC,CACvF,CAAC,cACL/D,IAAA,MAAG2L,SAAS,CAAC,YAAY,CAAAC,QAAA,CACpB7H,UAAU,CAAG,mCAAmC,CAAG,uCAAuC,CAC5F,CAAC,EACH,CAAC,cAEN7D,KAAA,QAAKyL,SAAS,CAAC,SAAS,CAAAC,QAAA,eACxB1L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,kBAAgB,CAAO,CAAC,cAClE5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACzD,eAAgB,CACvCuK,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAAKlF,eAAe,MAAEzD,eAAe,CAAEwK,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,CAAE,CAC3FL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,wBAAwB,CACvC,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,aAAW,CAAO,CAAC,cAC7D5L,IAAA,aACIgM,KAAK,CAAE7G,eAAe,CAACtD,sBAAuB,CAC9CoK,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAAKlF,eAAe,MAAEtD,sBAAsB,CAAEqK,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,CAAE,CAClGL,SAAS,CAAC,wBAAwB,CAClC8B,IAAI,CAAE,CAAE,CACR1B,WAAW,CAAC,+BAA+B,CAC9C,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,kBAAgB,CAAO,CAAC,cAClE1L,KAAA,WACI8L,KAAK,CAAE7G,eAAe,CAACE,cAAe,CACtC4G,QAAQ,CAAGC,CAAC,EAAK,CACb;AACA,KAAM,CAAAwB,WAAW,CAAG,cAAc,CAClC,KAAM,CAAAC,cAAc,CAAI7B,IAAY,EAAK,CACrC,OAAQA,IAAI,EACR,IAAK,oBAAoB,CAAE,MAAO,MAAM,CACxC,IAAK,OAAO,CAAE,MAAO,MAAM,CAC3B,IAAK,YAAY,CAAE,MAAO,MAAM,CAChC,IAAK,SAAS,CAAE,MAAO,OAAO,CAC9B,IAAK,OAAO,CAAE,MAAO,MAAM,CAC3B,IAAK,QAAQ,CAAE,MAAO,MAAM,CAC5B,IAAK,SAAS,CAAE,MAAO,MAAM,CAC7B,IAAK,QAAQ,CAAE,MAAO,EAAE,CACxB,IAAK,WAAW,CAAE,MAAO,MAAM,CAC/B,IAAK,eAAe,CAAE,MAAO,MAAM,CACnC,IAAK,SAAS,CAAE,MAAO,KAAK,CAC5B,IAAK,SAAS,CAAE,MAAO,KAAK,CAC5B,IAAK,SAAS,CAAE,MAAO,KAAK,CAC5B,IAAK,UAAU,CAAE,MAAO,KAAK,CAC7B,IAAK,WAAW,CAAE,MAAO,KAAK,CAC9B,IAAK,UAAU,CAAE,MAAO,MAAM,CAC9B,IAAK,aAAa,CAAE,MAAO,MAAM,CACjC,IAAK,iBAAiB,CAAE,MAAO,KAAK,CACpC,QAAS,MAAO,EAAE,CACtB,CACJ,CAAC,CACD,KAAM,CAAA8B,WAAW,CAAGD,cAAc,CAACzB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAClD5G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IACXlF,eAAe,MAClBE,cAAc,CAAE6G,CAAC,CAACC,MAAM,CAACH,KAAK,CAC9B1G,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IACTlF,eAAe,CAACG,gBAAgB,MACnCpD,kBAAkB,CAAEwL,WAAW,CAC/BlI,IAAI,CAAEoI,WAAW,EACpB,EACJ,CAAC,CACN,CAAE,CACFjC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAEjC1L,KAAA,aAAUkM,KAAK,CAAC,sBAAsB,CAAAR,QAAA,eAClC5L,IAAA,WAAQgM,KAAK,CAAC,oBAAoB,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cAChE5L,IAAA,WAAQgM,KAAK,CAAC,OAAO,CAAAJ,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC5L,IAAA,WAAQgM,KAAK,CAAC,YAAY,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC9C5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC5L,IAAA,WAAQgM,KAAK,CAAC,OAAO,CAAAJ,QAAA,CAAC,OAAK,CAAQ,CAAC,cACpC5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,iBAAe,CAAQ,CAAC,cAC/C5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,QAAM,CAAQ,CAAC,cACtC5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,kBAAgB,CAAQ,CAAC,cACnD5L,IAAA,WAAQgM,KAAK,CAAC,eAAe,CAAAJ,QAAA,CAAC,eAAa,CAAQ,CAAC,EAC9C,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,iBAAiB,CAAAR,QAAA,eAC7B5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACxC5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,EACtC,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,kBAAkB,CAAAR,QAAA,eAC9B5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,SAAS,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC7C5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,EACrC,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,eAAe,CAAAR,QAAA,eAC3B5L,IAAA,WAAQgM,KAAK,CAAC,kBAAkB,CAAAJ,QAAA,CAAC,oBAAkB,CAAQ,CAAC,cAC5D5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,oBAAoB,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,EAC1D,CAAC,cACX1L,KAAA,aAAUkM,KAAK,CAAC,gBAAgB,CAAAR,QAAA,eAC5B5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,iBAAiB,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACpD,CAAC,EACP,CAAC,EACR,CAAC,cACN1L,KAAA,QAAKyL,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,qBAAmB,CAAO,CAAC,cACrE1L,KAAA,WACI8L,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACpD,kBAAmB,CAC3D+J,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEpD,kBAAkB,CAAEgK,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAC9F,CAAE,CACHL,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAGhCzG,eAAe,CAACE,cAAc,GAAK,oBAAoB,eACpDnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,mBAAmB,CAAAJ,QAAA,CAAC,oBAAkB,CAAQ,CAAC,cAC7D5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,UAAQ,CAAQ,CAAC,cAC1C5L,IAAA,WAAQgM,KAAK,CAAC,iBAAiB,CAAAJ,QAAA,CAAC,wBAAsB,CAAQ,CAAC,cAC/D5L,IAAA,WAAQgM,KAAK,CAAC,oBAAoB,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cAChE5L,IAAA,WAAQgM,KAAK,CAAC,mBAAmB,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cAC9D5L,IAAA,WAAQgM,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,CAAC,kBAAgB,CAAQ,CAAC,cACxD5L,IAAA,WAAQgM,KAAK,CAAC,YAAY,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,EAClD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,OAAO,eACvCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACnD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,SAAS,eACzCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,aAAW,CAAQ,CAAC,cAC9C5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,eAAa,CAAQ,CAAC,cAClD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,MAAM,CAAAJ,QAAA,CAAC,OAAK,CAAQ,CAAC,cACnC5L,IAAA,WAAQgM,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC7C5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACnD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,YAAY,eAC5CnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,mBAAmB,CAAAJ,QAAA,CAAC,oBAAkB,CAAQ,CAAC,EAC/D,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,OAAO,eACvCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,2BAAyB,CAAQ,CAAC,cAC/D5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACnD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,SAAS,eACzCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACnD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,QAAQ,eACxCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,mBAAmB,CAAAJ,QAAA,CAAC,oBAAkB,CAAQ,CAAC,EAC/D,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,QAAQ,eACxCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACpD5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,oBAAkB,CAAQ,CAAC,EAC1D,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,WAAW,eAC3CnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACnD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,eAAe,eAC/CnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,EACzC,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,SAAS,eACzCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACvD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC3C5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,gBAAc,CAAQ,CAAC,EAChD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,SAAS,eACzCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACvD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cACzC5L,IAAA,WAAQgM,KAAK,CAAC,UAAU,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,EAC7C,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,SAAS,eACzCnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACvD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,gBAAc,CAAQ,CAAC,EAChD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,UAAU,eAC1CnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,sBAAoB,CAAQ,CAAC,cACvD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,EAC3C,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,WAAW,eAC3CnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,aAAa,CAAAJ,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,gBAAc,CAAQ,CAAC,EAChD,CACL,CAGA,CAAC,SAAS,CAAE,UAAU,CAAE,SAAS,CAAE,WAAW,CAAE,aAAa,CAAE,UAAU,CAAE,UAAU,CAAC,CAAChK,QAAQ,CAACuD,eAAe,CAACE,cAAc,CAAC,eAC5HnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,YAAY,CAAAJ,QAAA,CAAC,eAAa,CAAQ,CAAC,EACnD,CACL,CAGAzG,eAAe,CAACE,cAAc,GAAK,kBAAkB,eAClDnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC7C5L,IAAA,WAAQgM,KAAK,CAAC,uBAAuB,CAAAJ,QAAA,CAAC,WAAS,CAAQ,CAAC,cACxD5L,IAAA,WAAQgM,KAAK,CAAC,kBAAkB,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cAC3D5L,IAAA,WAAQgM,KAAK,CAAC,mBAAmB,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,EAChE,CACL,CAEAzG,eAAe,CAACE,cAAc,GAAK,UAAU,eAC1CnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,SAAO,CAAQ,CAAC,cACvC5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,EAC/C,CACL,CAEAzG,eAAe,CAACE,cAAc,GAAK,oBAAoB,eACpDnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,kBAAkB,CAAAJ,QAAA,CAAC,iBAAe,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,WAAW,CAAAJ,QAAA,CAAC,YAAU,CAAQ,CAAC,EAC/C,CACL,CAGA,CAAC,UAAU,CAAE,aAAa,CAAE,iBAAiB,CAAC,CAAChK,QAAQ,CAACuD,eAAe,CAACE,cAAc,CAAC,eACpFnF,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,WAAQgM,KAAK,CAAC,cAAc,CAAAJ,QAAA,CAAC,qBAAmB,CAAQ,CAAC,cACzD5L,IAAA,WAAQgM,KAAK,CAAC,QAAQ,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,cACjD5L,IAAA,WAAQgM,KAAK,CAAC,kBAAkB,CAAAJ,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EAC7D,CACL,EACG,CAAC,EACR,CAAC,cACN1L,KAAA,QAAKyL,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,MAAI,CAAO,CAAC,cACtD5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACC,IAAK,CAC7C0G,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEC,IAAI,CAAE2G,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAChF,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,6BAA6B,CAC5C,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,MAAI,CAAO,CAAC,cACtD5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACE,IAAK,CAC7CyG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEE,IAAI,CAAE0G,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAChF,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,MAAM,CACrB,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,eAAa,CAAO,CAAC,cAC/D5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACG,YAAa,CACrDwG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEG,YAAY,CAAEyG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EACxF,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,qBAAqB,CACpC,CAAC,EACD,CAAC,CAEL,CACG;AACC5G,eAAe,CAACE,cAAc,GAAK,oBAAoB,EACvD,CAAC,cAAc,CAAE,UAAU,CAAE,iBAAiB,CAAE,oBAAoB,CAAC,CAACzD,QAAQ,CAACuD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,CAAC,EACpI;AACCiD,eAAe,CAACE,cAAc,GAAK,OAAO,EAC1CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,SAAS,EAC5CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,YAAY,EAC/CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,SAAS,EAC5C,CAAC,cAAc,CAAE,WAAW,CAAE,aAAa,CAAE,WAAW,CAAC,CAACzD,QAAQ,CAACuD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,CAAE,EACzH;AACCiD,eAAe,CAACE,cAAc,GAAK,OAAO,EAC1CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,QAAQ,EAC3CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,QAAQ,EAC3CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,WAAW,EAC9CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,eAAe,EAClD,CAAC,cAAc,CAAE,QAAQ,CAAC,CAACzD,QAAQ,CAACuD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,CAAE,gBAE1FhC,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,UAAQ,CAAO,CAAC,cAC1D5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACI,QAAS,CACjDuG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEI,QAAQ,CAAEwG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EACpF,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,mBAAmB,CAClC,CAAC,EACD,CACR,CAGA,CACG;AACC5G,eAAe,CAACE,cAAc,GAAK,oBAAoB,EACvD,CAAC,cAAc,CAAE,UAAU,CAAE,iBAAiB,CAAC,CAACzD,QAAQ,CAACuD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,CAAC,EAC9G;AACCiD,eAAe,CAACE,cAAc,GAAK,OAAO,EAC1CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,SAAS,EAC5CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,YAAY,EAC/CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,SAAS,EAC5C,CAAC,cAAc,CAAE,WAAW,CAAE,aAAa,CAAE,WAAW,CAAC,CAACzD,QAAQ,CAACuD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,CAAE,EACzH;AACCiD,eAAe,CAACE,cAAc,GAAK,OAAO,EAC1CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,QAAQ,EAC3CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,QAAQ,EAC3CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,WAAW,EAC9CF,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,cAAe,EACxE;AACCiD,eAAe,CAACE,cAAc,GAAK,eAAe,EAClD,CAAC,cAAc,CAAE,QAAQ,CAAC,CAACzD,QAAQ,CAACuD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,CAAE,gBAE1FhC,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB1L,KAAA,UAAOyL,SAAS,CAAC,wBAAwB,CAAAC,QAAA,EAAC,UAEtC,CAAC7H,UAAU,eACP/D,IAAA,SAAM2L,SAAS,CAAC,kBAAkB,CAACY,KAAK,CAAE,CAAEsB,QAAQ,CAAE,UAAW,CAAE,CAAAjC,QAAA,CAAC,8BAEpE,CAAM,CACT,EACE,CAAC,cACR1L,KAAA,QAAKyL,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9B5L,IAAA,UACI8L,IAAI,CAAErE,aAAa,CAACxF,UAAU,CAAG,MAAM,CAAG,UAAW,CACrD+J,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACK,QAAS,CACjDsG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEK,QAAQ,CAAEuG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EACpF,CAAE,CACHL,SAAS,CAAC,6BAA6B,CACvCI,WAAW,CAAEhI,UAAU,CAAG,4BAA4B,CAAG,mBAAoB,CAC7E+J,QAAQ,CAAE,CAAC,CAAC/J,UAAW,CAC1B,CAAC,cACF/D,IAAA,WACI8L,IAAI,CAAC,QAAQ,CACbD,OAAO,CAAEA,CAAA,GAAML,wBAAwB,CAAC,YAAY,CAAE,CACtDG,SAAS,CAAC,+FAA+F,CAAAC,QAAA,CAExGnE,aAAa,CAACxF,UAAU,cAAGjC,IAAA,CAACX,MAAM,EAACoJ,IAAI,CAAE,EAAG,CAAE,CAAC,cAAGzI,IAAA,CAACZ,GAAG,EAACqJ,IAAI,CAAE,EAAG,CAAE,CAAC,CAChE,CAAC,EACR,CAAC,EACL,CACR,CAGAtD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,QAAQ,eAC7DhC,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI1L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,mBAAiB,CAAO,CAAC,cACnE5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACM,cAAc,EAAI,EAAG,CAC7DqG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEM,cAAc,CAAEsG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAC1F,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,mBAAmB,CAClC,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB1L,KAAA,UAAOyL,SAAS,CAAC,wBAAwB,CAAAC,QAAA,EAAC,uBAEtC,CAAC7H,UAAU,eACP/D,IAAA,SAAM2L,SAAS,CAAC,kBAAkB,CAACY,KAAK,CAAE,CAAEsB,QAAQ,CAAE,UAAW,CAAE,CAAAjC,QAAA,CAAC,8BAEpE,CAAM,CACT,EACE,CAAC,cACR1L,KAAA,QAAKyL,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9B5L,IAAA,UACI8L,IAAI,CAAErE,aAAa,CAACE,SAAS,CAAG,MAAM,CAAG,UAAW,CACpDqE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACO,kBAAkB,EAAI,EAAG,CACjEoG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEO,kBAAkB,CAAEqG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAC9F,CAAE,CACHL,SAAS,CAAC,6BAA6B,CACvCI,WAAW,CAAEhI,UAAU,CAAG,gCAAgC,CAAG,uBAAwB,CACrF+J,QAAQ,CAAE,CAAC,CAAC/J,UAAW,CAC1B,CAAC,cACF/D,IAAA,WACI8L,IAAI,CAAC,QAAQ,CACbD,OAAO,CAAEA,CAAA,GAAMnE,gBAAgB,CAACgE,IAAI,EAAArB,aAAA,CAAAA,aAAA,IAAUqB,IAAI,MAAE/D,SAAS,CAAE,CAAC+D,IAAI,CAAC/D,SAAS,EAAG,CAAE,CACnFgE,SAAS,CAAC,+FAA+F,CAAAC,QAAA,CAExGnE,aAAa,CAACE,SAAS,cAAG3H,IAAA,CAACX,MAAM,EAACoJ,IAAI,CAAE,EAAG,CAAE,CAAC,cAAGzI,IAAA,CAACZ,GAAG,EAACqJ,IAAI,CAAE,EAAG,CAAE,CAAC,CAC/D,CAAC,EACR,CAAC,EACL,CAAC,cACNvI,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB1L,KAAA,UAAOyL,SAAS,CAAC,wBAAwB,CAAAC,QAAA,EAAC,8BAEtC,CAAC7H,UAAU,eACP/D,IAAA,SAAM2L,SAAS,CAAC,gBAAgB,CAACY,KAAK,CAAE,CAAEsB,QAAQ,CAAE,UAAW,CAAE,CAAAjC,QAAA,CAAC,sBAElE,CAAM,CACT,EACE,CAAC,cACR1L,KAAA,QAAKyL,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9B5L,IAAA,UACI8L,IAAI,CAAErE,aAAa,CAACG,UAAU,CAAG,MAAM,CAAG,UAAW,CACrDoE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACQ,eAAe,EAAI,EAAG,CAC9DmG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEQ,eAAe,CAAEoG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAC3F,CAAE,CACHL,SAAS,CAAC,6BAA6B,CACvCI,WAAW,CAAC,+CAA+C,CAC9D,CAAC,cACF/L,IAAA,WACI8L,IAAI,CAAC,QAAQ,CACbD,OAAO,CAAEA,CAAA,GAAMnE,gBAAgB,CAACgE,IAAI,EAAArB,aAAA,CAAAA,aAAA,IAAUqB,IAAI,MAAE9D,UAAU,CAAE,CAAC8D,IAAI,CAAC9D,UAAU,EAAG,CAAE,CACrF+D,SAAS,CAAC,+FAA+F,CAAAC,QAAA,CAExGnE,aAAa,CAACG,UAAU,cAAG5H,IAAA,CAACX,MAAM,EAACoJ,IAAI,CAAE,EAAG,CAAE,CAAC,cAAGzI,IAAA,CAACZ,GAAG,EAACqJ,IAAI,CAAE,EAAG,CAAE,CAAC,CAChE,CAAC,EACR,CAAC,EACL,CAAC,EACR,CACL,CAGA,CAACtD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,UAAU,EAClEiD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,gBAAgB,gBACtEhC,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI1L,KAAA,QAAKyL,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,WAAS,CAAO,CAAC,cAC3D5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACS,SAAS,EAAI,EAAG,CACxDkG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAES,SAAS,CAAEmG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EACrF,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,gBAAgB,CAC/B,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,cAAY,CAAO,CAAC,cAC9D5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACU,WAAW,EAAI,EAAG,CAC1DiG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEU,WAAW,CAAEkG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EACvF,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,8BAA8B,CAC7C,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,UAAU,CAAAC,QAAA,eACrB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,eAAa,CAAO,CAAC,cAC/D5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACW,YAAY,EAAI,EAAG,CAC3DgG,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEW,YAAY,CAAEiG,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EACxF,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,WAAW,CAC1B,CAAC,EACD,CAAC,cACN/L,IAAA,QAAK2L,SAAS,CAAC,UAAU,CAAAC,QAAA,cACrB1L,KAAA,QAAKyL,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5B5L,IAAA,UACI2L,SAAS,CAAC,kBAAkB,CAC5BG,IAAI,CAAC,UAAU,CACfiC,OAAO,CAAE5I,eAAe,CAACG,gBAAgB,CAACY,oBAAoB,EAAI,KAAM,CACxE+F,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEY,oBAAoB,CAAEgG,CAAC,CAACC,MAAM,CAAC4B,OAAO,EAAC,EAClG,CAAE,CACHC,EAAE,CAAC,sBAAsB,CAC5B,CAAC,cACFhO,IAAA,UAAO2L,SAAS,CAAC,kBAAkB,CAACsC,OAAO,CAAC,sBAAsB,CAAArC,QAAA,CAAC,wBAEnE,CAAO,CAAC,EACP,CAAC,CACL,CAAC,EACR,CACL,CAGA,CAACzG,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,WAAW,EACnEiD,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,aAAa,gBACnEhC,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,yBAAuB,CAAO,CAAC,cACzE5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACa,sBAAsB,EAAI,EAAG,CACrE8F,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEa,sBAAsB,CAAE+F,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAClG,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,OAAO,CACtB,CAAC,cACF/L,IAAA,QAAK2L,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,sEAE3B,CAAK,CAAC,EACL,CACR,CAGAzG,eAAe,CAACG,gBAAgB,CAACpD,kBAAkB,GAAK,MAAM,eAC3DhC,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI1L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,uBAAqB,CAAO,CAAC,cACvE5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACc,mBAAmB,EAAI,EAAG,CAClE6F,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEc,mBAAmB,CAAE8F,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAC/F,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,0BAA0B,CACzC,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,uBAAqB,CAAO,CAAC,cACvE5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACe,kBAAkB,EAAI,EAAG,CACjE4F,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEe,kBAAkB,CAAE6F,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EAC9F,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,0BAA0B,CACzC,CAAC,EACD,CAAC,cACN7L,KAAA,QAAKyL,SAAS,CAAC,QAAQ,CAAAC,QAAA,eACnB5L,IAAA,UAAO2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,qCAAmC,CAAO,CAAC,cACrF5L,IAAA,UACI8L,IAAI,CAAC,MAAM,CACXE,KAAK,CAAE7G,eAAe,CAACG,gBAAgB,CAACgB,qBAAqB,EAAI,EAAG,CACpE2F,QAAQ,CAAGC,CAAC,EAAK9G,kBAAkB,CAAAiF,aAAA,CAAAA,aAAA,IAC5BlF,eAAe,MAClBG,gBAAgB,CAAA+E,aAAA,CAAAA,aAAA,IAAMlF,eAAe,CAACG,gBAAgB,MAAEgB,qBAAqB,CAAE4F,CAAC,CAACC,MAAM,CAACH,KAAK,EAAC,EACjG,CAAE,CACHL,SAAS,CAAC,wBAAwB,CAClCI,WAAW,CAAC,6BAA6B,CAC5C,CAAC,EACD,CAAC,EACR,CACL,EACI,CACR,CACA,CAAC,CACL,CAAC9H,aAAa,eACXjE,IAAA,QAAK2L,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cAC3C1L,KAAA,QAAKyL,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzB5L,IAAA,WACI6L,OAAO,CAAEA,CAAA,GAAMX,cAAc,CAAC,CAAE,CAChCS,SAAS,CAAC,iEAAiE,CAC3EgB,QAAQ,CAAElJ,iBAAiB,EAAIU,YAAa,CAAAyH,QAAA,CAE3CnI,iBAAiB,cACdvD,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,CAACN,MAAM,EAACiM,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,wBAEtD,EAAE,CAAC,cAEHvI,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,CAACb,QAAQ,EAACwM,SAAS,CAAC,MAAM,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,kBAE3C,EAAE,CACL,CACG,CAAC,cACTzI,IAAA,WACI6L,OAAO,CAAE1B,uBAAwB,CACjCwB,SAAS,CAAC,iEAAiE,CAC3EgB,QAAQ,CAAExI,YAAY,EAAIV,iBAAkB,CAAAmI,QAAA,CAE3CzH,YAAY,cACTjE,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eACI5L,IAAA,CAACN,MAAM,EAACiM,SAAS,CAAC,mBAAmB,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,CACjD1E,UAAU,CAAG,aAAa,CAAG,aAAa,EAC7C,CAAC,CAEHA,UAAU,CAAG,oBAAoB,CAAG,oBACvC,CACG,CAAC,EACR,CAAC,CACD,CACR,EACA,CAAC,CACL,CAAC,CACL,CACR,CAGAJ,oBAAoB,eACjB3D,IAAA,QAAK2L,SAAS,CAAC,gCAAgC,CAACY,KAAK,CAAE,CAAE2B,MAAM,CAAE,IAAK,CAAE,CAAAtC,QAAA,cACpE1L,KAAA,QAAKyL,SAAS,UAAA3B,MAAA,CAAWrG,oBAAoB,CAACsE,OAAO,CAAG,eAAe,CAAG,cAAc,wCAAuC,CAAC4E,IAAI,CAAC,OAAO,CAAAjB,QAAA,eACxI5L,IAAA,QAAK2L,SAAS,CAAC,MAAM,CAAAC,QAAA,CAChBjI,oBAAoB,CAACsE,OAAO,CAAG,GAAG,CAAG,GAAG,CACxC,CAAC,cACN/H,KAAA,QAAKyL,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxB1L,KAAA,WAAA0L,QAAA,EAAQ,kBAAgB,CAACjI,oBAAoB,CAACsE,OAAO,CAAG,YAAY,CAAG,QAAQ,EAAS,CAAC,cACzFjI,IAAA,QAAK,CAAC,CACL2D,oBAAoB,CAACiH,OAAO,EAC5B,CAAC,cACN5K,IAAA,WACI8L,IAAI,CAAC,QAAQ,CACbH,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAMjI,uBAAuB,CAAC,IAAI,CAAE,CAC7C,aAAW,OAAO,CACb,CAAC,EACT,CAAC,CACL,CACR,CAGAS,iBAAiB,EAAIE,WAAW,eAC7BvE,IAAA,QAAK2L,SAAS,CAAC,eAAe,CAACY,KAAK,CAAE,CAACiB,eAAe,CAAE,iBAAiB,CAAEW,QAAQ,CAAE,OAAO,CAAEC,GAAG,CAAE,CAAC,CAAEC,IAAI,CAAE,CAAC,CAAEtB,KAAK,CAAE,MAAM,CAAEuB,MAAM,CAAE,MAAM,CAAEJ,MAAM,CAAE,IAAI,CAAE,CAAAtC,QAAA,cACxJ5L,IAAA,QAAK2L,SAAS,CAAC,oCAAoC,CAAAC,QAAA,cAC/C1L,KAAA,QAAKyL,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC7C1L,KAAA,QAAKyL,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACvC5L,IAAA,OAAI2L,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAC1CnH,aAAa,CAAG,qBAAqB,CAAG,kBAAkB,CAC3D,CAAC,cACLzE,IAAA,WACI8L,IAAI,CAAC,QAAQ,CACbH,SAAS,CAAC,WAAW,CACrBE,OAAO,CAAEA,CAAA,GAAM,CACXvH,oBAAoB,CAAC,KAAK,CAAC,CAC3BE,cAAc,CAAC,IAAI,CAAC,CACpBE,gBAAgB,CAAC,KAAK,CAAC,CAC3B,CAAE,CACG,CAAC,EACT,CAAC,cACN1E,IAAA,QAAK2L,SAAS,CAAC,YAAY,CAAAC,QAAA,CACtBnH,aAAa,cACVvE,KAAA,QAAKyL,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7B5L,IAAA,CAACL,YAAY,EAAC8I,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACxD3L,IAAA,OAAI2L,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,mCAAiC,CAAI,CAAC,cAC3E1L,KAAA,MAAGyL,SAAS,CAAC,YAAY,CAAAC,QAAA,eACrB5L,IAAA,WAAA4L,QAAA,CAASrH,WAAW,CAAC7C,eAAe,CAAS,CAAC,iCAClD,EAAG,CAAC,EACH,CAAC,cAENxB,KAAA,QAAKyL,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7B5L,IAAA,CAACJ,aAAa,EAAC6I,IAAI,CAAE,EAAG,CAACkD,SAAS,CAAC,mBAAmB,CAAE,CAAC,cACzD3L,IAAA,OAAI2L,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,mDAAiD,CAAI,CAAC,cAC9E1L,KAAA,QAAKyL,SAAS,CAAC,6BAA6B,CAAAC,QAAA,eACxC5L,IAAA,OAAI2L,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAErH,WAAW,CAAC7C,eAAe,CAAK,CAAC,cACzE1B,IAAA,MAAG2L,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAErH,WAAW,CAAC1C,sBAAsB,CAAI,CAAC,EAC5E,CAAC,cACN7B,IAAA,MAAG2L,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAAC,6FAE7C,CAAG,CAAC,EACH,CACR,CACA,CAAC,CACL,CAACnH,aAAa,eACXvE,KAAA,QAAKyL,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACvC5L,IAAA,WACI6L,OAAO,CAAEA,CAAA,GAAM,CACXvH,oBAAoB,CAAC,KAAK,CAAC,CAC3BE,cAAc,CAAC,IAAI,CAAC,CACxB,CAAE,CACFmH,SAAS,CAAC,yCAAyC,CAAAC,QAAA,CACtD,QAED,CAAQ,CAAC,cACT1L,KAAA,WACI2L,OAAO,CAAEP,iBAAkB,CAC3BK,SAAS,CAAC,gEAAgE,CAAAC,QAAA,eAE1E5L,IAAA,CAACd,MAAM,EAACyM,SAAS,CAAC,MAAM,CAAClD,IAAI,CAAE,EAAG,CAAE,CAAC,qBAEzC,EAAQ,CAAC,EACR,CACR,EACA,CAAC,CACL,CAAC,CACL,CACR,EACA,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjI,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}